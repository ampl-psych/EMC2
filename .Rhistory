plot_factor = "R", type = "LBA", split = "R")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "S", type = "LBA", split = "R")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
# debug(make_design_plot)
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "S", type = "LBA", split = "R")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
# debug(make_design_plot)
make_design_plot(data = forstmann, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "R", type = "LBA", split = "R")
debug(make_design_plot)
make_design_plot(data = forstmann, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "R", type = "LBA", split = "R")
data_subset
pars_subset
v_vals
pars_subset
data <- make_emc(forstmann, design)
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
debug(make_design_plot)
data <- make_emc(forstmann, design_LBA)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "R", type = "LBA", split = "R")
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA", split = "R")
data <- data[data$winner,]
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.8, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
p_LBA <- c(v=1.5,v_lMd=.2, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.2, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.2, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = forstmann, pars = pars, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
pars
design_DDM <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~S,s~lM,a~E,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(s=log(1)))
design_DDM <- design(data = forstmann,model=DDM,matchfun=matchfun,
formula=list(v~S,s~lM,a~E,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(s=log(1)))
design_DDM <- design(data = forstmann,model=DDM,matchfun=matchfun,
formula=list(v~0+S,s~lM,a~E,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(s=log(1)))
p_DDM <- c(v_Sleft = -2, v_Sright = 2, s_lMTRUE = log(.5), a = log(1.5), a_Eneutral = .4,
a_Eaccuracy = .5, t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_DDM,design_DDM)
design_DDM <- design(data = forstmann,model=DDM,matchfun=matchfun,
formula=list(v~0+S,s~lM,a~E,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(s=log(1)))
p_DDM <- c(v_Sleft = -2, v_Sright = 2, s_lMTRUE = log(.5), a = log(1.5), a_Eneutral = .4,
a_Eaccuracy = .5, t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_DDM,design_DDM)
design_DDM <- design(data = forstmann,model=DDM,
formula=list(v~0+S,s~lM,a~E,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(s=log(1)))
p_DDM <- c(v_Sleft = -2, v_Sright = 2, s_lMTRUE = log(.5), a = log(1.5), a_Eneutral = .4,
a_Eaccuracy = .5, t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_DDM,design_DDM)
design_DDM <- design(data = forstmann,model=DDM,
formula=list(v~0+S,s~lM,a~E,t0~E),
constants=c(s=log(1)))
p_DDM <- c(v_Sleft = -2, v_Sright = 2, s_lMTRUE = log(.5), a = log(1.5), a_Eneutral = .4,
a_Eaccuracy = .5, t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_DDM,design_DDM)
design_DDM <- design(data = forstmann,model=DDM,
formula=list(v~0+S,s~1,a~E,t0~E),
constants=c(s=log(1)))
p_DDM <- c(v_Sleft = -2, v_Sright = 2, a = log(1.5), a_Eneutral = .4,
a_Eaccuracy = .5, t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_DDM,design_DDM)
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
pars_DDM <- mapped_par(p_DDM,design_DDM)
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "lM", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
pars_DDM
debug(make_design_plot)
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
v_vals
pars
devtools::load_all()
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
debug(make_design_plot)
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
devtools::load_all()
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
debug(make_design_plot)
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", B = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
devtools::load_all()
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", a = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
debug(make_design_plot)
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", a = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
pars
devtools::load_all()
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", a = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
debug(make_design_plot)
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", a = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
devtools::load_all()
debug(make_design_plot)
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", a = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
pars_subset
devtools::load_all()
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", a = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
devtools::load_all()
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", a = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "R")
pars_DDM <- mapped_par(p_DDM,design_DDM)
pars_DDM
devtools::load_all()
make_design_plot(data = forstmann, pars = pars_DDM, factors = list(v = "S", a = "E", t0 = "E"), main = "DDM Model", plot_legend = T,
plot_factor = NULL, type = "DDM", split = "S")
pars_DDM$
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
pars_DDM$
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
rm(list = ls())
devtools::load_all()
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
# We also define a match function for lM
matchfun=function(d)d$S==d$lR
design_LBA <- design(data = forstmann,model=LBA,matchfun=matchfun,
formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~E),
contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1)))
p_LBA <- c(v=1.5,v_lMd=.2, sv_lMTRUE = log(.5), B = log(2), B_Eneutral = .4,
B_Eaccuracy = .5, B_lRright = 0, A = log(.4), t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars <- mapped_par(p_LBA,design_LBA)
forstmann$lM <- factor(forstmann$S == forstmann$R)
# #
devtools::load_all()
data <- make_emc(forstmann, design_LBA, compress = F)[[1]]$data
data <- do.call(rbind, data)
data <- data[data$winner,]
# debug(make_design_plot)
design_DDM <- design(data = forstmann,model=DDM,
formula=list(v~0+S,s~1,a~E,t0~E),
constants=c(s=log(1)))
p_DDM <- c(v_Sleft = -2, v_Sright = 2, a = log(1.5), a_Eneutral = .4,
a_Eaccuracy = .5, t0=log(.2),
t0_Eaccuracy = .1, t0_Eneutral = .2)
pars_DDM <- mapped_par(p_DDM,design_DDM)
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = data, pars = pars, factors = list(v = NULL, B = "E", t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
make_design_plot(data = data, pars = pars, factors = list(v = "S", B = NULL, t0 = "E"), main = "LBA Model", plot_legend = T,
plot_factor = "lR", type = "LBA")
