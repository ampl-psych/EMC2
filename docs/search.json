[{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Simulation-based Calibration","text":"Simulation-based calibration(SBC) technique used validate calibrate Bayesian estimation methods models (Talts et al. 2018). SBC checks whether model correctly accounts uncertainty whether posterior distributions produces consistent true data-generating process. First outline perform SBC theory, describe experiences SBC EMC2, also illustrate perform SBC model.","code":""},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"how-to-sbc","dir":"Articles","previous_headings":"","what":"How to SBC","title":"Simulation-based Calibration","text":"briefly outline steps performing SBC, detail refer reader Talts et al. (2018).","code":""},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"specify-the-probabilistic-model","dir":"Articles","previous_headings":"How to SBC","what":"1. Specify the Probabilistic Model","title":"Simulation-based Calibration","text":"Define Bayesian model ’re working . includes specifying prior distribution parameters likelihood function connects data parameters. example, suppose model set parameters α\\alpha observed data yy y∼p(y|α)y \\sim p(y|\\alpha) α∼p(α)\\alpha \\sim p(\\alpha).","code":""},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"simulate-parameters-and-data","dir":"Articles","previous_headings":"How to SBC","what":"2. Simulate Parameters and Data","title":"Simulation-based Calibration","text":"Sample Parameters: Draw large number sets parameters α()\\alpha^{()} prior distribution p(α)p(\\alpha). Simulate Data: set parameters α()\\alpha^{()}, simulate dataset y()y^{()} likelihood p(y|α())p(y|\\alpha^{()}).","code":""},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"compute-posterior-distributions","dir":"Articles","previous_headings":"How to SBC","what":"3. Compute Posterior Distributions","title":"Simulation-based Calibration","text":"simulated dataset y()y^{()}, compute posterior distribution p(α|y())p(\\alpha | y^{()}) using Bayesian model.","code":""},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"evaluate-the-rank-statistics","dir":"Articles","previous_headings":"How to SBC","what":"4. Evaluate the Rank Statistics","title":"Simulation-based Calibration","text":"simulated dataset, determine set true parameters α()\\alpha^{()} ranks posterior samples α\\alpha. EMC2 thin posterior equal effective sample size. rank essentially number posterior samples less true α()\\alpha^{()}. Normalize ranks lie 0 1. rank statistic.","code":""},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"check-uniformity","dir":"Articles","previous_headings":"How to SBC","what":"5. Check Uniformity","title":"Simulation-based Calibration","text":"Aggregate rank statistics across simulated data-sets. model well-calibrated, ranks uniformly distributed posterior correctly reflect uncertainty parameter. Plot rank statistics. present histograms rank statistic plots compares empirical cumulative rank cumulative density function uniform distribution.","code":""},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"non-hierarchical-sbc-in-emc2","dir":"Articles","previous_headings":"","what":"Non-hierarchical SBC in EMC2","title":"Simulation-based Calibration","text":"EMC2 allows hierarchical non-hierarchical estimation. Given desirable statistical estimation properties hierarchical models, normally recommend use hierarchical models. However, given estimating hundreds models quite time consuming practically unfeasible without computational server, recommend running SBC non-hierarchical models typical applications. use LBA DDM illustrate non-hierarchical SBC. Later ’ll also perform hierarchical SBC LBA, DDM, RDM LNR. First clear workspace load EMC2","code":"rm(list = ls()) library(EMC2)"},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"compression","dir":"Articles","previous_headings":"Non-hierarchical SBC in EMC2","what":"Compression","title":"Simulation-based Calibration","text":"start SBC, want give quick note data compression. default EMC2 compresses RTs bins 20ms, since typical lab set-ups allow response times measured higher resolution. However, generated data subject physical constraints. Therefore, avoid biases, compression turned SBC functions. turn compression regardless, can set compression = TRUE, set resolution using rt_resolution = 0.02 (example) run_sbc function, speed computation potentially introduces biases.","code":""},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"lba","dir":"Articles","previous_headings":"Non-hierarchical SBC in EMC2","what":"LBA","title":"Simulation-based Calibration","text":"run SBC specify design prior model. EMC2 assumes normal priors parameters non-hierarchical models. Thus, parameters transformed better match normal prior satisfy assumption normal distribution full support real line. check parameter transformations use ?LBA . Now plot prior, map = TRUE (default) see implied prior transformed parameters.  Next can simply call run_sbc specified design prior. can use ?run_sbc see description function arguments. trials argument refers number trials per cell. Since 2-level S factor design (designs used), thus simulate 200 trials per data set. Also note default run_sbc estimate till point-scale reduction factor smaller 1.1 minimum effective sample size estimated parameters larger 100. non-hierarchical models, setting cores_per_chain = 30 estimate 30 simulated data-sets simultaneously. feasible computational server used. given LBA quick compute, non-hierarchical SBC also feasible personal computer. recommended specify fileName store intermediary results case crashes. EMC2 also comes plotting functions allow us visualize results. First can plot standard histograms, number equally spaced bins 0 1 normalized rank statistic.  gray lines indicate 2.5, 50 97.5% percentile n samples uniform distribution expected fall. can see bins nicely within bounds clear pattern emerges. However, visualization much depends bin size, pointed Talts et al. (2018). Therefore EMC also comes plots visualize difference empirical cumulative density function (ecdf) cumulative density function uniform distribution.  dinosaur eggs blue area visualizes 95% area expected cumulative values. real eggs, observed line, (.e. cracks) obviously lie somewhere egg. explanation guide interpretation plots recommend following article https://hyunjimoon.github.io/SBC/articles/rank_visualizations.html. remainder article ’ll use plots visualize SBC results.","code":"matchfun <- function(d) d$S == d$lR  design_LBA <- design(factors=list(subjects=1,S=c(\"left\", \"right\")),                      Rlevels = c(\"left\", \"right\"),                      matchfun = matchfun,                      formula =list(v~lM,B~1, t0~1, sv~1, A~1),                      constants=c(sv=log(1)),                      model = LBA)  prior_LBA <- prior(design_LBA, type = \"single\",                   pmean = c(1.3, .7, log(.8), log(.2), log(.3)),                   psd = c(.2, .1, .1, .05, .05)) plot(prior_LBA) SBC_LBA_single <- run_sbc(design_LBA, prior_LBA, replicates = 500, trials = 100, plot_data = FALSE,                   iter = 1000, n_post = 1000, fileName = \"SBC_data/SBC_LBA_single.RData\",                   cores_per_chain = 30) plot_sbc_hist(SBC_LBA_single, bins = 10) plot_sbc_ecdf(SBC_LBA_single)"},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"ddm","dir":"Articles","previous_headings":"Non-hierarchical SBC in EMC2","what":"DDM","title":"Simulation-based Calibration","text":"Next test non-hierarchical DDM well. Initial results actually showed bias estimation non-decision time non-decision time variability. Whereas first based DDM implementation rtdists package (Singmann et al. 2022). bias led us explore alternative packages, eventually brought us WienR package (Hartmann Klauer 2023). package offers faster likelihood evaluations also eliminates bias observed SBC results. Hence CRAN release 2.1.0 adapted code instead use WienR C++ routines. SBC used following prior design settings, mindful required transformations. Next plot ECDF difference plot .  see minor biases sv, nothing concerning. double check, repeated analysis, confirmed bias systematic.","code":"#?DDM design_DDM <- design(factors=list(subjects=1,S=c(\"left\", \"right\")),                        Rlevels = c(\"left\", \"right\"),                        formula =list(v~1,a~1, t0~1, s~1, Z~1, sv~1, SZ~1, st0 ~ 1),                        constants=c(s=log(1)),                        model = DDM)   prior_DDM <- prior(design_DDM, type = \"single\",                   pmean = c(1, log(.8), log(.3), qnorm(.5), log(.1), qnorm(.05), log(.05)),                   psd = c(.15, .15, .1, .05, .15, .15, .15))  SBC_DDM_single <- run_sbc(design_DDM, prior_DDM, replicates = 500, trials = 100,                            fileName = \"SBC_data/SBC_DDM_single.RData\", cores_per_chain = 30) plot_sbc_ecdf(SBC_DDM_single)"},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"hierarchical-sbc","dir":"Articles","previous_headings":"","what":"Hierarchical SBC","title":"Simulation-based Calibration","text":"Besides friendly introduction SBC EMC2, post also serves test unbiased estimation four main classes EAMs included EMC2. However, depending research question, running non-hierarchical SBC might suffice far computationally efficient. approach running hierarchical SBC similar running non-hierarchical SBC. However can now write model data yy y∼p(y|α)p(α|θ)p(θ)y \\sim p(y|\\alpha)p(\\alpha|\\theta)p(\\theta). p(θ)p(\\theta) prior group-level parameters. generated data one sample y()y^{()} still generated α()\\alpha^{()}, α()\\alpha^{()} generated θ()\\theta^{()}, θ()∼p(θ)\\theta^{()} \\sim p(\\theta).","code":""},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"prior-structure","dir":"Articles","previous_headings":"Hierarchical SBC","what":"Prior structure","title":"Simulation-based Calibration","text":"Although paper rely prior structure defined Huang Wand (2013), also default EMC2, prior structure lot mass near zero group-level variance parameters (half-t distribution). Bayesian posterior view prior structures attractive (Gelman 2006), since artificially increase variance estimates thus err safe side. However, SBC data-generation means sample many data-sets individual differences. Unfortunately, numerical reasons EMC2 recover true zero group-level variances. Thus, EMC2 struggle converge identify level individual differences, although may small. Therefore, type = \"standard\" prior structure results biased SBC variance estimates. Therefore, SBC recommend using type = \"diagonal-gamma\", name suggests uses gamma distributions variance parameters, less mass zero. Nevertheless believe standard prior problematic real data, since always contain least degree individual differences (true zero recovered). Therefore remain default prior EMC2 now, though type “diagonal-gamma” available user well.","code":""},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"lba-1","dir":"Articles","previous_headings":"Hierarchical SBC","what":"LBA","title":"Simulation-based Calibration","text":"Now dive hierarchical SBC LBA model. prior structure chose follows. extra mindful choosing prior ensures plausible generated data, since ’s double propagation induced variance prior. First prior standard deviation group-level mean, also prior group-level variance. can also plot implied prior range subject-level parameters:  actually run SBC, can use function , now also specifying many subjects want hierarchical model can also plot results using plot_sbc_ecdf function. now generate set ECDF difference plots hierarchical variance ranks hierarchical means ranks:  can see good results hierarchical SBC noticable bias group-level mean variance parameters.","code":"n_subjects <- 30 #  matchfun <- function(d) d$S == d$lR  design_LBA <- design(factors=list(subjects=1:n_subjects,S=c(\"left\", \"right\")),                      Rlevels = c(\"left\", \"right\"),                      matchfun = matchfun,                      formula =list(v~lM,B~1, t0~1, sv~1, A~1),                      constants=c(sv=log(1)),                      model = LBA)  prior_LBA <- prior(design_LBA, type = \"diagonal-gamma\",                   mu_mean = c(1.3, .7, log(.8), log(.2), log(.3)),                   mu_sd = c(.2, .1, .1, .05, .05),                   shape = 10,                   rate = c(.2, .2, .2, .1, .1)) plot(prior_LBA, selection = \"alpha\") SBC_LBA <- run_sbc(design_LBA, prior_LBA, replicates = 500, trials = 100,                         n_subjects = n_subjects, fileName = \"SBC_data/SBC_LBA.RData\", cores_per_chain = 30) plot_sbc_ecdf(SBC_LBA)"},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"ddm-1","dir":"Articles","previous_headings":"Hierarchical SBC","what":"DDM","title":"Simulation-based Calibration","text":"also tested hierarchical SBC seven parameter DDM. chose priors carefully match realistic behavioral data. contrast models, generated 200 (instead 100) trials per person per cell, since 100 trials model sometimes converge slow converge. also generated 250 data sets due large computational costs associated running full hierarchical DDM. group-level means look unbiased, group-level variance trial variability parameters overestimated bit. note effective sample size parameters also small (although minimum 100), can bias results (Talts et al. 2018).","code":"n_subjects <- 30  design_DDM <- design(factors=list(subjects=1:n_subjects,S=c(\"left\", \"right\")),                        Rlevels = c(\"left\", \"right\"),                        formula =list(v~1,a~1, t0~1, s~1, Z~1, sv~1, SZ~1, st0 ~ 1),                        constants=c(s=log(1)),                        model = DDM)   prior_DDM <- prior(design_DDM, type = \"diagonal-gamma\",                   pmean = c(1.2, log(.8), log(.3), qnorm(.5), log(.1), qnorm(.05), log(.05)),                   psd = c(.15, .15, .1, .05, .1, .1, .15),                   shape = 10,                   rate = c(.2, .2, .2, .1, .1, .1, .1)) SBC_DDM <- run_sbc(design_DDM, prior_DDM, replicates = 250, trials = 200,                         n_subjects = n_subjects, fileName = \"SBC_data/SBC_DDM.RData\", cores_per_chain = 30) plot_sbc_ecdf(SBC_DDM)"},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"rdm","dir":"Articles","previous_headings":"Hierarchical SBC","what":"RDM","title":"Simulation-based Calibration","text":"completeness proof correct implementation also test hierarchical SBC RDM following model definition prior structure. note SBC shows bias hierarchical RDM model:","code":"n_subjects <- 30  matchfun <- function(d) d$S == d$lR   design_RDM <- design(factors=list(subjects=1:n_subjects,S=c(\"left\", \"right\")),                      Rlevels = c(\"left\", \"right\"),                      matchfun = matchfun,                      formula =list(v~lM,B~1, t0~1, A~1, s ~ 1),                      constants=c(s=log(1)),                      model = RDM)  prior_RDM <- prior(design_RDM, type = \"diagonal-gamma\",                   mu_mean = c(1.4, .3, log(1.5), log(.2), log(.3)),                   mu_sd = c(.05, .1, .1, .05, .05),                   shape = 10,                   rate = c(.1, .2, .2, .2, .1))  SBC_RDM <- run_sbc(design_RDM, prior_RDM, replicates = 500, trials = 100,                         n_subjects = n_subjects, fileName = \"SBC_RDM.RData\", cores_per_chain = 30) plot_sbc_ecdf(SBC_RDM)"},{"path":"https://ampl-psych.github.io/EMC2/articles/Simulation-based-Calibration.html","id":"lnr","dir":"Articles","previous_headings":"Hierarchical SBC","what":"LNR","title":"Simulation-based Calibration","text":"Lastly, run hierarchical SBC LNR following specification LNR hierarchical SBC also shows considerable bias:","code":"n_subjects <- 30  matchfun <- function(d) d$S == d$lR  design_LNR <- design(factors=list(subjects=1:n_subjects,S=c(\"left\", \"right\")),                      Rlevels = c(\"left\", \"right\"),                      matchfun = matchfun,                      formula =list(m~lM,s~1, t0~1),                      model = LNR)  prior_LNR <- prior(design_LNR, type = \"diagonal-gamma\",                   mu_mean = c(-.7, -.5, log(1), log(.2)),                   mu_sd = c(.2, .1, .1, .05),                   shape = 10,                   rate = c(.2, .2, .2, .1))  SBC_LNR <- run_sbc(design_LNR, prior_LNR, replicates = 500, trials = 100,                         n_subjects = n_subjects, fileName = \"SBC_LNR.RData\", cores_per_chain = 30) plot_sbc_ecdf(SBC_LNR, layout = c(2,2))"},{"path":[]},{"path":"https://ampl-psych.github.io/EMC2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Niek Stevenson. Author, maintainer. Michelle Donzallaz. Author. Andrew Heathcote. Author. Steven Miletić. Contributor. Raphael Hartmann. Contributor. Karl C. Klauer. Contributor. Steven G. Johnson. Contributor. Jean M. Linhart. Contributor. Brian Gough. Contributor. Gerard Jungman. Contributor. Rudolf Schuerer. Contributor. Przemyslaw Sliwa. Contributor. Jason H. Stover. Contributor.","code":""},{"path":"https://ampl-psych.github.io/EMC2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stevenson N, Donzallaz M, Heathcote (2025). EMC2: Bayesian Hierarchical Analysis Cognitive Models Choice. R package version 3.1.1, https://github.com/ampl-psych/EMC2, https://ampl-psych.github.io/EMC2/.","code":"@Manual{,   title = {EMC2: Bayesian Hierarchical Analysis of Cognitive Models of Choice},   author = {Niek Stevenson and Michelle Donzallaz and Andrew Heathcote},   year = {2025},   note = {R package version 3.1.1, https://github.com/ampl-psych/EMC2},   url = {https://ampl-psych.github.io/EMC2/}, }"},{"path":"https://ampl-psych.github.io/EMC2/index.html","id":"emc2-extended-models-of-choice-2","dir":"","previous_headings":"","what":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","title":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","text":"R package EMC2 provides tools perform Bayesian hierarchical analyses following cognitive models: Diffusion Decision Model (DDM), Linear Ballistic Accumulator Model (LBA), Racing Diffusion Model (RDM), Lognormal Racing Model (LNR). Specifically, package provides functionality specifying individual model designs, estimating models, examining convergence well model fit posterior prediction methods. also includes various plotting functions relative model comparison methods Bayes factors. addition, users can specify likelihood function perform non-hierarchical estimation. package uses particle metropolis Markov chain Monte Carlo sampling. hierarchical models, uses efficient Gibbs sampling population level supports variety covariance structures, extending work Gunawan colleagues (2020).","code":""},{"path":"https://ampl-psych.github.io/EMC2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","text":"install R package, dependencies can use install.packages(\"EMC2\") development version: remotes::install_github(\"ampl-psych/EMC2\",dependencies=TRUE)","code":""},{"path":"https://ampl-psych.github.io/EMC2/index.html","id":"workflow-overview","dir":"","previous_headings":"","what":"Workflow Overview","title":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","text":"Pictured four phases EMC2cognitive model analysis associated functions:.      details, please see: Stevenson, N., Donzallaz, M. C., Innes, R. J., Forstmann, B., Matzke, D., & Heathcote, . (2024, January 30). EMC2: R Package cognitive models choice. https://doi.org/10.31234/osf.io/2e4dq","code":""},{"path":"https://ampl-psych.github.io/EMC2/index.html","id":"bug-reports-contributing-and-feature-requests","dir":"","previous_headings":"","what":"Bug Reports, Contributing, and Feature Requests","title":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","text":"come across bugs, ideas extensions EMC2, can add issue . like contribute package’s code, please submit pull request.","code":""},{"path":"https://ampl-psych.github.io/EMC2/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","text":"Stevenson, N., Donzallaz, M. C., Innes, R. J., Forstmann, B., Matzke, D., & Heathcote, . (2024, January 30). EMC2: R Package cognitive models choice. https://doi.org/10.31234/osf.io/2e4dq Gunawan, D., Hawkins, G. E., Tran, M. N., Kohn, R., & Brown, S. D. (2020). New estimation approaches hierarchical Linear Ballistic Accumulator model. Journal Mathematical Psychology, 96, 102368. https://doi.org/10.1016/j.jmp.2020.102368","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDM.html","id":null,"dir":"Reference","previous_headings":"","what":"The Diffusion Decision Model — DDM","title":"The Diffusion Decision Model — DDM","text":"Model file estimate Diffusion Decision Model (DDM) EMC2.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Diffusion Decision Model — DDM","text":"","code":"DDM()"},{"path":"https://ampl-psych.github.io/EMC2/reference/DDM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Diffusion Decision Model — DDM","text":"model list necessary functions EMC2 sample","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Diffusion Decision Model — DDM","text":"Model files almost exclusively used design(). Default values used parameters explicitly listed formula argument design().can also accessed DDM()$p_types. , t0, sv, st0, s sampled log scale parameters strictly positive, Z, SZ DP sampled probit scale strictly 0 1. Z estimated ratio bias one boundary 0.5 means bias. DP comprises difference non-decision time response option. Conventionally, s fixed 1 satisfy scaling constraints. See Ratcliff, R., & McKoon, G. (2008). diffusion decision model: theory data two-choice decision tasks. Neural computation, 20(4), 873-922. doi:10.1162/neco.2008.12-06-420.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Diffusion Decision Model — DDM","text":"","code":"design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  # For all parameters that are not defined in the formula, default values are assumed # (see Table above)."},{"path":"https://ampl-psych.github.io/EMC2/reference/DDMGNG.html","id":null,"dir":"Reference","previous_headings":"","what":"The GNG (go/nogo) Diffusion Decision Model — DDMGNG","title":"The GNG (go/nogo) Diffusion Decision Model — DDMGNG","text":"GNG paradigm one two possible choices results response withheld (non-response), indicated data NA rt, corresponding level R (response) factor still specified. example, suppose go response coded \"yes\" nogo coded \"\", non-response (R,rt) = (\"\",NA) response e.g., (R,rt) = (\"yes\",1.36). GNG paradigm must also response","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDMGNG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The GNG (go/nogo) Diffusion Decision Model — DDMGNG","text":"","code":"DDMGNG()"},{"path":"https://ampl-psych.github.io/EMC2/reference/DDMGNG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The GNG (go/nogo) Diffusion Decision Model — DDMGNG","text":"model list necessary functions sample","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDMGNG.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The GNG (go/nogo) Diffusion Decision Model — DDMGNG","text":"model used described following paper, addition modeling TIMEOUT (considered used paper). Gomez, P., Ratcliff, R., & Perea, M. (2007). Model Go/-Go Task. Journal Experimental Psychology: General, 136(3), 389–413. https://doi.org/10.1037/0096-3445.136.3.389 likelihood non-responses requires evaluation DDM cdf, specifically 1 - p(hitting yes boundary TIMEOUT). use models three functions must supplied design's function argument names TIMEOUT, Rnogo Rgo. example, assuming 2.5 second timeout, R factor levels c(\"\",\"yes\") \"\" mapping non-response. TIMEOUT=function(d)rep(2.5,nrow(d)) Rnogo=function(d)factor(rep(\"\",nrow(d)),levels=c(\"\",\"yes\")) Rgo=function(d)factor(rep(\"yes\",nrow(d)),levels=c(\"\",\"yes\"))) See help DDM details. present model fully implemented C, little slower use DDM, greatly.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDMGNG.html","id":"window-i-e-a-length-of-time-timeout-period-after-which-withholding-is","dir":"Reference","previous_headings":"","what":"window (i.e., a length of time, TIMEOUT period, after which withholding is","title":"The GNG (go/nogo) Diffusion Decision Model — DDMGNG","text":"assumed).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDMGNG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The GNG (go/nogo) Diffusion Decision Model — DDMGNG","text":"","code":"dGNG <- design(Rlevels = c(\"left\",\"right\"),                factors=list(subjects=1,S=c(\"left\",\"right\")),                functions=list(                TIMEOUT=function(d)rep(2.5,nrow(d)),                # no go response level                Rnogo=function(d)factor(rep(\"left\",nrow(d)),levels=c(\"left\",\"right\")),                # go response level                Rgo=function(d)factor(rep(\"right\",nrow(d)),levels=c(\"left\",\"right\"))),                formula=list(v~S,a~1, Z~1, t0~1),                model=DDMGNG) #> Parameter(s) SZ, s, st0, sv not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v\"        \"v_Sright\" \"a\"        \"Z\"        \"t0\"       #>  #>  Design Matrices:  #> $v #>      S v v_Sright #>   left 1        0 #>  right 1        1 #>  #> $a #>  a #>  1 #>  #> $Z #>  Z #>  1 #>  #> $t0 #>  t0 #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $s #>  s #>  1 #>  #> $st0 #>  st0 #>    1 #>  #> $sv #>  sv #>   1 #>   p_vector <- sampled_pars(dGNG)"},{"path":"https://ampl-psych.github.io/EMC2/reference/EMC2-package.html","id":null,"dir":"Reference","previous_headings":"","what":"EMC2: Bayesian Hierarchical Analysis of Cognitive Models of Choice — EMC2-package","title":"EMC2: Bayesian Hierarchical Analysis of Cognitive Models of Choice — EMC2-package","text":"Fit Bayesian (hierarchical) cognitive models using linear modeling language interface using particle Metropolis Markov chain Monte Carlo sampling Gibbs steps. diffusion decision model (DDM), linear ballistic accumulator model (LBA), racing diffusion model (RDM), lognormal race model (LNR) supported. Additionally, users can specify likelihood function /choose non-hierarchical estimation, well diagonal, blocked full multivariate normal group-level distribution test individual differences. Prior specification facilitated methods visualize (implied) prior. wide range plotting functions assist assessing model convergence posterior inference. Models can easily evaluated using functions plot posterior predictions using relative model comparison metrics information criteria Bayes factors. References: Stevenson et al. (2024) doi:10.31234/osf.io/2e4dq .","code":""},{"path":[]},{"path":"https://ampl-psych.github.io/EMC2/reference/EMC2-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EMC2: Bayesian Hierarchical Analysis of Cognitive Models of Choice — EMC2-package","text":"Maintainer: Niek Stevenson niek.stevenson@gmail.com (ORCID) Authors: Michelle Donzallaz Andrew Heathcote contributors: Steven Miletić [contributor] Raphael Hartmann [contributor] Karl C. Klauer [contributor] Steven G. Johnson [contributor] Jean M. Linhart [contributor] Brian Gough [contributor] Gerard Jungman [contributor] Rudolf Schuerer [contributor] Przemyslaw Sliwa [contributor] Jason H. Stover [contributor]","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LBA.html","id":null,"dir":"Reference","previous_headings":"","what":"The Linear Ballistic Accumulator model — LBA","title":"The Linear Ballistic Accumulator model — LBA","text":"Model file estimate Linear Ballistic Accumulator (LBA) EMC2.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LBA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Linear Ballistic Accumulator model — LBA","text":"","code":"LBA()"},{"path":"https://ampl-psych.github.io/EMC2/reference/LBA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Linear Ballistic Accumulator model — LBA","text":"model list necessary functions EMC2 sample","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LBA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Linear Ballistic Accumulator model — LBA","text":"Model files almost exclusively used design(). Default values used parameters explicitly listed formula argument design().can also accessed LBA()$p_types. parameters estimated log scale, except drift rate estimated real line. Conventionally, sv fixed 1 satisfy scaling constraints. b = B + parameterization ensures response threshold always higher trial variation start point drift rate. LBA race model, one accumulator per response option. EMC2 automatically constructs factor representing accumulators lR (.e., latent response) level names taken R column data. lR factor mainly used allow response bias, analogous Z DDM. example, LBA, response thresholds determined B parameters, B~lR allows different thresholds accumulator corresponding left right stimuli (e.g., bias respond left occurs left threshold less right threshold). race models, design() argument matchfun can provided, function takes lR factor (defined augmented data (d) following function) returns logical defining correct response. example , match simply S factor equals latent response factor: matchfun=function(d)d$S==d$lR. matchfun used automatically create latent match (lM) factor levels FALSE (.e., stimulus match accumulator) TRUE (.e., stimulus match accumulator). added internally can also used model formula, typically parameters related rate accumulation. Brown, S. D., & Heathcote, . (2008). simplest complete model choice response time: Linear ballistic accumulation. Cognitive Psychology, 57(3), 153-178. https://doi.org/10.1016/j.cogpsych.2007.12.002","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LBA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Linear Ballistic Accumulator model — LBA","text":"","code":"# When working with lM it is useful to design  an \"average and difference\" # contrast matrix, which for binary responses has a simple canonical from: ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"d\")) # We also define a match function for lM matchfun=function(d)d$S==d$lR # We now construct our design, with v ~ lM and the contrast for lM the ADmat. design_LBABE <- design(data = forstmann,model=LBA,matchfun=matchfun,                        formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~1),                        contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1))) #>  #>  Sampled Parameters:  #> [1] \"v\"           \"v_lMd\"       \"sv_lMTRUE\"   \"B\"           \"B_Eneutral\"  #> [6] \"B_Eaccuracy\" \"B_lRright\"   \"A\"           \"t0\"          #>  #>  Design Matrices:  #> $v #>     lM v v_lMd #>   TRUE 1   0.5 #>  FALSE 1  -0.5 #>  #> $sv #>     lM sv sv_lMTRUE #>   TRUE  1         1 #>  FALSE  1         0 #>  #> $B #>         E    lR B B_Eneutral B_Eaccuracy B_lRright #>     speed  left 1          0           0         0 #>     speed right 1          0           0         1 #>   neutral  left 1          1           0         0 #>   neutral right 1          1           0         1 #>  accuracy  left 1          0           1         0 #>  accuracy right 1          0           1         1 #>  #> $A #>  A #>  1 #>  #> $t0 #>  t0 #>   1 #>  # For all parameters that are not defined in the formula, default values are assumed # (see Table above)."},{"path":"https://ampl-psych.github.io/EMC2/reference/LNR.html","id":null,"dir":"Reference","previous_headings":"","what":"The Log-Normal Race Model — LNR","title":"The Log-Normal Race Model — LNR","text":"Model file estimate Log-Normal Race Model (LNR) EMC2.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LNR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Log-Normal Race Model — LNR","text":"","code":"LNR()"},{"path":"https://ampl-psych.github.io/EMC2/reference/LNR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Log-Normal Race Model — LNR","text":"model list necessary functions EMC2 sample","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LNR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Log-Normal Race Model — LNR","text":"Model files almost exclusively used design(). Default values used parameters explicitly listed formula argument design().can also accessed LNR()$p_types. LNR race model, one accumulator per response option. EMC2 automatically constructs factor representing accumulators lR (.e., latent response) level names taken R column data. design(), matchfun can used automatically create latent match (lM) factor levels FALSE (.e., stimulus match accumulator) TRUE (.e., stimulus match accumulator). added internally can also used model formula, typically parameters related rate accumulation (see example ). Rouder, J. N., Province, J. M., Morey, R. D., Gomez, P., & Heathcote, . (2015). lognormal race: cognitive-process model choice latency desirable psychometric properties. Psychometrika, 80, 491-513. https://doi.org/10.1007/s11336-013-9396-3","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LNR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Log-Normal Race Model — LNR","text":"","code":"# When working with lM it is useful to design  an \"average and difference\" # contrast matrix, which for binary responses has a simple canonical from: ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"d\")) # We also define a match function for lM matchfun=function(d)d$S==d$lR # We now construct our design, with v ~ lM and the contrast for lM the ADmat. design_LNRmE <- design(data = forstmann,model=LNR,matchfun=matchfun,                        formula=list(m~lM + E,s~1,t0~1),                        contrasts=list(m=list(lM=ADmat))) #>  #>  Sampled Parameters:  #> [1] \"m\"           \"m_lMd\"       \"m_Eneutral\"  \"m_Eaccuracy\" \"s\"           #> [6] \"t0\"          #>  #>  Design Matrices:  #> $m #>     lM        E m m_lMd m_Eneutral m_Eaccuracy #>   TRUE    speed 1   0.5          0           0 #>  FALSE    speed 1  -0.5          0           0 #>   TRUE  neutral 1   0.5          1           0 #>  FALSE  neutral 1  -0.5          1           0 #>   TRUE accuracy 1   0.5          0           1 #>  FALSE accuracy 1  -0.5          0           1 #>  #> $s #>  s #>  1 #>  #> $t0 #>  t0 #>   1 #>  # For all parameters that are not defined in the formula, default values are assumed # (see Table above)."},{"path":"https://ampl-psych.github.io/EMC2/reference/RDM.html","id":null,"dir":"Reference","previous_headings":"","what":"The Racing Diffusion Model — RDM","title":"The Racing Diffusion Model — RDM","text":"Model file estimate Racing Diffusion Model (RDM), also known Racing Wald Model.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/RDM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Racing Diffusion Model — RDM","text":"","code":"RDM()"},{"path":"https://ampl-psych.github.io/EMC2/reference/RDM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Racing Diffusion Model — RDM","text":"list defining cognitive model","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/RDM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Racing Diffusion Model — RDM","text":"Model files almost exclusively used design(). Default values used parameters explicitly listed formula argument design().can also accessed RDM()$p_types. parameters estimated log scale. parameterization b = B + ensures response threshold always higher trial variation start point. Conventionally, s fixed 1 satisfy scaling constraints. RDM race model, one accumulator per response option. EMC2 automatically constructs factor representing accumulators lR (.e., latent response) level names taken R column data. lR factor mainly used allow response bias, analogous Z DDM. example, RDM, response thresholds determined B parameters, B~lR allows different thresholds accumulator corresponding \"left\" \"right\" stimuli, example, (e.g., bias respond left occurs left threshold less right threshold). race models general, argument matchfun can provided design(). One needs supply function takes lR factor (defined augmented data (d) following function) returns logical defining correct response. example , simply whether S factor equals latent response factor: matchfun=function(d)d$S==d$lR. Using matchfun latent match factor (lM) levels FALSE (.e., stimulus match accumulator) TRUE (.e., stimulus match accumulator). added internally can also used model formula, typically parameters related rate accumulation. Tillman, G., Van Zandt, T., & Logan, G. D. (2020). Sequential sampling models without random -trial variability: racing diffusion model speeded decision making. Psychonomic Bulletin & Review, 27(5), 911-936. https://doi.org/10.3758/s13423-020-01719-6","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/RDM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Racing Diffusion Model — RDM","text":"","code":"# When working with lM it is useful to design  an \"average and difference\" # contrast matrix, which for binary responses has a simple canonical from: ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"d\")) # We also define a match function for lM matchfun=function(d)d$S==d$lR # We now construct our design, with v ~ lM and the contrast for lM the ADmat. design_RDMBE <- design(data = forstmann,model=RDM,matchfun=matchfun,                        formula=list(v~lM,s~lM,B~E+lR,A~1,t0~1),                        contrasts=list(v=list(lM=ADmat)),constants=c(s=log(1))) #>  #>  Sampled Parameters:  #> [1] \"v\"           \"v_lMd\"       \"s_lMTRUE\"    \"B\"           \"B_Eneutral\"  #> [6] \"B_Eaccuracy\" \"B_lRright\"   \"A\"           \"t0\"          #>  #>  Design Matrices:  #> $v #>     lM v v_lMd #>   TRUE 1   0.5 #>  FALSE 1  -0.5 #>  #> $s #>     lM s s_lMTRUE #>   TRUE 1        1 #>  FALSE 1        0 #>  #> $B #>         E    lR B B_Eneutral B_Eaccuracy B_lRright #>     speed  left 1          0           0         0 #>     speed right 1          0           0         1 #>   neutral  left 1          1           0         0 #>   neutral right 1          1           0         1 #>  accuracy  left 1          0           1         0 #>  accuracy right 1          0           1         1 #>  #> $A #>  A #>  1 #>  #> $t0 #>  t0 #>   1 #>  # For all parameters that are not defined in the formula, default values are assumed # (see Table above)."},{"path":"https://ampl-psych.github.io/EMC2/reference/SDT.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Signal Detection Theory Model for Binary Responses — SDT","title":"Gaussian Signal Detection Theory Model for Binary Responses — SDT","text":"Discrete binary choice based continuous Gaussian latent, rt (rt must set NA data).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/SDT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Signal Detection Theory Model for Binary Responses — SDT","text":"","code":"SDT()"},{"path":"https://ampl-psych.github.io/EMC2/reference/SDT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Signal Detection Theory Model for Binary Responses — SDT","text":"model list necessary functions sample","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/SDT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gaussian Signal Detection Theory Model for Binary Responses — SDT","text":"Model parameters : mean (unbounded) sd (log scale) threshold (unbounded). identifiability one condition two parameters must fixed (conventionally mean=0 sd = 1). used data records accuracy (reponse bias evaluated) single threshold must assumed fixed (e.g., threshold = 0). present model fully implemented C, likelihood requires pnorm evaluation quite fast.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/SDT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gaussian Signal Detection Theory Model for Binary Responses — SDT","text":"","code":"dprobit <- design(Rlevels = c(\"left\",\"right\"),            factors=list(subjects=1,S=c(\"left\",\"right\")),            formula=list(mean ~ 0+S, sd ~ 1,threshold ~ 1),            matchfun=function(d)d$S==d$lR,            constants=c(sd=log(1),threshold=0),            model=SDT) #>  #>  Sampled Parameters:  #> [1] \"mean_Sleft\"  \"mean_Sright\" #>  #>  Design Matrices:  #> $mean #>      S mean_Sleft mean_Sright #>   left          1           0 #>  right          0           1 #>  #> $sd #>  sd #>   1 #>  #> $threshold #>  threshold #>          1 #>   p_vector <- sampled_pars(dprobit)"},{"path":"https://ampl-psych.github.io/EMC2/reference/auto_thin.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically Thin an emc Object — auto_thin.emc","title":"Automatically Thin an emc Object — auto_thin.emc","text":"Uses effective sample size selection determine much optimally thin emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/auto_thin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically Thin an emc Object — auto_thin.emc","text":"","code":"# S3 method for class 'emc' auto_thin(emc, stage = \"sample\", selection = c(\"alpha\", \"mu\"), ...)  auto_thin(emc, stage = \"sample\", selection = c(\"alpha\", \"mu\"), ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/auto_thin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically Thin an emc Object — auto_thin.emc","text":"emc emc object. stage character string. Indicates sampling stage(s) take samples (.e. preburn, burn, adapt, sample) selection parameter types (.e. 'alpha' 'mu' consider determining effective sample size) ... additional optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/chain_n.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC Chain Iterations — chain_n","title":"MCMC Chain Iterations — chain_n","text":"Returns matrix number samples per chain stage present emc object (.e., preburn, burn, adapt, sample). number rows matrix reflects number chains number columns number sampling stages.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/chain_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC Chain Iterations — chain_n","text":"","code":"chain_n(emc)"},{"path":"https://ampl-psych.github.io/EMC2/reference/chain_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC Chain Iterations — chain_n","text":"emc list, output fit().","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/chain_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MCMC Chain Iterations — chain_n","text":"matrix","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/chain_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MCMC Chain Iterations — chain_n","text":"","code":"chain_n(samples_LNR) #>      preburn burn adapt sample #> [1,]       0    0     0     50 #> [2,]       0    0     0     50 #> [3,]       0    0     0     50"},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":null,"dir":"Reference","previous_headings":"","what":"Convergence Checks for an emc Object — check.emc","title":"Convergence Checks for an emc Object — check.emc","text":"Runs series convergence checks, prints statistics console, makes traceplots worst converged parameter per selection.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convergence Checks for an emc Object — check.emc","text":"","code":"# S3 method for class 'emc' check(   emc,   selection = c(\"mu\", \"sigma2\", \"alpha\"),   digits = 3,   plot_worst = TRUE,   ... )  check(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convergence Checks for an emc Object — check.emc","text":"emc emc object selection Character vector. Indicates parameter types check (e.g., alpha, mu, sigma2, correlation). digits Integer. many digits round ESS Rhat plots plot_worst Boolean. TRUE also plots chain plots worst parameter ... Optional arguments can passed get_pars plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convergence Checks for an emc Object — check.emc","text":"list statistics worst converged parameter per selection","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convergence Checks for an emc Object — check.emc","text":"Note Rhat calculated doubling number chains first splitting chains first second half, also test stationarity. Efficiency sampling indicated effective sample size (ESS) (coda R package). Full range possible samples manipulations described get_pars.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convergence Checks for an emc Object — check.emc","text":"","code":"check(samples_LNR) #> Iterations: #>      preburn burn adapt sample #> [1,]       0    0     0     50 #> [2,]       0    0     0     50 #> [3,]       0    0     0     50 #>  #>  mu  #>            m   m_lMd       s      t0 #> Rhat   0.996   1.004   1.022   1.026 #> ESS  152.000 150.000 196.000 160.000 #>  #>  sigma2  #>            m   m_lMd       s      t0 #> Rhat   1.176   1.014   0.989   1.002 #> ESS  108.000 188.000 161.000 150.000 #>  #>  alpha highest Rhat : bl1t  #>           m   m_lMd      s      t0 #> Rhat   1.01   1.041   1.02   1.022 #> ESS  198.00 150.000 177.00 150.000"},{"path":"https://ampl-psych.github.io/EMC2/reference/compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Information Criteria and Marginal Likelihoods — compare","title":"Information Criteria and Marginal Likelihoods — compare","text":"Returns BPIC/DIC marginal deviance (-2*marginal likelihood) list samples objects.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information Criteria and Marginal Likelihoods — compare","text":"","code":"compare(   sList,   stage = \"sample\",   filter = NULL,   use_best_fit = TRUE,   BayesFactor = TRUE,   cores_for_props = 4,   cores_per_prop = 1,   print_summary = TRUE,   digits = 0,   digits_p = 3,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information Criteria and Marginal Likelihoods — compare","text":"sList List samples objects stage string. Specifies stage samples taken \"preburn\", \"burn\", \"adapt\", \"sample\" filter integer vector. integer, iterations value set filter excluded. vector supplied, iterations vector considered. use_best_fit Boolean, defaults TRUE, uses minimal mean likelihood (whichever better) calculation, otherwise always uses mean likelihood. BayesFactor Boolean, defaults TRUE. Include marginal likelihoods estimated using WARP-III bridge sampling. Usually takes minute per model added calculate cores_for_props Integer, many cores use Bayes factor calculation, 4 default 4 different proposal densities evaluate, 1, 2 4 sensible. cores_per_prop Integer, many cores use Bayes factor calculation 4 cores available. Cores used cores_for_props * cores_per_prop. Best prioritize cores_for_props 4 2 print_summary Boolean (default TRUE), print table results digits Integer, significant digits printed table information criteria digits_p Integer, significant digits printed table model weights ... Additional, optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information Criteria and Marginal Likelihoods — compare","text":"Matrix effective number parameters, mean deviance, deviance mean, DIC, BPIC, Marginal Deviance (BayesFactor=TRUE) associated weights.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information Criteria and Marginal Likelihoods — compare","text":"","code":"# \\donttest{ compare(list(samples_LNR), cores_for_props = 1) #>     MD wMD  DIC wDIC BPIC wBPIC EffectiveN meanD Dmean minD #> 1 -190   1 -615    1 -579     1         35  -650  -657 -686 # Typically we would define a list of two (or more) different models: # # Here the full model is an emc object with the hypothesized effect # # The null model is an emc object without the hypothesized effect # design_full <- design(data = forstmann,model=DDM, #                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1), #                            constants=c(s=log(1))) # # Now without a ~ E # design_null <- design(data = forstmann,model=DDM, #                            formula =list(v~0+S,a~1, t0~1, s~1, Z~1, sv~1, SZ~1), #                            constants=c(s=log(1))) # # full_model <- make_emc(forstmann, design_full) # full_model <- fit(full_model) # # null_model <- make_emc(forstmann, design_null) # null_model <- fit(null_model) # sList <- list(full_model, null_model) # # By default emc uses 4 cores to parallelize marginal likelihood estimation across proposals # # So cores_per_prop = 3 results in 12 cores used. # compare(sList, cores_per_prop = 3) # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Information Criteria For Each Participant — compare_subject","title":"Information Criteria For Each Participant — compare_subject","text":"Returns BPIC/DIC based model weights participant list samples objects","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information Criteria For Each Participant — compare_subject","text":"","code":"compare_subject(   sList,   stage = \"sample\",   filter = 0,   use_best_fit = TRUE,   print_summary = TRUE,   digits = 3 )"},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information Criteria For Each Participant — compare_subject","text":"sList List samples objects stage string. Specifies stage samples taken \"preburn\", \"burn\", \"adapt\", \"sample\" filter integer vector. integer, iterations value set filter excluded. vector supplied, iterations vector considered. use_best_fit Boolean, defaults TRUE, use minimal likelihood mean likelihood (whichever better) calculation, otherwise always uses mean likelihood. print_summary Boolean (defaults TRUE) print table results digits Integer, significant digits printed table","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information Criteria For Each Participant — compare_subject","text":"List matrices subject effective number parameters, mean deviance, deviance mean, DIC, BPIC associated weights.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_subject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information Criteria For Each Participant — compare_subject","text":"","code":"# For a broader illustration see `compare`. # Here we just take two times the same model, but normally one would compare # different models compare_subject(list(m0 = samples_LNR, m1 = samples_LNR)) #> Warning: subject-by-subject comparison is best done with models of type `single` #>      wDIC_m0 wDIC_m1 wBPIC_m0 wBPIC_m1 #> as1t     0.5     0.5      0.5      0.5 #> bd6t     0.5     0.5      0.5      0.5 #> bl1t     0.5     0.5      0.5      0.5 #>  #> Winners #>      m0 #> DIC   3 #> BPIC  3"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.anova.html","id":null,"dir":"Reference","previous_headings":"","what":"Anova Style Contrast Matrix — contr.anova","title":"Anova Style Contrast Matrix — contr.anova","text":"Similar contr.helmert, scaled estimate differences conditions. Use design().","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anova Style Contrast Matrix — contr.anova","text":"","code":"contr.anova(n)"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anova Style Contrast Matrix — contr.anova","text":"n integer. number items create contrast","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anova Style Contrast Matrix — contr.anova","text":"contrast matrix.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anova Style Contrast Matrix — contr.anova","text":"","code":"{ design_DDMaE <- design(data = forstmann,model=DDM, contrasts = list(E = contr.anova), formula =list(v~S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1), constants=c(s=log(1))) } #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v\"        \"v_Sright\" \"a\"        \"a_E1\"     \"a_E2\"     \"t0\"       \"Z\"        #> [8] \"sv\"       \"SZ\"       #>  #>  Design Matrices:  #> $v #>      S v v_Sright #>   left 1        0 #>  right 1        1 #>  #> $a #>         E a a_E1  a_E2 #>     speed 1 -0.5 -0.25 #>   neutral 1  0.5 -0.25 #>  accuracy 1  0.0  0.50 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast Enforcing Equal Prior Variance on each Level — contr.bayes","title":"Contrast Enforcing Equal Prior Variance on each Level — contr.bayes","text":"Typical contrasts impose different levels marginal prior variance different levels. contrast can used ensure level equal marginal priors (Rouder, Morey, Speckman, & Province; 2012).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.bayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast Enforcing Equal Prior Variance on each Level — contr.bayes","text":"","code":"contr.bayes(n)"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast Enforcing Equal Prior Variance on each Level — contr.bayes","text":"n integer. number items create contrast","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast Enforcing Equal Prior Variance on each Level — contr.bayes","text":"contrast matrix.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.bayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast Enforcing Equal Prior Variance on each Level — contr.bayes","text":"","code":"{ design_DDMaE <- design(data = forstmann,model=DDM, contrasts = list(E = contr.bayes), formula =list(v~S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1), constants=c(s=log(1))) } #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v\"        \"v_Sright\" \"a\"        \"a_E1\"     \"a_E2\"     \"t0\"       \"Z\"        #> [8] \"sv\"       \"SZ\"       #>  #>  Design Matrices:  #> $v #>      S v v_Sright #>   left 1        0 #>  right 1        1 #>  #> $a #>         E a       a_E1       a_E2 #>     speed 1  0.0000000  0.8164966 #>   neutral 1 -0.7071068 -0.4082483 #>  accuracy 1  0.7071068 -0.4082483 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.decreasing.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast Enforcing Decreasing Estimates — contr.decreasing","title":"Contrast Enforcing Decreasing Estimates — contr.decreasing","text":"level estimated reduction previous level","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.decreasing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast Enforcing Decreasing Estimates — contr.decreasing","text":"","code":"contr.decreasing(n)"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.decreasing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast Enforcing Decreasing Estimates — contr.decreasing","text":"n integer. number items create contrast.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.decreasing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast Enforcing Decreasing Estimates — contr.decreasing","text":"contrast matrix.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.decreasing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast Enforcing Decreasing Estimates — contr.decreasing","text":"","code":"{ design_DDMaE <- design(data = forstmann,model=DDM, contrasts = list(E = contr.decreasing), formula =list(v~S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1), constants=c(s=log(1))) } #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v\"        \"v_Sright\" \"a\"        \"a_E2\"     \"a_E3\"     \"t0\"       \"Z\"        #> [8] \"sv\"       \"SZ\"       #>  #>  Design Matrices:  #> $v #>      S v v_Sright #>   left 1        0 #>  right 1        1 #>  #> $a #>         E a a_E2 a_E3 #>     speed 1    1    1 #>   neutral 1    1    0 #>  accuracy 1    0    0 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.increasing.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast Enforcing Increasing Estimates — contr.increasing","title":"Contrast Enforcing Increasing Estimates — contr.increasing","text":"level estimated additively previous level","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.increasing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast Enforcing Increasing Estimates — contr.increasing","text":"","code":"contr.increasing(n)"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.increasing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast Enforcing Increasing Estimates — contr.increasing","text":"n integer. number items create contrast.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.increasing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast Enforcing Increasing Estimates — contr.increasing","text":"contrast matrix.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.increasing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast Enforcing Increasing Estimates — contr.increasing","text":"","code":"{ design_DDMaE <- design(data = forstmann,model=DDM, contrasts = list(E = contr.increasing), formula =list(v~S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1), constants=c(s=log(1))) } #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v\"        \"v_Sright\" \"a\"        \"a_E2\"     \"a_E3\"     \"t0\"       \"Z\"        #> [8] \"sv\"       \"SZ\"       #>  #>  Design Matrices:  #> $v #>      S v v_Sright #>   left 1        0 #>  right 1        1 #>  #> $a #>         E a a_E2 a_E3 #>     speed 1    0    0 #>   neutral 1    1    0 #>  accuracy 1    1    1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/credible.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Credible Interval Tests — credible.emc","title":"Posterior Credible Interval Tests — credible.emc","text":"Modeled t.test, returns credible interval parameter test proportion posterior distribution (difference posterior distributions case two sample test) overlaps mu. one sample test provide x two sample also provide y. Note comparisons within one model, recommend using hypothesis() priors well chosen.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/credible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Credible Interval Tests — credible.emc","text":"","code":"# S3 method for class 'emc' credible(   x,   x_name = NULL,   x_fun = NULL,   x_fun_name = \"fun\",   selection = \"mu\",   y = NULL,   y_name = NULL,   y_fun = NULL,   y_fun_name = \"fun\",   x_subject = NULL,   y_subject = NULL,   mu = 0,   alternative = c(\"less\", \"greater\")[1],   probs = c(0.025, 0.5, 0.975),   digits = 2,   p_digits = 3,   print_table = TRUE,   ... )  credible(x, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/credible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Credible Interval Tests — credible.emc","text":"x emc object x_name character string. Name parameter tested x x_fun Function applied MCMC chains create variable tested. x_fun_name Name give quantity calculated x_fun selection character string designating parameter type (e.g. alpha covariance) y second emc object y_name character string. Name parameter tested y y_fun Function applied MCMC chains create variable tested. y_fun_name Name give quantity calculated y_fun x_subject Integer name selecting subject y_subject Integer name selecting subject mu Numeric. NULL value single sample test y supplied (default 0) alternative less greater determining direction test probability probs Vector defining quantiles return. digits Integer, significant digits estimates printed results p_digits Integer, significant digits probability printed results print_table Boolean (defaults TRUE) printing results table ... Additional optional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/credible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Credible Interval Tests — credible.emc","text":"Invisible results table rounding.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/credible.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Credible Interval Tests — credible.emc","text":"","code":"{ # Run a credible interval test (Bayesian ''t-test'') credible(samples_LNR, x_name = \"m\") # We can also compare between two sets of emc objects  # # Now without a ~ E # design_null <- design(data = forstmann,model=DDM, #                            formula =list(v~0+S,a~1, t0~1, s~1, Z~1, sv~1, SZ~1), #                            constants=c(s=log(1))) # # null_model <- make_emc(forstmann, design_null) # null_model <- fit(null_model) # credible(x = null_model, x_name = \"a\", y = full_model, y_name = \"a\") # # # Or provide custom functions: # credible(x = full_model, x_fun = function(d) d[\"a_Eaccuracy\"] - d[\"a_Eneutral\"]) } #>           m mu #> 2.5%  -1.10 NA #> 50%   -0.97  0 #> 97.5% -0.80 NA #> attr(,\"less\") #> [1] 1"},{"path":"https://ampl-psych.github.io/EMC2/reference/credint.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Quantiles — credint.emc.prior","title":"Posterior Quantiles — credint.emc.prior","text":"Returns quantiles selected parameter type. Full range possible samples manipulations described get_pars.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/credint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Quantiles — credint.emc.prior","text":"","code":"# S3 method for class 'emc.prior' credint(   x,   selection = \"mu\",   probs = c(0.025, 0.5, 0.975),   digits = 3,   N = 1000,   covariates = NULL,   ... )  # S3 method for class 'emc' credint(x, selection = \"mu\", probs = c(0.025, 0.5, 0.975), digits = 3, ...)  credint(x, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/credint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior Quantiles — credint.emc.prior","text":"x emc emc.prior object selection Character vector. Indicates parameter types check (e.g., alpha, mu, sigma2, correlation). probs vector. Indicates quantiles return posterior. digits Integer. many digits round output N integer. Number samples use quantile calculation (prior.emc objects) covariates list covariates use quantile calculation (prior.emc objects) ... Optional additional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/credint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior Quantiles — credint.emc.prior","text":"list posterior quantiles parameter group selected parameter type.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/credint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior Quantiles — credint.emc.prior","text":"","code":"credint(samples_LNR) #> $mu #>         2.5%    50%  97.5% #> m     -1.100 -0.967 -0.804 #> m_lMd -0.837 -0.515 -0.274 #> s     -0.969 -0.545  0.043 #> t0    -2.025 -1.588 -1.140 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/design.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a Design and Model — design","title":"Specify a Design and Model — design","text":"function combines information regarding data, type model, model specification.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a Design and Model — design","text":"","code":"design(   formula = NULL,   factors = NULL,   Rlevels = NULL,   model,   data = NULL,   contrasts = NULL,   matchfun = NULL,   constants = NULL,   covariates = NULL,   functions = NULL,   report_p_vector = TRUE,   custom_p_vector = NULL,   transform = NULL,   bound = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a Design and Model — design","text":"formula list. Contains design formulae format list(y ~ x, ~ z). factors named list containing factor variables span design cells taken account model. name subjects must used indicate participant factor variable, also data. Example: list(subjects=levels(dat$subjects), condition=levels(dat$condition)) Rlevels character vector. Contains response factor levels. Example: c(\"right\", \"left\") model function, specifies model type. Choose drift diffusion model (DDM(), DDMt0natural()), log-normal race model (LNR()), linear ballistic model (LBA()), racing diffusion model (RDM(), RDMt0natural()), define model functions. data data frame. data can used automatically detect factors, Rlevels covariates dataset. variable R needs factor variable indicating response variable. numeric column except trials rt treated covariates, remaining factor variables internally used factors. contrasts Optional. named list specifying design matrix. Example supplying customized design matrix: list(lM = matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"diff\")))) matchfun function. needed race models. Specifies whether response correct . Example: function(d)d$S==d$lR lR refers latent response factor. constants named vector sets constants. parameter sampled_pars can set constant. covariates Names numeric covariates. functions List functions create new factors based factors argument. new factors can used formula. report_p_vector Boolean. TRUE (default), returns vector parameters estimated. custom_p_vector character vector. specified, custom likelihood function can supplied. transform list custom transformations applied parameters model, conventional transformations desired. See DDM() example transformations bound list custom bounds applied parameters model, conventional bound desired. see DDM() example bounds. Bounds used set limits likelihood landscape reasonable achieved transform ... Additional, optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a Design and Model — design","text":"design list.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a Design and Model — design","text":"","code":"# load example dataset dat <- forstmann  # create a function that takes the latent response (lR) factor (d) and returns a logical # defining the correct response for each stimulus. Here the match is simply # such that the S factor equals the latent response factor matchfun <- function(d)d$S==d$lR  # When working with lM and lR, it can be useful to design  an # \"average and difference\" contrast matrix. For binary responses, it has a # simple canonical form ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"diff\"))  # Create a design for a linear ballistic accumulator model (LBA) that allows # thresholds to be a function of E and lR. The final result is a 9 parameter model. design_LBABE <- design(data = dat,model=LBA,matchfun=matchfun,                             formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~1),                             contrasts=list(v=list(lM=ADmat)),                             constants=c(sv=log(1))) #>  #>  Sampled Parameters:  #> [1] \"v\"           \"v_lMdiff\"    \"sv_lMTRUE\"   \"B\"           \"B_Eneutral\"  #> [6] \"B_Eaccuracy\" \"B_lRright\"   \"A\"           \"t0\"          #>  #>  Design Matrices:  #> $v #>     lM v v_lMdiff #>   TRUE 1      0.5 #>  FALSE 1     -0.5 #>  #> $sv #>     lM sv sv_lMTRUE #>   TRUE  1         1 #>  FALSE  1         0 #>  #> $B #>         E    lR B B_Eneutral B_Eaccuracy B_lRright #>     speed  left 1          0           0         0 #>     speed right 1          0           0         1 #>   neutral  left 1          1           0         0 #>   neutral right 1          1           0         1 #>  accuracy  left 1          0           1         0 #>  accuracy right 1          0           1         1 #>  #> $A #>  A #>  1 #>  #> $t0 #>  t0 #>   1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/ess_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Effective Sample Size — ess_summary.emc","title":"Effective Sample Size — ess_summary.emc","text":"Returns effective sample size (ESS) selected parameter type. Full range possible samples manipulations described get_pars.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/ess_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effective Sample Size — ess_summary.emc","text":"","code":"# S3 method for class 'emc' ess_summary(   emc,   selection = \"mu\",   stat = \"min\",   stat_only = FALSE,   digits = 1,   ... )  ess_summary(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/ess_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effective Sample Size — ess_summary.emc","text":"emc emc object selection Character vector. Indicates parameter types check (e.g., alpha, mu, sigma2, correlation). stat string. correspond function can applied vector, performed vector/rows columns matrix parameters stat_only Boolean. TRUE return result applied stat function, otherwise returns stat result result function parameters. digits Integer. many digits round output ... Optional additional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/ess_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effective Sample Size — ess_summary.emc","text":"matrix vector ESS values selected parameter type.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/ess_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Effective Sample Size — ess_summary.emc","text":"","code":"ess_summary(samples_LNR, selection = \"alpha\") #>       as1t  bd6t  bl1t min #> m      127 150.0 197.8 127 #> m_lMd  150 207.2 150.0 150 #> s      126 151.3 176.7 126 #> t0     150 230.7 150.0 150 #> min    126 150.0 150.0 126"},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Estimation in EMC2 — fit.emc","title":"Model Estimation in EMC2 — fit.emc","text":"General purpose function estimate models specified EMC2.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Estimation in EMC2 — fit.emc","text":"","code":"# S3 method for class 'emc' fit(   emc,   stage = NULL,   iter = 1000,   stop_criteria = NULL,   search_width = 1,   step_size = 100,   verbose = TRUE,   fileName = NULL,   particle_factor = 50,   cores_per_chain = 1,   cores_for_chains = length(emc),   max_tries = 20,   thin = FALSE,   ... )  fit(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Estimation in EMC2 — fit.emc","text":"emc emc object created make_emc, path emc object stored. stage string. Indicates stage start run , either preburn, burn, adapt sample. unspecified, run subsequent stage (one). iter integer. Indicates many iterations run sampling stage. stop_criteria list. Defines stopping criteria types parameters hold. See details examples section. search_width double. Tunes target acceptance probability MCMC process. fine-tunes width search space obtain desired acceptance probability. 1 default width, increases lead broader search. step_size integer. step, stopping requirements specified stop_criteria checked proposal distributions updated. Defaults 100. verbose Logical. Whether print messages step current status regarding stop_criteria. fileName string. specified, auto-save emc object location every iteration. particle_factor integer. particle_factor multiplied square root number sampled parameters determines number particles used. cores_per_chain integer. many cores use per chain. Parallelizes across participant calculations. available Linux Mac OS. Windows, parallelization across chains (cores_for_chains) available. cores_for_chains integer. many cores use across chains. Defaults number chains. total number cores used equal cores_per_chain * cores_for_chains. max_tries integer. many times try meet finish conditions specified stop_criteria? Defaults 20. max_tries ignored required number iterations reached yet. thin boolean. TRUE automatically thin MCMC samples, closely matched ESS. Can also set double, case 1/thin chain removed (integer). ... Additional optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Estimation in EMC2 — fit.emc","text":"emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model Estimation in EMC2 — fit.emc","text":"stop_criteria either list lists names stages, single list case assumed sample stage (see examples). potential stop criteria set : selection (character vector): parameters stop_criteria hold mean_gd (numeric): mean Gelman-Rubin diagnostic across parameters selection max_gd (numeric): max Gelman-Rubin diagnostic across parameters selection min_unique (integer): minimum number unique samples MCMC chains across parameters selection min_es (integer): minimum number effective samples across parameters selection omit_mpsrf (Boolean): Whether include multivariate point-scale reduction factor Gelman-Rubin diagnostic. Default FALSE. iter (integer): number MCMC samples collect. estimation performed using particle-metropolis within-Gibbs sampling. sampling details see: Gunawan, D., Hawkins, G. E., Tran, M.-N., Kohn, R., & Brown, S. (2020). New estimation approaches hierarchical linear ballistic accumulator model. Journal Mathematical Psychology ,96, 102368. doi.org/10.1016/j.jmp.2020.102368 Stevenson, N., Donzallaz, M. C., Innes, R. J., Forstmann, B., Matzke, D., & Heathcote, . (2024). EMC2: R Package cognitive models choice. doi.org/10.31234/osf.io/2e4dq","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Estimation in EMC2 — fit.emc","text":"","code":"# \\donttest{ # Define a design first ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"d\")) # We also define a match function for lM matchfun=function(d)d$S==d$lR  # Drop most subjects for speed dat <- forstmann[forstmann$subjects %in% unique(forstmann$subjects)[1:2],] dat$subjects <- droplevels(dat$subjects)  design_LNR <- design(data = dat,model=LNR,matchfun=matchfun,                      formula=list(m~lM,s~1,t0~1),                      contrasts=list(m=list(lM=ADmat))) #>  #>  Sampled Parameters:  #> [1] \"m\"     \"m_lMd\" \"s\"     \"t0\"    #>  #>  Design Matrices:  #> $m #>     lM m m_lMd #>   TRUE 1   0.5 #>  FALSE 1  -0.5 #>  #> $s #>  s #>  1 #>  #> $t0 #>  t0 #>   1 #>  # Before fit can be called, we first need to make an emc object LNR_s <- make_emc(dat, design_LNR, rt_resolution = 0.05, n_chains = 2) #> Processing data set 1 #> Likelihood speedup factor: 15.1 (110 unique trials) # Run fit, here illustrating how to use stop_criteria (also for speed purposes) LNR_s <- fit(LNR_s, cores_for_chains = 1, stop_criteria = list(   preburn = list(iter = 10), burn = list(mean_gd = 2.5), adapt = list(min_unique = 20),   sample = list(iter = 25, max_gd = 2)), verbose = FALSE, particle_factor = 30, step_size = 25) # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/forstmann.html","id":null,"dir":"Reference","previous_headings":"","what":"Forstmann et al.'s Data — forstmann","title":"Forstmann et al.'s Data — forstmann","text":"dataset containing speed accuracy manipulation Random Dot Motion experiment.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/forstmann.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forstmann et al.'s Data — forstmann","text":"","code":"forstmann"},{"path":"https://ampl-psych.github.io/EMC2/reference/forstmann.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Forstmann et al.'s Data — forstmann","text":"data frame 15818 rows 5 variables: E Factor 3 levels Speed, Accuracy Neutral R Factor 2 levels Left Right responses S Factor 2 levels Left Right trials rt reaction time trial double subjects integer ID subject","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/forstmann.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Forstmann et al.'s Data — forstmann","text":"https://www.pnas.org/doi/10.1073/pnas.0805903105","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/forstmann.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forstmann et al.'s Data — forstmann","text":"Details dataset can found following paper: Striatum pre-SMA facilitate decision-making time pressure Birte U. Forstmann, Gilles Dutilh, Scott Brown, Jane Neumann, D. Yves von Cramon, K. Richard Ridderinkhof, Eric-Jan Wagenmakers. Proceedings National Academy Sciences Nov 2008, 105 (45) 17538-17542; DOI: 10.1073/pnas.0805903105","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Gelman-Rubin Statistic — gd_summary.emc","title":"Gelman-Rubin Statistic — gd_summary.emc","text":"Returns Gelman-Rubin diagnostics (otherwise known R-hat) selected parameter type; .e. ratio within MCMC chain variance.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gelman-Rubin Statistic — gd_summary.emc","text":"","code":"# S3 method for class 'emc' gd_summary(   emc,   selection = \"mu\",   omit_mpsrf = TRUE,   stat = \"max\",   stat_only = FALSE,   digits = 3,   ... )  gd_summary(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gelman-Rubin Statistic — gd_summary.emc","text":"emc emc object selection Character vector. Indicates parameter types check (e.g., alpha, mu, sigma2, correlation). omit_mpsrf Boolean. TRUE also returns multivariate point scale reduction factor (see ?coda::gelman.diag). stat string. correspond function can applied vector, performed vector/rows columns matrix parameters stat_only Boolean. TRUE return result applied stat function, otherwise returns stat result result function parameters. digits Integer. many digits round output ... Optional additional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gelman-Rubin Statistic — gd_summary.emc","text":"matrix vector R-hat values selected parameter type.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gelman-Rubin Statistic — gd_summary.emc","text":"See: Gelman, Rubin, DB (1992) Inference iterative simulation using multiple sequences, Statistical Science, 7, 457-511. Full range possible samples manipulations described get_pars.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gelman-Rubin Statistic — gd_summary.emc","text":"","code":"gd_summary(samples_LNR, selection = \"correlation\", stat = \"mean\", flatten = TRUE) #>             m_lMd.m   s.m  t0.m s.m_lMd t0.m_lMd  t0.s  mean #> correlation    1.02 1.052 1.019   1.033    0.994 1.018 1.023"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_BayesFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayes Factors — get_BayesFactor","title":"Bayes Factors — get_BayesFactor","text":"returns Bayes Factor two models","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_BayesFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayes Factors — get_BayesFactor","text":"","code":"get_BayesFactor(MLL1, MLL2)"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_BayesFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayes Factors — get_BayesFactor","text":"MLL1 Numeric. Marginal likelihood model 1. Obtained run_bridge_sampling() MLL2 Numeric. Marginal likelihood model 2. Obtained run_bridge_sampling()","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_BayesFactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayes Factors — get_BayesFactor","text":"BayesFactor model 1 model 2","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_BayesFactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayes Factors — get_BayesFactor","text":"","code":"# \\donttest{ # Normally one would compare two different models # Here we use two times the same model: M1 <- M0 <- run_bridge_sampling(samples_LNR, both_splits = FALSE, cores_for_props = 1) get_BayesFactor(M1, M0) #> [1] 1 # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data — get_data.emc","title":"Get Data — get_data.emc","text":"Extracts data emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data — get_data.emc","text":"","code":"# S3 method for class 'emc' get_data(emc)  get_data(emc)"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Data — get_data.emc","text":"emc emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Data — get_data.emc","text":"dataframe original data","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Data — get_data.emc","text":"emc adds columns rows dataframe order facilitate efficient likelihood calculations. function return data provided originally.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Data — get_data.emc","text":"","code":"get_data(samples_LNR) #>     subjects        E     S     R   rt #> 1       as1t accuracy right right 0.44 #> 3       as1t    speed right right 0.50 #> 5       as1t    speed  left  left 0.32 #> 7       as1t accuracy right right 0.48 #> 9       as1t accuracy  left  left 0.34 #> 11      as1t accuracy  left  left 0.34 #> 13      as1t  neutral  left  left 0.36 #> 15      as1t  neutral right right 0.40 #> 17      as1t  neutral  left  left 0.38 #> 19      as1t accuracy right right 0.36 #> 21      as1t accuracy right right 0.38 #> 23      as1t  neutral  left  left 0.36 #> 25      as1t accuracy  left right 0.32 #> 27      as1t accuracy  left  left 0.42 #> 29      as1t  neutral right right 0.52 #> 31      as1t    speed right  left 0.42 #> 33      as1t accuracy right right 0.48 #> 35      as1t    speed right  left 0.44 #> 37      as1t accuracy right right 0.38 #> 39      as1t    speed  left  left 0.52 #> 41      as1t accuracy right right 0.48 #> 43      as1t  neutral  left  left 0.60 #> 45      as1t  neutral  left  left 0.38 #> 47      as1t    speed  left  left 0.50 #> 49      as1t accuracy right right 0.46 #> 51      as1t  neutral right  left 0.32 #> 53      as1t accuracy  left right 0.48 #> 55      as1t  neutral  left  left 0.30 #> 57      as1t  neutral right right 0.52 #> 59      as1t    speed  left  left 0.28 #> 61      as1t    speed  left  left 0.44 #> 63      as1t  neutral right right 0.42 #> 65      as1t    speed  left  left 0.32 #> 67      as1t accuracy  left  left 0.42 #> 69      as1t accuracy  left  left 0.42 #> 71      as1t    speed right right 0.34 #> 73      as1t  neutral right  left 0.32 #> 75      as1t accuracy right right 0.46 #> 77      as1t    speed  left  left 0.52 #> 79      as1t  neutral right right 0.42 #> 81      as1t    speed right  left 0.42 #> 83      as1t    speed  left  left 0.50 #> 85      as1t  neutral right right 0.42 #> 87      as1t  neutral right right 0.40 #> 89      as1t  neutral right right 0.58 #> 91      as1t accuracy  left  left 0.42 #> 93      as1t    speed  left  left 0.44 #> 95      as1t accuracy right right 0.48 #> 97      as1t  neutral right right 0.40 #> 99      as1t    speed right right 0.50 #> 101     as1t    speed  left  left 0.32 #> 103     as1t  neutral right right 0.78 #> 105     as1t accuracy right right 0.46 #> 107     as1t  neutral  left  left 0.46 #> 109     as1t accuracy right right 0.54 #> 111     as1t    speed right right 0.50 #> 113     as1t    speed  left  left 0.32 #> 115     as1t    speed right right 0.56 #> 117     as1t accuracy right  left 0.60 #> 119     as1t accuracy right right 0.46 #> 121     as1t    speed right  left 0.36 #> 123     as1t accuracy right  left 0.60 #> 125     as1t    speed  left  left 0.52 #> 127     as1t  neutral  left  left 0.40 #> 129     as1t  neutral  left  left 0.46 #> 131     as1t accuracy  left  left 0.48 #> 133     as1t    speed  left  left 0.56 #> 135     as1t  neutral right  left 0.48 #> 137     as1t  neutral  left  left 0.46 #> 139     as1t  neutral  left  left 0.40 #> 141     as1t    speed right right 0.50 #> 143     as1t    speed  left  left 0.44 #> 145     as1t  neutral right right 0.42 #> 147     as1t  neutral right  left 0.72 #> 149     as1t    speed  left right 0.50 #> 151     as1t    speed  left  left 0.44 #> 153     as1t    speed right right 0.50 #> 155     as1t  neutral  left  left 0.38 #> 157     as1t accuracy right right 0.46 #> 159     as1t    speed right  left 0.42 #> 161     as1t    speed  left  left 0.44 #> 163     as1t accuracy right right 0.48 #> 165     as1t accuracy  left  left 0.70 #> 167     as1t  neutral right right 0.52 #> 169     as1t    speed right right 0.60 #> 171     as1t    speed right  left 0.34 #> 173     as1t accuracy  left right 0.56 #> 175     as1t    speed  left  left 0.44 #> 177     as1t accuracy right right 0.46 #> 179     as1t accuracy  left  left 0.42 #> 181     as1t accuracy right right 0.46 #> 183     as1t    speed  left right 0.26 #> 185     as1t    speed  left right 0.30 #> 187     as1t accuracy right right 0.48 #> 189     as1t    speed  left  left 0.32 #> 191     as1t  neutral right  left 0.40 #> 193     as1t  neutral  left  left 0.40 #> 195     as1t    speed  left  left 0.50 #> 197     as1t accuracy  left  left 0.48 #> 199     as1t  neutral right right 0.52 #> 201     as1t accuracy right right 0.46 #> 203     as1t accuracy right right 0.48 #> 205     as1t  neutral right right 0.42 #> 207     as1t accuracy right right 0.44 #> 209     as1t    speed right right 0.56 #> 211     as1t accuracy right right 0.46 #> 213     as1t  neutral  left  left 0.46 #> 215     as1t  neutral right right 0.78 #> 217     as1t  neutral right right 0.42 #> 219     as1t accuracy right right 0.38 #> 221     as1t  neutral right right 0.40 #> 223     as1t    speed  left  left 0.56 #> 225     as1t  neutral  left  left 0.36 #> 227     as1t  neutral right right 0.42 #> 229     as1t accuracy  left  left 0.48 #> 231     as1t  neutral right right 0.42 #> 233     as1t    speed right  left 0.42 #> 235     as1t accuracy  left right 0.32 #> 237     as1t  neutral right right 0.40 #> 239     as1t  neutral  left  left 0.54 #> 241     as1t accuracy right right 0.48 #> 243     as1t  neutral  left  left 0.60 #> 245     as1t accuracy  left right 0.34 #> 247     as1t accuracy right right 0.46 #> 249     as1t accuracy right right 0.48 #> 251     as1t  neutral  left  left 0.40 #> 253     as1t accuracy right right 0.36 #> 255     as1t  neutral  left  left 0.38 #> 257     as1t    speed  left  left 0.58 #> 259     as1t accuracy right right 0.38 #> 261     as1t  neutral right  left 0.46 #> 263     as1t  neutral right right 0.42 #> 265     as1t  neutral  left  left 0.46 #> 267     as1t accuracy right right 0.36 #> 269     as1t    speed right right 0.34 #> 271     as1t accuracy right right 0.48 #> 273     as1t  neutral right right 0.40 #> 275     as1t accuracy right right 0.38 #> 277     as1t  neutral  left  left 0.60 #> 279     as1t  neutral  left  left 0.46 #> 281     as1t accuracy right right 0.44 #> 283     as1t accuracy right right 0.46 #> 285     as1t  neutral  left  left 0.46 #> 287     as1t  neutral  left  left 0.40 #> 289     as1t  neutral right right 0.40 #> 291     as1t accuracy  left  left 0.64 #> 293     as1t accuracy right right 0.38 #> 295     as1t  neutral right  left 0.58 #> 297     as1t    speed  left right 0.42 #> 299     as1t  neutral right right 0.40 #> 301     as1t    speed  left right 0.42 #> 303     as1t accuracy  left right 0.78 #> 305     as1t    speed  left right 0.42 #> 307     as1t  neutral right  left 0.48 #> 309     as1t    speed  left  left 0.44 #> 311     as1t    speed  left  left 0.52 #> 313     as1t    speed right  left 0.26 #> 315     as1t    speed right  left 0.36 #> 317     as1t    speed  left right 0.28 #> 319     as1t accuracy  left right 0.46 #> 321     as1t accuracy right right 0.46 #> 323     as1t  neutral  left  left 0.40 #> 325     as1t    speed right right 0.30 #> 327     as1t  neutral  left  left 0.46 #> 329     as1t  neutral  left  left 0.68 #> 331     as1t    speed right right 0.56 #> 333     as1t    speed  left  left 0.44 #> 335     as1t  neutral  left right 0.58 #> 337     as1t    speed right right 0.56 #> 339     as1t  neutral right right 0.42 #> 341     as1t accuracy  left  left 0.48 #> 343     as1t accuracy  left  left 0.66 #> 345     as1t accuracy right right 0.48 #> 347     as1t  neutral right right 0.58 #> 349     as1t  neutral right right 0.40 #> 351     as1t  neutral right right 0.42 #> 353     as1t accuracy  left  left 0.70 #> 355     as1t accuracy  left right 0.46 #> 357     as1t accuracy right right 0.54 #> 359     as1t accuracy  left  left 0.48 #> 361     as1t  neutral right right 0.40 #> 363     as1t    speed  left  left 0.44 #> 365     as1t  neutral  left right 0.58 #> 367     as1t    speed  left  left 0.44 #> 369     as1t  neutral  left  left 0.60 #> 371     as1t    speed right  left 0.44 #> 373     as1t accuracy right right 0.48 #> 375     as1t accuracy  left right 0.36 #> 377     as1t accuracy  left right 0.52 #> 379     as1t  neutral right right 0.40 #> 381     as1t  neutral  left  left 0.68 #> 383     as1t    speed  left  left 0.80 #> 385     as1t accuracy right right 0.44 #> 387     as1t  neutral  left right 0.66 #> 389     as1t  neutral  left right 0.60 #> 391     as1t    speed right right 0.56 #> 393     as1t  neutral right  left 0.58 #> 395     as1t  neutral right right 0.52 #> 397     as1t    speed right right 0.28 #> 399     as1t    speed  left  left 0.26 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 2302 rows ]"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Design — get_design.emc.prior","title":"Get Design — get_design.emc.prior","text":"Extracts design emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Design — get_design.emc.prior","text":"","code":"# S3 method for class 'emc.prior' get_design(x)  # S3 method for class 'emc' get_design(x)  get_design(x)"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Design — get_design.emc.prior","text":"x emc emc.prior object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Design — get_design.emc.prior","text":"design class emc.design","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Design — get_design.emc.prior","text":"","code":"get_design(samples_LNR) #> m ~ lM  #> s ~ 1  #> t0 ~ 1"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter/Manipulate Parameters from emc Object — get_pars","title":"Filter/Manipulate Parameters from emc Object — get_pars","text":"Underlying function used plotting object handling functions EMC2. Can example used filter/thin parameter type (.e, group-level means mu) convert mcmc.list.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter/Manipulate Parameters from emc Object — get_pars","text":"","code":"get_pars(   emc,   selection = \"mu\",   stage = get_last_stage(emc),   thin = 1,   filter = 0,   map = FALSE,   add_recalculated = FALSE,   length.out = NULL,   by_subject = FALSE,   return_mcmc = TRUE,   merge_chains = FALSE,   subject = NULL,   flatten = FALSE,   remove_dup = FALSE,   remove_constants = TRUE,   use_par = NULL,   type = NULL,   true_pars = NULL,   chain = NULL,   covariates = NULL )"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter/Manipulate Parameters from emc Object — get_pars","text":"emc emc object. selection Character string. Indicates parameter type select (e.g., alpha, mu, sigma2, correlation). stage character string. Indicates sampling stage(s) take samples (.e. preburn, burn, adapt, sample) thin integer. much thin chains filter Integer numeric vector. integer supplied, iterations integer removed. vector supplied, iterations within range kept. map Boolean. TRUE parameters mapped back cells experimental design using design matrices. Otherwise sampled parameters returned. works selection = mu selection = alpha. add_recalculated Boolean. TRUE also add recalculated parameters, b LBA (b = B + ; see ?LBA), z DDM z = Z*(see ?DDM) works map = TRUE length.Integer. Alternatively thinning, can also select desired length MCMC chains, thinned appropriately. by_subject Boolean. TRUE selections include subject parameters (e.g. alpha), plot/stats organized subject, otherwise parameter. return_mcmc Boolean. TRUE returns mcmc.list object, otherwise matrix/array parameter type. merge_chains Boolean. TRUE returns parameter type merged across chains. subject Integer (vector) character (vector). integer select 'x'th subject(s), character match subject names data selected. flatten Boolean. FALSE 3-dimensional samples (e.g., correlations: n-pars x n-pars x iterations). organizes dimension containing parameter names, otherwise collapses names across first second dimension. apply selection = \"alpha\" remove_dup Boolean. TRUE removes duplicate values samples. Automatically set TRUE flatten = TRUE remove_constants Boolean. TRUE removes constant values samples (e.g. 0s covariance matrix). use_par Character (vector). specified, parameters returned. match parameter names (.e. collapsed flatten = TRUE use_par also collapsed names). type Character indicating group-level model selected. necessary sampler specified. true_pars Set true_parameters can specified apply flatten use_par set true parameters chain Integer. chain(s) return covariates needed plot priors covariates design","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter/Manipulate Parameters from emc Object — get_pars","text":"mcmc.list object selected parameter types specified manipulations","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter/Manipulate Parameters from emc Object — get_pars","text":"","code":"# E.g. get the group-level mean parameters mapped back to the design get_pars(samples_LNR, stage = \"sample\", map = TRUE, selection = \"mu\") #> $mu #> [[1]] #> Markov Chain Monte Carlo (MCMC) output: #> Start = 1  #> End = 50  #> Thinning interval = 1  #>         m_lMTRUE  m_lMFALSE         s        t0 #>  [1,] -1.1071199 -0.7220976 0.5147673 0.1509100 #>  [2,] -1.1163682 -0.8718823 1.4502697 0.2007689 #>  [3,] -1.3256591 -0.5727143 0.6483144 0.2219049 #>  [4,] -1.2519621 -0.7164368 0.5765470 0.1771225 #>  [5,] -1.2962281 -0.6390243 0.4349689 0.1714742 #>  [6,] -1.2352215 -0.6721022 0.6145338 0.2344133 #>  [7,] -1.1011875 -0.7369250 0.4845878 0.1512651 #>  [8,] -1.4000472 -0.6921902 0.9672897 0.2375900 #>  [9,] -1.2677786 -0.6352720 0.5630492 0.1954891 #> [10,] -1.1193087 -0.7361534 0.6318139 0.1669678 #> [11,] -1.1870954 -0.7156723 0.6183504 0.1816539 #> [12,] -1.2963633 -0.6335718 0.4455817 0.1806443 #> [13,] -1.1693209 -0.5452283 0.6467498 0.2157353 #> [14,] -1.2838212 -0.6883959 0.8090042 0.1640947 #> [15,] -1.1438136 -0.7162684 0.5611150 0.1663250 #> [16,] -1.2369173 -0.7452483 0.5075017 0.1679524 #> [17,] -1.2760378 -0.6630577 0.7136102 0.2039214 #> [18,] -0.9569555 -0.6714145 0.3944418 0.1058011 #> [19,] -1.2958004 -0.7126064 0.5978612 0.1956022 #> [20,] -1.3266943 -0.7121075 0.5459786 0.2024320 #> [21,] -1.2916290 -0.6500968 0.4065917 0.1600773 #> [22,] -1.3082923 -0.7377160 0.6492396 0.1970477 #> [23,] -1.2334494 -0.7824171 0.5460141 0.1751200 #> [24,] -1.2307418 -0.7320717 0.4832905 0.1799636 #> [25,] -1.3745211 -0.6769474 0.6940851 0.2245997 #> [26,] -1.4237386 -0.7851848 0.5756534 0.2124725 #> [27,] -1.2741901 -0.6492443 0.5877968 0.1956832 #> [28,] -1.1180005 -0.6948921 0.6159922 0.1655834 #> [29,] -1.1435519 -0.6949538 0.5886766 0.1736435 #> [30,] -1.2999704 -0.6463263 0.4407454 0.1799873 #> [31,] -1.5277075 -0.6700489 0.7693353 0.2056187 #> [32,] -1.3583006 -0.7350555 0.7128378 0.2155958 #> [33,] -1.1253326 -0.7076415 0.5413434 0.1597984 #> [34,] -1.2076533 -0.7524936 0.4572553 0.1591182 #> [35,] -1.2932183 -0.6774493 0.7094676 0.2081379 #> [36,] -1.0114748 -0.9907262 0.5407341 0.1841633 #> [37,] -1.2759996 -0.5827415 0.6088163 0.2126526 #> [38,] -1.0650256 -0.6824697 0.5067497 0.1632599 #> [39,] -1.1647805 -0.6637146 0.5640144 0.2124185 #> [40,] -1.1610729 -0.6623362 0.5706719 0.2245656 #> [41,] -1.2932356 -0.6536455 0.6335321 0.2173542 #> [42,] -1.3098143 -0.6216076 0.7472250 0.2325364 #> [43,] -1.1264320 -0.6732470 0.5402224 0.1809871 #> [44,] -1.2865447 -0.7653235 0.9983763 0.3237331 #> [45,] -1.4360782 -0.7085184 0.7584256 0.2547333 #> [46,] -1.1186826 -0.6065196 0.5079966 0.1482779 #> [47,] -1.0823467 -0.5732527 0.5428531 0.1985621 #> [48,] -1.1597812 -0.5891118 0.6151728 0.1809847 #> [49,] -1.4135610 -0.6692559 0.7684605 0.2688995 #> [50,] -1.3255023 -0.6029758 0.6523020 0.2224729 #>  #> [[2]] #> Markov Chain Monte Carlo (MCMC) output: #> Start = 1  #> End = 50  #> Thinning interval = 1  #>        m_lMTRUE  m_lMFALSE         s        t0 #>  [1,] -1.166620 -0.6436965 0.5483156 0.1824958 #>  [2,] -1.129361 -0.6940353 0.6504419 0.2238207 #>  [3,] -1.035410 -0.5220367 0.4486110 0.1761931 #>  [4,] -1.174329 -0.6579760 0.4496510 0.1692996 #>  [5,] -1.346630 -0.8100170 0.8129067 0.1533285 #>  [6,] -1.216599 -0.6074362 1.0612011 0.2011152 #>  [7,] -1.167284 -0.8010020 0.5345502 0.2214807 #>  [8,] -1.402791 -0.5764342 0.9103967 0.1948459 #>  [9,] -1.155260 -0.7111675 0.6130229 0.2068978 #> [10,] -1.219703 -0.6077669 0.6361968 0.1736355 #> [11,] -1.138964 -0.9726752 0.5748449 0.1874014 #> [12,] -1.196334 -0.6423007 0.6124782 0.1683968 #> [13,] -1.308103 -0.7940534 0.4838400 0.1941362 #> [14,] -1.180130 -0.7931882 0.5255716 0.2093412 #> [15,] -1.206589 -0.8055788 0.4399331 0.1688123 #> [16,] -1.344950 -0.7079971 1.7433605 0.2657071 #> [17,] -1.274149 -0.7389293 0.6353651 0.2072035 #> [18,] -1.372032 -0.7443061 0.5059275 0.1946451 #> [19,] -1.138607 -0.7215356 0.4221424 0.1325161 #> [20,] -1.049668 -0.6572624 0.4629125 0.1250820 #> [21,] -1.237615 -0.6646893 0.5007629 0.1593965 #> [22,] -1.241572 -0.7703325 0.5805802 0.1705039 #> [23,] -1.073517 -0.6427730 0.5112735 0.1885735 #> [24,] -1.175376 -0.3144181 0.6528783 0.2560266 #> [25,] -1.297612 -0.6796154 0.5986907 0.2379454 #> [26,] -1.326655 -0.7546058 0.6085117 0.3510918 #> [27,] -1.529888 -0.6562680 0.7458121 0.2505685 #> [28,] -1.136565 -0.6996505 0.5880211 0.1793332 #> [29,] -1.228315 -0.7178054 0.6961524 0.2305281 #> [30,] -1.055710 -0.6861501 0.4216104 0.1720014 #> [31,] -1.033535 -0.6214487 0.5059544 0.1780939 #> [32,] -1.174620 -0.3461413 0.6293584 0.2530105 #> [33,] -1.281433 -0.7059498 0.5736847 0.2348974 #> [34,] -1.333515 -0.7361447 0.5846070 0.3017878 #> [35,] -1.111562 -0.7181569 0.5614534 0.1930306 #> [36,] -1.240188 -0.6678870 0.6529873 0.2018294 #> [37,] -1.034334 -0.6747510 0.4440856 0.1359399 #> [38,] -1.231319 -0.5082971 0.8640634 0.2534823 #> [39,] -1.292363 -0.7232922 0.5362257 0.1578257 #> [40,] -1.257335 -0.6700340 0.6330931 0.2132559 #> [41,] -1.104252 -0.6512645 0.5862228 0.1881040 #> [42,] -1.279697 -0.5904236 0.8222898 0.2395956 #> [43,] -1.175070 -0.7673987 0.6112281 0.2124924 #> [44,] -1.146769 -0.8066323 0.7578018 0.2559919 #> [45,] -1.185470 -0.7871866 0.5933441 0.2033400 #> [46,] -1.177755 -0.7978748 0.7010437 0.1901041 #> [47,] -1.224404 -0.7391781 0.4714232 0.1833023 #> [48,] -1.172331 -0.7891516 0.5212959 0.2088208 #> [49,] -1.254364 -0.7580256 0.5511295 0.2170247 #> [50,] -1.233781 -0.6687595 0.4517207 0.1818752 #>  #> [[3]] #> Markov Chain Monte Carlo (MCMC) output: #> Start = 1  #> End = 50  #> Thinning interval = 1  #>         m_lMTRUE  m_lMFALSE         s        t0 #>  [1,] -1.2731368 -0.7367828 0.5393966 0.1800588 #>  [2,] -1.3547698 -0.7719067 0.6059274 0.2881173 #>  [3,] -1.3701245 -0.6620441 2.7777240 0.4623419 #>  [4,] -1.1465094 -0.6569767 0.4442653 0.1291673 #>  [5,] -1.0888582 -0.6709700 0.2082840 0.1033847 #>  [6,] -1.2349771 -0.6354421 0.6250958 0.1939795 #>  [7,] -1.1523360 -0.7822882 0.6859788 0.2243507 #>  [8,] -1.3376190 -0.7546565 0.7115331 0.2670506 #>  [9,] -1.2858631 -0.9768512 0.4181991 0.1834650 #> [10,] -1.2834923 -0.7982710 0.5883589 0.1472735 #> [11,] -1.1955012 -0.6417108 1.0376509 0.2171665 #> [12,] -1.1194535 -0.6951976 0.5678184 0.1623017 #> [13,] -1.1484230 -0.8477156 0.5793230 0.1933313 #> [14,] -1.2353492 -0.7570164 0.6617036 0.2107478 #> [15,] -1.1855666 -0.6520351 0.7334752 0.1885796 #> [16,] -1.1831243 -0.7281809 0.5583322 0.1703373 #> [17,] -1.0674854 -0.6679383 0.4584398 0.1523974 #> [18,] -1.2724749 -0.8762560 0.5456309 0.1527952 #> [19,] -1.1304785 -0.6893755 0.4995961 0.1958766 #> [20,] -1.0947456 -0.7048952 0.6343532 0.2193115 #> [21,] -1.2312652 -0.6429199 0.5504249 0.2216558 #> [22,] -1.4128707 -0.8997997 0.5558181 0.2086801 #> [23,] -1.2010679 -0.6450097 0.4907052 0.1719908 #> [24,] -1.1176069 -0.7338291 0.5083830 0.2072398 #> [25,] -1.3255316 -0.6706068 0.8447773 0.2276562 #> [26,] -1.0486168 -0.6810839 0.5353877 0.1562091 #> [27,] -0.8296912 -0.7193978 0.6417813 0.1579394 #> [28,] -1.2717467 -0.6130800 0.5481344 0.1610885 #> [29,] -1.2628152 -0.7604565 0.5347309 0.1774062 #> [30,] -1.3068111 -0.7883407 0.5718342 0.2668543 #> [31,] -1.1065581 -0.6636373 0.4740449 0.1510734 #> [32,] -1.1168221 -0.6886473 0.4178538 0.1256710 #> [33,] -1.0812587 -0.6756990 0.2210258 0.1146578 #> [34,] -1.2672277 -0.6632880 0.6523421 0.2014930 #> [35,] -1.1825662 -0.7913080 0.7002053 0.2286720 #> [36,] -1.3015904 -0.6492433 0.6958241 0.2219591 #> [37,] -1.3076069 -0.7501126 0.5436814 0.1909402 #> [38,] -1.0704925 -0.7269100 0.2879609 0.1635738 #> [39,] -1.1477846 -0.6633830 0.7088244 0.1990619 #> [40,] -1.1472460 -0.7918392 0.5490609 0.1871133 #> [41,] -1.1453784 -0.6645891 0.3568385 0.1800180 #> [42,] -1.3768269 -0.6947874 0.7504402 0.3000593 #> [43,] -1.3988054 -0.8169032 0.6983234 0.2417897 #> [44,] -1.3060989 -0.6910173 0.5587477 0.2193387 #> [45,] -1.0728021 -0.7139964 0.3883413 0.1484307 #> [46,] -1.2396330 -0.7091984 0.4215551 0.1729264 #> [47,] -1.2875998 -0.7001954 0.5944964 0.1935024 #> [48,] -1.2233096 -0.7419060 0.6584175 0.2039052 #> [49,] -1.3139851 -0.7484463 0.7817506 0.2293535 #> [50,] -1.4367052 -0.5442389 0.8974026 0.3102700 #>  #> attr(,\"class\") #> [1] \"mcmc.list\" #>   # Or return the flattened correlation, with 10 iterations per chain get_pars(samples_LNR, stage = \"sample\", selection = \"correlation\", flatten = TRUE, length.out = 10) #> $correlation #> [[1]] #> Markov Chain Monte Carlo (MCMC) output: #> Start = 1  #> End = 10  #> Thinning interval = 1  #>          m_lMd.m         s.m         t0.m    s.m_lMd   t0.m_lMd      t0.s #>  [1,]  0.7401921 -0.27379473 -0.158828346 -0.3413920 -0.2905146 0.3927959 #>  [2,]  0.3346316 -0.61304302 -0.558801927 -0.7336282 -0.7844260 0.7683781 #>  [3,]  0.1188370  0.28776638  0.006526124  0.2388786 -0.7250749 0.2238313 #>  [4,]  0.9124463 -0.87236300 -0.862231024 -0.8900886 -0.9426745 0.7851931 #>  [5,]  0.3590428 -0.46676771 -0.647839026 -0.4795519 -0.5353959 0.4606919 #>  [6,]  0.9406204 -0.44714862 -0.838808838 -0.5896045 -0.9159409 0.6256583 #>  [7,]  0.1690634 -0.14484130 -0.158384599 -0.8944778 -0.9089595 0.9449304 #>  [8,] -0.3839514 -0.09195571 -0.344437397 -0.6433593 -0.3622843 0.6928654 #>  [9,] -0.3522426 -0.36777592 -0.601305576 -0.3882730 -0.3524715 0.6658014 #> [10,]  0.9090930 -0.86711946 -0.891770905 -0.9659576 -0.9780690 0.9817928 #>  #> [[2]] #> Markov Chain Monte Carlo (MCMC) output: #> Start = 1  #> End = 10  #> Thinning interval = 1  #>          m_lMd.m         s.m        t0.m     s.m_lMd   t0.m_lMd      t0.s #>  [1,] -0.1591950 -0.22621326 -0.64850124 -0.19525322 -0.1859843 0.5945697 #>  [2,]  0.8947240 -0.75283218 -0.91877790 -0.87442420 -0.9392924 0.8901573 #>  [3,]  0.7461567 -0.54518329 -0.80057319 -0.77988063 -0.5758995 0.2534077 #>  [4,] -0.0601351 -0.51358367 -0.71679722 -0.19411829  0.3429105 0.5453731 #>  [5,]  0.5415741 -0.05014657 -0.36095284 -0.67795467 -0.9334796 0.7978296 #>  [6,]  0.3359781 -0.07350043 -0.36210841 -0.20195811 -0.8030213 0.5572776 #>  [7,]  0.6836957 -0.37213531 -0.51927771 -0.48830478 -0.4964144 0.2420130 #>  [8,] -0.1372217 -0.37339802  0.03223619  0.43744387  0.1653675 0.4329614 #>  [9,]  0.1722723 -0.87588245 -0.79607169 -0.36240819 -0.5211272 0.9324336 #> [10,]  0.7667364  0.25789323 -0.65464871  0.07559904 -0.7871726 0.1661282 #>  #> [[3]] #> Markov Chain Monte Carlo (MCMC) output: #> Start = 1  #> End = 10  #> Thinning interval = 1  #>            m_lMd.m        s.m       t0.m    s.m_lMd   t0.m_lMd      t0.s #>  [1,]  0.779671663 -0.3930359 -0.8195756 -0.6519761 -0.7700062 0.3427482 #>  [2,]  0.820108180 -0.7745469 -0.9282492 -0.9152567 -0.8654701 0.8250528 #>  [3,]  0.826708155 -0.8783329 -0.7513702 -0.8713940 -0.6829756 0.8669153 #>  [4,] -0.117791279 -0.3631814 -0.4674088 -0.6545253 -0.3532025 0.6896687 #>  [5,] -0.224668284 -0.8187805 -0.7430029  0.0489364 -0.3700873 0.7957690 #>  [6,]  0.939392730 -0.9175202 -0.9202362 -0.8404066 -0.9018581 0.9174461 #>  [7,]  0.789599745 -0.7219735 -0.9141796 -0.8960489 -0.8141610 0.7474581 #>  [8,] -0.004242966 -0.1978745 -0.2696838 -0.8897465 -0.8507771 0.9709818 #>  [9,]  0.968739231 -0.7048245 -0.8805625 -0.8272502 -0.9545817 0.9266628 #> [10,]  0.765479769 -0.7338619 -0.6491893 -0.8594702 -0.9449381 0.7832226 #>  #> attr(,\"class\") #> [1] \"mcmc.list\" #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Prior — get_prior.emc","title":"Get Prior — get_prior.emc","text":"Extracts prior emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Prior — get_prior.emc","text":"","code":"# S3 method for class 'emc' get_prior(emc)  get_prior(emc)"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Prior — get_prior.emc","text":"emc emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Prior — get_prior.emc","text":"prior class emc.prior","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Prior — get_prior.emc","text":"","code":"get_prior(samples_LNR) #> Mean and variance of the prior on the transformed parameters:  #> m ~ 𝑁(0, 1) #> m_lMd ~ 𝑁(0, 1) #> s ~ 𝑁(0, 1) #> t0 ~ 𝑁(0, 1) #>  #> For detailed info use summary(<prior>)"},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":null,"dir":"Reference","previous_headings":"","what":"Within-Model Hypothesis Testing — hypothesis.emc","title":"Within-Model Hypothesis Testing — hypothesis.emc","text":"Approximates Bayes factor parameter effects using savage-dickey ratio.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Within-Model Hypothesis Testing — hypothesis.emc","text":"","code":"# S3 method for class 'emc' hypothesis(   emc,   parameter = NULL,   H0 = 0,   fun = NULL,   selection = \"mu\",   do_plot = TRUE,   use_prior_lim = TRUE,   N = 10000,   prior_args = list(),   ... )  hypothesis(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Within-Model Hypothesis Testing — hypothesis.emc","text":"emc emc object parameter string. parameter want compare H0. used FUN specified. H0 integer. H0 value want compare fun function. Specifies operation performed sampled mapped parameters. selection Character string. Indicates parameter type use (e.g., alpha, mu, sigma2, correlation). do_plot Boolean. FALSE omit prior-posterior plot return savage-dickey ratio. use_prior_lim Boolean. TRUE use xlimits based prior density, otherwise based posterior density. N Integer. many prior samples draw prior_args list. Optional additional arguments passed plot.default plotting prior density (see par()) ... Optional arguments can passed get_pars, density, plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Within-Model Hypothesis Testing — hypothesis.emc","text":"Bayes factor hypothesis H0.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Within-Model Hypothesis Testing — hypothesis.emc","text":"Note different computation marginal deviance compare since considers group level effect whole model (.e. subject-level parameters). details see: Wagenmakers, Lodewyckx, Kuriyal, & Grasman (2010).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Within-Model Hypothesis Testing — hypothesis.emc","text":"","code":"# Here the emc object has an effect parameter (e.g. m), # that maps onto a certain hypothesis. # The hypothesis here is that m is different from zero. # We can test whether there's a group-level effect on m: hypothesis(samples_LNR, parameter = \"m\")  #> [1] 4.803292e+15 # Alternatively we can also test whether two parameters differ from each other mdiff <- function(p)diff(p[c(\"m\",\"m_lMd\")]) hypothesis(samples_LNR,fun=mdiff)  #> [1] 16.11033"},{"path":"https://ampl-psych.github.io/EMC2/reference/init_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Chains — init_chains","title":"Initialize Chains — init_chains","text":"Adds set start points chain. start points sampled user-defined multivariate normal across subjects.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/init_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Chains — init_chains","text":"","code":"init_chains(   emc,   start_mu = NULL,   start_var = NULL,   particles = 1000,   cores_per_chain = 1,   cores_for_chains = length(emc) )"},{"path":"https://ampl-psych.github.io/EMC2/reference/init_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Chains — init_chains","text":"emc emc object made make_emc() start_mu vector. Mean multivariate normal used proposal distribution start_var matrix. Variance covariance matrix multivariate normal used proposal distribution. Smaller values lead less deviation around mean. particles integer. Number starting values cores_per_chain integer. many cores use per chain. Parallelizes across participant calculations. cores_for_chains integer. many cores use parallelize across chains. Default number chains.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/init_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Chains — init_chains","text":"emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/init_chains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize Chains — init_chains","text":"","code":"# \\donttest{ # Make a design and an emc object design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1),                            constants=c(s=log(1))) #> Parameter(s) SZ, Z, st0, sv not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $SZ #>  SZ #>   1 #>  #> $Z #>  Z #>  1 #>  #> $st0 #>  st0 #>    1 #>  #> $sv #>  sv #>   1 #>   DDMaE <- make_emc(forstmann, design_DDMaE) #> Processing data set 1 #> Likelihood speedup factor: 4 (3955 unique trials) # set up our mean starting points (same used across subjects). mu <- c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),        t0=log(.2)) # Small variances to simulate start points from a tight range var <- diag(0.05, length(mu)) # Initialize chains, 4 cores per chain, and parallelizing across our 3 chains as well # so 4*3 cores used. DDMaE <- init_chains(DDMaE, start_mu = mu, start_var = var,                      cores_per_chain = 1, cores_for_chains = 1) # Afterwards we can just use fit # DDMaE <- fit(DDMaE, cores_per_chain = 4) # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data — make_data","title":"Simulate Data — make_data","text":"Simulates data based model design parameter vector (p_vector) one two methods: Creating fully crossed balanced design specified design, number trials per cell specified n_trials argument Using design data frame supplied, allows creation unbalanced irregular designs, replacing previous data simulated data","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data — make_data","text":"","code":"make_data(   parameters,   design = NULL,   n_trials = NULL,   data = NULL,   expand = 1,   mapped_p = FALSE,   hyper = FALSE,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data — make_data","text":"parameters parameter vector used simulate data. Can also matrix one row per subject (corresponding row names) emc object sampled parameters (case posterior medians alpha used simulate data) design Design list created design() n_trials Integer. data supplied, number trials create per design cell data Data frame. supplied, factors taken data. Determines number trials per level design factors can thus allow unbalanced designs expand Integer. Replicates data (supplied) expand times increase number trials per cell. mapped_p TRUE instead returns data frame one row per design cell columns parameter specifying mapped design cells. hyper TRUE supplied parameters must set samples, group-level used generate subject level parameters. See also make_random_effects generate subject-level parameters hyper distribution. ... Additional optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data — make_data","text":"data frame simulated data","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data — make_data","text":"create data multiple subjects see ?make_random_effects().","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data — make_data","text":"","code":"# First create a design design_DDMaE <- design(factors = list(S = c(\"left\", \"right\"),                                            E = c(\"SPD\", \"ACC\"),                                            subjects = 1:30),                             Rlevels = c(\"left\", \"right\"), model = DDM,                             formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                             constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"  \"v_Sright\" \"a\"        \"a_EACC\"   \"t0\"       \"Z\"        \"sv\"       #> [8] \"SZ\"       #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>    E a a_EACC #>  SPD 1      0 #>  ACC 1      1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then create a p_vector: parameters <- c(v_Sleft=-2,v_Sright=2,a=log(1),a_EACC=log(2), t0=log(.2),               Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5))  # Now we can simulate data data <- make_data(parameters, design_DDMaE, n_trials = 30)  # We can also simulate data based on a specific dataset design_DDMaE <- design(data = forstmann,model=DDM,                             formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                             constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  parameters <- c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),               t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5))  data <- make_data(parameters, design_DDMaE, data = forstmann)"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an emc Object — make_emc","title":"Make an emc Object — make_emc","text":"Creates emc object combining data, prior, model specification emc object needed fit().","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an emc Object — make_emc","text":"","code":"make_emc(   data,   design,   model = NULL,   type = \"standard\",   n_chains = 3,   compress = TRUE,   rt_resolution = 0.02,   prior_list = NULL,   par_groups = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an emc Object — make_emc","text":"data data frame, list data frames. Needs variable subjects participant identifier. design list pre-specified design, output design(). model model list. none supplied, model specified design() used. type string indicating whether run standard group-level, blocked, diagonal, factor, single (.e., non-hierarchical) model. n_chains integer. Specifies number mcmc chains run (1 compute rhat). compress Boolean, TRUE (.e., default), data compressed speed likelihood calculations. rt_resolution double. Used compression, response times binned based resolution. prior_list named list containing prior. Default prior created NULL. default priors, see ?get_prior_{type}. par_groups vector. specified type blocked, e.g., c(1,1,1,2,2) means covariances first three last two parameters estimated two separate blocks. ... Additional, optional arguments.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an emc Object — make_emc","text":"uninitialized emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_emc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make an emc Object — make_emc","text":"","code":"dat <- forstmann  # function that takes the lR factor (named diff in the following function) and # returns a logical defining the correct response for each stimulus. In this # case the match is simply such that the S factor equals the latent response factor. matchfun <- function(d)d$S==d$lR  # design an \"average and difference\" contrast matrix ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"diff\"))  # specify design design_LBABE <- design(data = dat,model=LBA,matchfun=matchfun, formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~1), contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1))) #>  #>  Sampled Parameters:  #> [1] \"v\"           \"v_lMdiff\"    \"sv_lMTRUE\"   \"B\"           \"B_Eneutral\"  #> [6] \"B_Eaccuracy\" \"B_lRright\"   \"A\"           \"t0\"          #>  #>  Design Matrices:  #> $v #>     lM v v_lMdiff #>   TRUE 1      0.5 #>  FALSE 1     -0.5 #>  #> $sv #>     lM sv sv_lMTRUE #>   TRUE  1         1 #>  FALSE  1         0 #>  #> $B #>         E    lR B B_Eneutral B_Eaccuracy B_lRright #>     speed  left 1          0           0         0 #>     speed right 1          0           0         1 #>   neutral  left 1          1           0         0 #>   neutral right 1          1           0         1 #>  accuracy  left 1          0           1         0 #>  accuracy right 1          0           1         1 #>  #> $A #>  A #>  1 #>  #> $t0 #>  t0 #>   1 #>   # specify priors pmean <- c(v=1,v_lMdiff=1,sv_lMTRUE=log(.5), B=log(.5),B_Eneutral=log(1.5),            B_Eaccuracy=log(2),B_lRright=0, A=log(0.25),t0=log(.2)) psd <- c(v=1,v_lMdiff=0.5,sv_lMTRUE=.5,          B=0.3,B_Eneutral=0.3,B_Eaccuracy=0.3,B_lRright=0.3,A=0.4,t0=.5) prior_LBABE <- prior(design_LBABE, type = 'standard',pmean=pmean,psd=psd)  # create emc object LBABE <- make_emc(dat,design_LBABE,type=\"standard\",  prior=prior_LBABE) #> Processing data set 1 #> Likelihood speedup factor: 4 (3955 unique trials)"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_random_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Subject-Level Parameters — make_random_effects","title":"Generate Subject-Level Parameters — make_random_effects","text":"Simulates subject-level parameters format required make_data().","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_random_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Subject-Level Parameters — make_random_effects","text":"","code":"make_random_effects(   design,   group_means,   n_subj = NULL,   variance_proportion = 0.2,   covariances = NULL )"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_random_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Subject-Level Parameters — make_random_effects","text":"design design list. design specified design() group_means numeric vector. group level means parameter, order sampled_pars(design) n_subj integer. number subjects generate parameters . NULL inferred design variance_proportion double. Optional. covariances specified, variances created multiplying means number. covariances 0. covariances covariance matrix. Optional. Specify intended covariance matrix.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_random_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Subject-Level Parameters — make_random_effects","text":"matrix subject-level parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_random_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Subject-Level Parameters — make_random_effects","text":"","code":"# First create a design design_DDMaE <- design(data = forstmann,model=DDM,                             formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                             constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then create a group-level means vector: group_means =c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),                t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) # Now we can create subject-level parameters subj_pars <- make_random_effects(design_DDMaE, group_means, n_subj = 19)  # We can also define a covariance matrix to simulate from subj_pars <- make_random_effects(design_DDMaE, group_means, n_subj = 19,              covariances = diag(.1, length(group_means)))  # The subject level parameters can be used to generate data make_data(subj_pars, design_DDMaE, n_trials = 10) #>      subjects        E     S trials     R        rt #> 1        as1t    speed  left      1  left 0.1739289 #> 20       as1t  neutral  left      1  left 0.1857003 #> 39       as1t accuracy  left      1  left 0.5122115 #> 58       as1t    speed right      1  left 0.2127294 #> 77       as1t  neutral right      1 right 0.2512599 #> 96       as1t accuracy right      1 right 0.7732646 #> 115      as1t    speed  left      2  left 0.1458726 #> 134      as1t  neutral  left      2  left 0.1654491 #> 153      as1t accuracy  left      2  left 0.3368329 #> 172      as1t    speed right      2  left 0.4247824 #> 191      as1t  neutral right      2 right 0.1897626 #> 210      as1t accuracy right      2 right 1.0105605 #> 229      as1t    speed  left      3  left 0.2193947 #> 248      as1t  neutral  left      3 right 0.2874850 #> 267      as1t accuracy  left      3  left 0.5245214 #> 286      as1t    speed right      3 right 0.3509188 #> 305      as1t  neutral right      3 right 0.1495483 #> 324      as1t accuracy right      3 right 0.8246675 #> 343      as1t    speed  left      4  left 0.2364307 #> 362      as1t  neutral  left      4  left 0.1666933 #> 381      as1t accuracy  left      4  left 0.7700385 #> 400      as1t    speed right      4 right 0.1921199 #> 419      as1t  neutral right      4 right 0.5071156 #> 438      as1t accuracy right      4 right 1.1669174 #> 457      as1t    speed  left      5  left 0.4437099 #> 476      as1t  neutral  left      5  left 0.2393762 #> 495      as1t accuracy  left      5  left 0.4166828 #> 514      as1t    speed right      5  left 0.1987408 #> 533      as1t  neutral right      5 right 0.1828121 #> 552      as1t accuracy right      5 right 0.9692529 #> 571      as1t    speed  left      6  left 0.2384956 #> 590      as1t  neutral  left      6  left 0.1219610 #> 609      as1t accuracy  left      6  left 0.9338652 #> 628      as1t    speed right      6 right 0.3004748 #> 647      as1t  neutral right      6 right 0.2649877 #> 666      as1t accuracy right      6 right 0.3732264 #> 685      as1t    speed  left      7  left 0.2451327 #> 704      as1t  neutral  left      7  left 0.2403125 #> 723      as1t accuracy  left      7  left 1.0741274 #> 742      as1t    speed right      7 right 0.1673596 #> 761      as1t  neutral right      7 right 0.5069372 #> 780      as1t accuracy right      7 right 0.8375290 #> 799      as1t    speed  left      8  left 0.1386146 #> 818      as1t  neutral  left      8  left 0.4088141 #> 837      as1t accuracy  left      8  left 0.4529004 #> 856      as1t    speed right      8  left 0.1524746 #> 875      as1t  neutral right      8 right 0.2790089 #> 894      as1t accuracy right      8 right 0.6341080 #> 913      as1t    speed  left      9  left 0.1554695 #> 932      as1t  neutral  left      9  left 0.1879992 #> 951      as1t accuracy  left      9  left 1.4475942 #> 970      as1t    speed right      9 right 0.1578595 #> 989      as1t  neutral right      9 right 0.3620401 #> 1008     as1t accuracy right      9 right 0.5271057 #> 1027     as1t    speed  left     10  left 0.1389430 #> 1046     as1t  neutral  left     10 right 0.5749928 #> 1065     as1t accuracy  left     10  left 1.3962296 #> 1084     as1t    speed right     10 right 0.2340322 #> 1103     as1t  neutral right     10 right 0.5576933 #> 1122     as1t accuracy right     10  left 0.7994647 #> 2        bd6t    speed  left      1  left 0.4713983 #> 21       bd6t  neutral  left      1  left 0.2987067 #> 40       bd6t accuracy  left      1  left 1.3923496 #> 59       bd6t    speed right      1 right 0.1939515 #> 78       bd6t  neutral right      1 right 0.3400629 #> 97       bd6t accuracy right      1 right 1.0640051 #> 116      bd6t    speed  left      2 right 0.2746947 #> 135      bd6t  neutral  left      2  left 0.4954209 #> 154      bd6t accuracy  left      2  left 1.0532222 #> 173      bd6t    speed right      2  left 0.3009342 #> 192      bd6t  neutral right      2 right 1.0166187 #> 211      bd6t accuracy right      2 right 0.9897111 #> 230      bd6t    speed  left      3  left 0.5083403 #> 249      bd6t  neutral  left      3  left 0.3583790 #> 268      bd6t accuracy  left      3  left 0.8675884 #> 287      bd6t    speed right      3 right 0.2277594 #> 306      bd6t  neutral right      3 right 0.2947048 #> 325      bd6t accuracy right      3 right 0.6948552 #> 344      bd6t    speed  left      4  left 0.3793804 #> 363      bd6t  neutral  left      4  left 0.2977988 #> 382      bd6t accuracy  left      4  left 0.4178160 #> 401      bd6t    speed right      4 right 0.2224853 #> 420      bd6t  neutral right      4 right 0.7395757 #> 439      bd6t accuracy right      4 right 1.7623632 #> 458      bd6t    speed  left      5  left 0.2710349 #> 477      bd6t  neutral  left      5  left 0.5462134 #> 496      bd6t accuracy  left      5  left 1.1705083 #> 515      bd6t    speed right      5  left 0.2147056 #> 534      bd6t  neutral right      5 right 0.3577717 #> 553      bd6t accuracy right      5 right 0.3407533 #> 572      bd6t    speed  left      6  left 0.2502133 #> 591      bd6t  neutral  left      6  left 1.2994841 #> 610      bd6t accuracy  left      6  left 0.6708505 #> 629      bd6t    speed right      6 right 0.2607135 #> 648      bd6t  neutral right      6 right 0.2533927 #> 667      bd6t accuracy right      6 right 0.5549022 #> 686      bd6t    speed  left      7  left 0.2466625 #> 705      bd6t  neutral  left      7  left 0.6153619 #> 724      bd6t accuracy  left      7 right 0.4179532 #> 743      bd6t    speed right      7 right 0.2351906 #> 762      bd6t  neutral right      7 right 0.2716931 #> 781      bd6t accuracy right      7 right 0.5050941 #> 800      bd6t    speed  left      8  left 0.2450574 #> 819      bd6t  neutral  left      8  left 0.3935660 #> 838      bd6t accuracy  left      8  left 0.4750647 #> 857      bd6t    speed right      8 right 0.1912268 #> 876      bd6t  neutral right      8 right 0.9844539 #> 895      bd6t accuracy right      8 right 0.5795268 #> 914      bd6t    speed  left      9  left 0.2624711 #> 933      bd6t  neutral  left      9  left 0.7337030 #> 952      bd6t accuracy  left      9  left 0.8479317 #> 971      bd6t    speed right      9  left 0.3416137 #> 990      bd6t  neutral right      9 right 0.7615374 #> 1009     bd6t accuracy right      9 right 0.4473530 #> 1028     bd6t    speed  left     10  left 0.2220383 #> 1047     bd6t  neutral  left     10  left 0.4529179 #> 1066     bd6t accuracy  left     10  left 1.8410419 #> 1085     bd6t    speed right     10 right 0.3136252 #> 1104     bd6t  neutral right     10 right 0.3131521 #> 1123     bd6t accuracy right     10 right 0.4272405 #> 3        bl1t    speed  left      1 right 0.2622108 #> 22       bl1t  neutral  left      1  left 0.5173025 #> 41       bl1t accuracy  left      1  left 0.7713296 #> 60       bl1t    speed right      1 right 0.2571113 #> 79       bl1t  neutral right      1 right 0.3729965 #> 98       bl1t accuracy right      1 right 0.7526458 #> 117      bl1t    speed  left      2 right 0.6373499 #> 136      bl1t  neutral  left      2  left 1.3909282 #> 155      bl1t accuracy  left      2  left 0.4099769 #> 174      bl1t    speed right      2 right 0.4568756 #> 193      bl1t  neutral right      2 right 1.3672298 #> 212      bl1t accuracy right      2 right 0.4094694 #> 231      bl1t    speed  left      3  left 0.3123721 #> 250      bl1t  neutral  left      3  left 0.7101259 #> 269      bl1t accuracy  left      3  left 0.4502619 #> 288      bl1t    speed right      3 right 0.2512112 #> 307      bl1t  neutral right      3 right 0.3461823 #> 326      bl1t accuracy right      3 right 0.2716901 #> 345      bl1t    speed  left      4 right 0.2310379 #> 364      bl1t  neutral  left      4  left 0.8900620 #> 383      bl1t accuracy  left      4  left 1.4054401 #> 402      bl1t    speed right      4 right 0.2397503 #> 421      bl1t  neutral right      4 right 0.5212424 #> 440      bl1t accuracy right      4 right 0.4004643 #> 459      bl1t    speed  left      5  left 0.4522427 #> 478      bl1t  neutral  left      5  left 0.3721917 #> 497      bl1t accuracy  left      5 right 0.2582251 #> 516      bl1t    speed right      5 right 0.3522924 #> 535      bl1t  neutral right      5 right 0.5599462 #> 554      bl1t accuracy right      5 right 0.2468689 #> 573      bl1t    speed  left      6  left 0.3471776 #> 592      bl1t  neutral  left      6  left 0.6379985 #> 611      bl1t accuracy  left      6 right 0.8491322 #> 630      bl1t    speed right      6 right 0.4050914 #> 649      bl1t  neutral right      6 right 0.3029159 #> 668      bl1t accuracy right      6 right 0.2840156 #> 687      bl1t    speed  left      7 right 0.2854414 #> 706      bl1t  neutral  left      7  left 0.8823628 #> 725      bl1t accuracy  left      7  left 1.2623431 #> 744      bl1t    speed right      7 right 0.3738304 #> 763      bl1t  neutral right      7 right 0.4044063 #> 782      bl1t accuracy right      7 right 0.5923090 #> 801      bl1t    speed  left      8  left 0.4801990 #> 820      bl1t  neutral  left      8  left 0.5510942 #> 839      bl1t accuracy  left      8  left 0.7893112 #> 858      bl1t    speed right      8 right 0.2376798 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 974 rows ]"},{"path":"https://ampl-psych.github.io/EMC2/reference/mapped_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Mapping Back to the Design Factors — mapped_pars","title":"Parameter Mapping Back to the Design Factors — mapped_pars","text":"Maps parameters cognitive model back experimental design. p_vector left unspecified print textual description mapping. Otherwise p_vector can created using sampled_pars(). returned matrix shows whether/parameters differ across experimental factors.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/mapped_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Mapping Back to the Design Factors — mapped_pars","text":"","code":"mapped_pars(   x,   p_vector = NULL,   model = NULL,   digits = 3,   remove_subjects = TRUE,   covariates = NULL,   ... )  # S3 method for class 'emc.design' mapped_pars(   x,   p_vector = NULL,   model = NULL,   digits = 3,   remove_subjects = TRUE,   covariates = NULL,   ... )  # S3 method for class 'emc.prior' mapped_pars(   x,   p_vector = NULL,   model = NULL,   digits = 3,   remove_subjects = TRUE,   covariates = NULL,   ... )  # S3 method for class 'emc' mapped_pars(   x,   p_vector = NULL,   model = NULL,   digits = 3,   remove_subjects = TRUE,   covariates = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/mapped_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Mapping Back to the Design Factors — mapped_pars","text":"x emc, emc.prior emc.design object p_vector Optional. Specify parameter vector get numeric mappings. Must form sampled_pars(design) model Optional model type (already specified design) digits Integer. round output parameter values many decimals remove_subjects Boolean. Whether include subjects factor design covariates Covariates specified design can included . ... optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/mapped_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Mapping Back to the Design Factors — mapped_pars","text":"Matrix column factor design   model parameter type (p_type).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/mapped_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Mapping Back to the Design Factors — mapped_pars","text":"","code":"# First define a design: design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  mapped_pars(design_DDMaE) #> $v  #>   S       #>  left   : v_Sleft #>  right  : v_Sright #>  #> $a  #>   E          #>  speed     : exp(a) #>  neutral   : exp(a + a_Eneutral) #>  accuracy  : exp(a + a_Eaccuracy) #>  # Then create a p_vector: p_vector=c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),           t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) # This will map the parameters of the p_vector back to the design mapped_pars(design_DDMaE, p_vector) #>          E     S  v   a  sv  t0 st0 s   Z  SZ    z   sz #> 1    speed  left -2 1.0 0.5 0.2   0 1 0.5 0.5 0.50 0.50 #> 2  neutral  left -2 1.5 0.5 0.2   0 1 0.5 0.5 0.75 0.75 #> 3 accuracy  left -2 2.0 0.5 0.2   0 1 0.5 0.5 1.00 1.00 #> 4    speed right  2 1.0 0.5 0.2   0 1 0.5 0.5 0.50 0.50 #> 5  neutral right  2 1.5 0.5 0.2   0 1 0.5 0.5 0.75 0.75 #> 6 accuracy right  2 2.0 0.5 0.2   0 1 0.5 0.5 1.00 1.00"},{"path":"https://ampl-psych.github.io/EMC2/reference/merge_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Samples — merge_chains","title":"Merge Samples — merge_chains","text":"Merges samples chains one unlisted object.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/merge_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Samples — merge_chains","text":"","code":"merge_chains(emc)"},{"path":"https://ampl-psych.github.io/EMC2/reference/merge_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Samples — merge_chains","text":"emc emc object, commonly output fit()","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/merge_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Samples — merge_chains","text":"unlisted emc object chains merged","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/merge_chains.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge Samples — merge_chains","text":"Note sampling stages included merged output, including iterations preburn, burn, adapt stages. merge_chains(emc)$samples$stage shows corresponding sampling stages.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/model_averaging.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Averaging — model_averaging","title":"Model Averaging — model_averaging","text":"Computes model weights Bayes factor comparing two groups models based Information Criterion (IC) values. function works either numeric vectors data frames containing multiple IC measures (e.g., MD, BPIC, DIC).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/model_averaging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Averaging — model_averaging","text":"","code":"model_averaging(IC_for, IC_against)"},{"path":"https://ampl-psych.github.io/EMC2/reference/model_averaging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Averaging — model_averaging","text":"IC_for numeric vector output compare IC_against numeric vector output compare","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/model_averaging.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Averaging — model_averaging","text":"data.frame following columns: wFor aggregated weight models favor. wAgainst aggregated weight models . Factor Bayes factor (ratio wFor wAgainst). IC_for data frame, matrix rows corresponding IC measure returned.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/model_averaging.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model Averaging — model_averaging","text":"provided numeric vectors, computes weights two groups first converting IC values relative weights normalizing . provided data frame, assumes data frame output call compare applies averaging IC metric","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/model_averaging.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Averaging — model_averaging","text":"","code":"# First set up some example models (normally these would be alternative models) samples_LNR2 <- subset(samples_LNR, length.out = 45) samples_LNR3 <- subset(samples_LNR, length.out = 40) samples_LNR4 <- subset(samples_LNR, length.out = 35)  # Run compare on them, BayesFactor = F is set for speed. ICs <- compare(list(S1 = samples_LNR, S2 = samples_LNR2,                     S3 = samples_LNR3, S4 = samples_LNR4), BayesFactor = FALSE) #>     DIC  wDIC BPIC wBPIC EffectiveN meanD Dmean minD #> S1 -615 0.210 -579 0.197         35  -650  -657 -686 #> S2 -615 0.223 -580 0.223         35  -650  -657 -686 #> S3 -615 0.282 -580 0.295         35  -651  -657 -686 #> S4 -615 0.285 -580 0.285         35  -651  -657 -686  # Model averaging can either be done with a vector of ICs: model_averaging(ICs$BPIC[1:2], ICs$BPIC[2:4]) #>        wFor  wAgainst    Factor #> 1 0.3431633 0.6568367 0.5224484  # Or the output of compare: model_averaging(ICs[1:2,], ICs[3:4,]) #>           wFor  wAgainst    Factor #> BPIC 0.4197186 0.5802814 0.7233018 #> DIC  0.4324931 0.5675069 0.7620930"},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Within-Chain Correlations — pairs_posterior","title":"Plot Within-Chain Correlations — pairs_posterior","text":"Plots within-chain parameter correlations (upper triangle) corresponding scatterplots (lower triangle) visualize parameter sloppiness.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Within-Chain Correlations — pairs_posterior","text":"","code":"pairs_posterior(   emc,   selection = \"alpha\",   scale_subjects = TRUE,   do_plot = TRUE,   N = 500,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Within-Chain Correlations — pairs_posterior","text":"emc emc object selection Character string. Indicates parameter type plot (alpha, mu, variance, covariance, correlation). scale_subjects Boolean. standardize participant selection = \"alpha\", subtracting mean divding standard deviation. ensures plot every participant scale. do_plot Boolean. Whether plot pairs plot, FALSE, correlations returned. N Integer maximum number iterations used (defaults 500). number samples stage selection exceeds N, random subset taken size N ... Optional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Within-Chain Correlations — pairs_posterior","text":"Invisibly returns matrix correlations parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Within-Chain Correlations — pairs_posterior","text":"selection = alpha parameter chains concatenated across participants, (standardizing scale_subjects = TRUE) correlated.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Within-Chain Correlations — pairs_posterior","text":"","code":"# \\donttest{ # Plot the sloppiness for the individual-level subjects pairs_posterior(samples_LNR, selection = \"alpha\")   # We can also choose group-level parameters and subsets of the parameter space  pairs_posterior(samples_LNR, use_par = c(\"m\", \"t0\"), selection = \"sigma2\")  # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Data Frame of Parameters — parameters.emc.prior","title":"Return Data Frame of Parameters — parameters.emc.prior","text":"Return Data Frame Parameters","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Data Frame of Parameters — parameters.emc.prior","text":"","code":"# S3 method for class 'emc.prior' parameters(x, selection = \"mu\", N = 1000, covariates = NULL, ...)  # S3 method for class 'emc' parameters(x, selection = \"mu\", N = NULL, resample = FALSE, ...)  parameters(x, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Data Frame of Parameters — parameters.emc.prior","text":"x emc emc.prior object selection String designating parameter type (e.g. mu, sigma2, correlation, alpha) N Integer. many samples take posterior/prior. NULL return full posterior covariates priors, possible covariates design ... Optional arguments can passed get_pars resample Boolean. TRUE sample N samples posterior replacement","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Data Frame of Parameters — parameters.emc.prior","text":"data frame one row sample (subjects column selection = \"alpha\" using draws posterior)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Data Frame of Parameters — parameters.emc.prior","text":"","code":"# For prior inference: # First set up a prior design_DDMaE <- design(data = forstmann,model=DDM,                        formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                        constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then set up a prior using make_prior p_vector=c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),            t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) psd <- c(v_Sleft=1,v_Sright=1,a=.3,a_Eneutral=.3,a_Eaccuracy=.3,          t0=.4,Z=1,sv=.4,SZ=1) # Here we left the variance prior at default prior_DDMaE <- prior(design_DDMaE,mu_mean=p_vector,mu_sd=psd) # Get our prior samples parameters(prior_DDMaE, N = 100) #>        v_Sleft   v_Sright           a   a_Eneutral a_Eaccuracy         t0 #> 1   -1.1416915  2.3173229 -0.51109224  0.283614185   1.0073462 -1.0540564 #> 2   -2.0566665  1.6554879 -0.13735483  0.605445360   0.8541901 -1.3716687 #> 3   -1.6281480  2.8599310 -0.02132921  0.891669494   0.6878761 -1.9548654 #> 4   -2.5412000  3.6703744  0.11986715  0.690212066   0.4456369 -2.5335320 #> 5   -2.1995980  0.6452539  0.04106949  0.426628317   0.7130734 -2.0994492 #> 6   -0.8141854  1.2915389 -0.25417236  0.911065482   0.7429473 -1.6394843 #> 7   -1.9554243  3.3820785  0.20488387  0.418939618   0.4583172 -1.7382465 #> 8   -4.0340593  2.1924282  0.34122036  0.652897555   1.2411294 -1.2017252 #> 9   -2.3568818  2.6255882 -0.53881663  0.357768614   0.6026777 -1.8935285 #> 10  -2.0865426  0.8777483 -0.06901595  0.295388054   0.8160726 -0.8294440 #> 11  -2.5895421  3.2893817  0.08508197  0.162953952   0.8914797 -1.4201901 #> 12  -1.8185852  2.8973622  0.23942102  0.774481995   0.5997079 -1.6051723 #> 13  -1.8888197  3.2456440  0.14252325  0.528961543   0.5562231 -1.8630478 #> 14  -0.8560396  2.0068901  0.14442980  1.055508552   0.6973099 -2.2733649 #> 15  -2.7906216  2.1750554  0.20961167  0.593896800   0.6235540 -1.9081904 #> 16   0.0376485  3.1345184  0.34589278  0.574924217   0.8340946 -1.9854354 #> 17  -2.0438247  0.8972661 -0.27798783  0.125991064   1.1895932 -2.0513701 #> 18  -2.2271236  0.7910470 -0.02321202  0.928104230   0.7115112 -1.5114151 #> 19  -2.3697410  3.0693997  0.10105016  0.565681665   0.8363711 -1.8212252 #> 20  -2.7686513  1.5085714 -0.05007807  0.888654145   1.1455259 -1.4582573 #> 21  -1.6047060  2.4950762  0.38769424  0.746886193   0.4995318 -1.0564790 #> 22  -3.1601454  1.7931506  0.14199690  0.323877825   0.4837432 -1.5181904 #> 23   0.6409475  1.4205702 -0.03650553  0.301175540   0.3349149 -1.7971514 #> 24  -1.7616339  1.4291119  0.13539733  0.544494534   0.5610069 -0.8151702 #> 25  -1.0250948  1.9730051 -0.17628314  0.722972625   0.8018822 -2.0822661 #> 26  -2.9080869  3.8355001 -0.42610663  0.243553349   0.3833743 -1.4373460 #> 27  -1.9026307  3.3950825  0.18024621  0.462172758   1.4841587 -2.1687452 #> 28  -1.5688603  2.6781407 -0.26020893  0.891305958   0.4962590 -1.6962286 #> 29  -2.9316472  0.5952880  0.20849653  0.574157574   0.4307204 -1.4764877 #> 30  -1.3349026  0.8750278 -0.08144960  0.214935605   1.0646573 -1.6059263 #> 31  -2.6222337  1.2684292 -0.05799295  0.592956299   0.6685207 -1.9434007 #> 32  -0.8890701  1.9980422 -0.44259114  0.408966813   0.5995436 -1.5115197 #> 33  -1.6238678  1.2660863  0.11730688  0.644268234   0.1235126 -1.2206128 #> 34  -3.1883196  1.4136532 -0.08760609  0.262894755   0.8273366 -1.8724887 #> 35  -1.4975294  2.5954290  0.27013346  0.556901832   0.5394953 -1.7567228 #> 36  -0.2033707  1.9215451 -0.15425167  0.505211358   0.8114512 -1.5317360 #> 37  -2.3847509  0.9972227 -0.33752041  0.205507504   0.9549056 -1.9435339 #> 38  -2.1828633  2.3420169 -0.24769638  0.215072011   0.9131628 -1.6782900 #> 39  -1.9801230 -0.4759292 -0.33342033  0.543297289   1.0931955 -1.8537433 #> 40  -3.8649923  2.4544444  0.13292260  0.096045100  -0.3185924 -1.6194341 #> 41  -1.8856117  0.4498653  0.15930145  0.315243238   0.1534734 -1.8538199 #> 42  -2.8549388  2.7477832 -0.28954649  0.069185701   0.7896863 -1.8667256 #> 43  -1.2832605  0.4145366 -0.54334041  0.644411102   0.3989040 -1.7381261 #> 44  -1.0499905  3.6605168  0.02640421  0.738416842   0.5472555 -2.3774747 #> 45  -1.3059009  1.6998868  0.15124344  0.618944057   0.9547638 -2.1899438 #> 46  -2.3498661  1.5638604  0.22483213  0.320838370   0.5199257 -1.7080390 #> 47  -3.3114075  2.7656255 -0.06268072  0.597764908   0.5878953 -2.3539272 #> 48  -2.8095152  2.8657220 -0.29964437  0.090596021   1.0138830 -1.9785056 #> 49  -1.9982267  2.0716273 -0.23840262  0.130075268  -0.1327131 -1.0517353 #> 50  -0.2617311  2.1644574  0.16814749  0.216270117   1.0151343 -1.7290031 #> 51  -2.8739061  3.0078807 -0.15836225  0.967615364   1.1045430 -1.6399890 #> 52  -2.9250205  3.7094431 -0.20125600  0.848949454   1.2603597 -1.7119251 #> 53  -2.5277487 -0.3040231 -0.44265429  0.737247964   0.1916349 -1.6145837 #> 54  -1.2195199  0.8157127  0.88850350  0.493593390   0.1902356 -0.7115241 #> 55  -3.2376238  4.0386419  0.09963984  0.565036908   0.7113416 -1.7776959 #> 56  -1.0439273  4.5144808 -0.29448265  0.124887261   0.6701893 -1.7347686 #> 57  -2.4786681  3.1151709 -0.19544434  0.389369875   0.4207758 -2.1150494 #> 58  -3.1276351  0.8505346  0.08141339  0.842318220   0.4291288 -1.0753760 #> 59  -2.4405056  0.8158104 -0.05884755  0.247592466   0.1154314 -1.6195021 #> 60  -2.7422779  3.2692950 -0.17021101  0.677222628   0.8956888 -1.4540610 #> 61  -0.7885207  2.5878075  0.19903316  0.245373674   0.2872312 -1.6854770 #> 62  -1.6240920  3.6563656 -0.28856380  0.602719484   0.5828059 -1.6285180 #> 63   0.4031052  0.6837324  0.47854901  0.174947394   0.5100035 -2.2982667 #> 64  -2.9565757  1.6677840  0.51201357  0.926172188   0.7935087 -2.4204652 #> 65  -1.7674074  1.4694188 -0.44426992  0.405195609   0.7837816 -1.3007891 #> 66  -0.6562257  3.2451656  0.65513183  0.480893527   0.5880621 -1.5345498 #> 67  -3.1505486  2.0933621  0.03228507  0.349563240   0.6230344 -1.6779733 #> 68  -4.1242073  2.8975280  0.04613808  0.134598458   0.8184197 -1.7778080 #> 69  -1.7152922  2.3196024 -0.21326146  0.587213727   0.8313903 -2.0425338 #> 70  -1.6906975  2.8452565  0.07813253  0.567685786   1.0282315 -1.8828072 #> 71   0.3024903  1.7154407 -0.05683903  1.156390220   0.7555864 -1.4139788 #> 72  -0.1853858  2.0825635  0.22030254  0.309008921   1.1666010 -1.1134159 #> 73  -2.3411469  1.3978240  0.19407482  0.095942454   0.8171683 -1.6408790 #> 74  -1.4945621  2.7712067 -0.16040983  0.297704720   0.6038956 -2.1169825 #> 75  -2.8552585  0.8579448  0.12895644  0.561823091   0.8683300 -1.4031968 #> 76  -3.3810884  1.3214145 -0.16516327  0.381713684   1.3422764 -1.7770926 #> 77  -1.6689946  1.3671982  0.31236175  0.505201758   0.3784053 -1.8305258 #> 78  -0.7991418  3.1860677 -0.07996855  0.468144054   0.9115151 -1.9145682 #> 79  -2.0410327  2.7419804 -0.05317741  0.207509546   0.9562150 -1.2625552 #> 80  -2.0393918  2.0296093 -0.01566881  0.502849427   0.2325515 -1.2548116 #> 81  -2.0397487  1.1112150  0.08309410  0.397361290   0.1227970 -1.9770988 #> 82  -2.7286654  1.2443704  0.14995361  0.140781706   0.8215604 -0.6262587 #> 83  -1.2665372  1.4667500  0.08913807  0.252919125   0.8600286 -1.4567351 #> 84  -2.8802783  1.1133775  0.06209916  0.465259324   0.9500902 -2.0429451 #> 85  -1.0154143  1.7264945  0.51034765  0.394529477   0.9310619 -1.3359902 #> 86  -3.2730017  2.5241377 -0.01997865  0.008852041   0.9078903 -2.0077633 #> 87  -2.8592207  3.5935873 -0.07105755  0.739838873   0.4659275 -1.4608585 #> 88  -2.1092097  1.9621016  0.23793416  0.697217024   0.9129896 -1.4498128 #> 89  -3.3374927  1.7384664  0.21257283  0.347217833   0.9114250 -0.5578739 #> 90  -2.2203090  1.4083945  0.18384121  0.713374380   0.3001783 -2.0770775 #> 91  -1.3951535  1.8512623 -0.24950835  0.927903848   0.7739906 -1.7977597 #> 92  -1.2702873  3.3266684 -0.22441444  0.096822574   0.5722895 -2.1882282 #> 93  -1.7368854  1.1043003  0.43448268  0.223757610   0.9532635 -1.8919066 #> 94  -3.2258873  1.2403986 -0.17581065  0.760861261   0.8225156 -1.7595372 #> 95  -0.5812340  1.6861554  0.02577961  0.461645619   0.4750593 -1.8213233 #> 96  -3.5304591  2.8200715 -0.54236213  0.020940152   0.5249138 -2.0304269 #> 97  -1.3765682  1.7634634 -0.10106752  0.638528214   0.3242086 -1.7844081 #> 98  -1.1710940  2.4888038 -0.55434429  0.228327120   0.1223080 -1.7759106 #> 99  -3.1622648  1.3191302 -0.20590958  0.730612513   1.2007045 -1.7966911 #> 100 -3.3088759  1.9938748 -0.18475475 -0.056211919   0.6214544 -1.3341724 #>                 Z           sv          SZ #> 1   -0.8638984677 -0.909371320  0.30912023 #> 2    2.0541233894 -1.228311346 -0.20698596 #> 3    0.4818826695 -0.751215005  0.34576620 #> 4    0.5812650786 -0.442979084 -0.34008215 #> 5   -0.8349137129 -0.626396434 -0.63870871 #> 6   -0.2940999086 -0.477507377 -1.19315297 #> 7    0.6469289788 -0.337871040  0.83475227 #> 8   -1.1583939008 -0.256256463  0.19462606 #> 9    0.5007380060 -0.648034353 -0.33784912 #> 10   0.2849057156 -0.152774115 -0.30155192 #> 11  -0.7272324655 -0.918984695  1.51484310 #> 12  -0.5048216481 -0.255134068  0.26594711 #> 13   0.7220844178 -0.848887369  0.84813665 #> 14  -0.4629128021 -0.353215496 -1.73772160 #> 15   0.4581189437 -1.333436375 -0.11223163 #> 16  -0.1612423423 -0.567502297 -0.52564693 #> 17  -0.3831147620 -0.866858865  0.07107247 #> 18  -1.4324146155 -0.805316861  0.69583712 #> 19   2.1598291863 -0.734658238 -2.12067400 #> 20   0.7414332990 -0.055720798 -0.44659829 #> 21   1.7027552077 -0.828804380  1.16365125 #> 22  -0.2768808441 -1.448527347 -0.34418790 #> 23  -0.5971408184 -0.451246855  2.81696686 #> 24  -1.3307133416 -1.048439750  1.35177482 #> 25  -0.6257084146 -0.636405259 -0.74574092 #> 26   0.3958563903 -0.842546809  1.05060506 #> 27   0.7482083194 -0.789226074  2.09586065 #> 28  -2.6826756871 -1.061956970  0.07001966 #> 29  -2.4466638153 -0.466534095  0.90232769 #> 30   0.1150310111 -1.150354752 -0.59549193 #> 31   2.0715876276 -1.154112720 -0.01154834 #> 32  -0.9973483616 -0.329135201  0.17134517 #> 33  -0.7991550579 -1.606503520 -1.17503841 #> 34  -0.4565154115 -0.427815134 -0.23577554 #> 35   0.6097541968 -0.090105628  1.12474844 #> 36  -0.3377671548 -0.624018219 -1.94128380 #> 37  -0.3933288248 -1.052598353 -0.56348365 #> 38  -1.2790509883 -0.257693583 -0.27548747 #> 39  -0.8274300323 -0.958862912  0.80554582 #> 40   1.4027819973 -0.008635554  0.47106360 #> 41   0.2822113170 -1.099700451  0.72419423 #> 42   0.7390214346 -1.064820747 -0.05483303 #> 43  -0.7725700253 -0.549010449  0.86075826 #> 44   0.1977044068 -0.505258399 -0.89772447 #> 45  -0.1681122005 -0.881227292 -0.64754983 #> 46  -0.5226948297 -0.273800236  1.87535630 #> 47  -0.2153262063 -0.337785115 -0.21783185 #> 48  -0.4551347847 -0.431205096  0.82570116 #> 49   1.0121446687 -0.235702802 -2.16713233 #> 50   0.7213795110 -1.221944062  0.42394430 #> 51   1.2023072743 -0.590634026 -1.83412295 #> 52   0.6016990391 -0.975344630  3.16484811 #> 53   0.0687062481 -0.736444413 -0.65632144 #> 54   0.7804625333 -0.513406554 -0.94430963 #> 55   0.1210753424 -0.811701674 -1.60684904 #> 56  -1.3825311316 -1.119824866  0.38400137 #> 57  -0.9736121984 -0.668213206  0.74463427 #> 58   0.8136732781 -0.313922378 -0.56041921 #> 59  -0.3204286284 -1.186178352 -0.86948709 #> 60  -1.4447626430 -0.856992183 -0.71669118 #> 61  -0.3777597057 -0.320116572 -0.12122252 #> 62   0.2961113252 -0.978552909 -0.54688690 #> 63  -1.1282767089 -0.665297995  0.51448392 #> 64  -0.6709656892  0.025893659 -1.53385004 #> 65   0.9946237408 -1.121115797  0.77911140 #> 66   1.2947682402 -0.415690472  1.45826878 #> 67   1.5709801482 -0.559598551 -2.11453498 #> 68  -1.1648465954 -0.920517165  0.50156792 #> 69   0.9310756904 -0.642558527  0.40323712 #> 70   1.5754611505 -0.096358045 -1.02581103 #> 71  -0.6048014601 -0.952330364  0.26935382 #> 72  -0.6798219703 -0.631267408  0.73444558 #> 73  -0.0465357459 -0.548941622  0.59161425 #> 74  -0.3227936747 -1.139063104  0.22721919 #> 75  -0.9791328537 -0.563174553  1.06066105 #> 76  -2.4254665125 -1.591466273 -1.00358611 #> 77   0.7462236864 -0.637525948 -0.34820200 #> 78  -0.7819528836 -0.308052716  0.85558687 #> 79   0.8603516691 -0.511686346  2.21299477 #> 80   0.8198922967 -0.923429945  1.06324533 #> 81   0.0414974265 -0.339236317 -0.26264955 #> 82  -0.7441305343 -0.726185342 -0.73352957 #> 83  -1.4192382240 -0.742498303 -0.09990369 #> 84   0.6703804593 -0.839400886 -0.29477192 #> 85   1.4634651594 -0.607086497 -0.66550652 #> 86  -2.1991449070 -0.017175182  1.51279877 #> 87   1.2422185623 -1.047430860 -0.22430903 #> 88  -0.3564424355 -0.053592729 -1.05687427 #> 89   0.5273989037 -0.545298838 -1.69687950 #> 90  -0.5640147448 -0.713092139  1.03284693 #> 91  -1.9652068513  0.157719588  0.21848312 #> 92  -0.0844647605 -1.548516219 -0.62586517 #> 93  -1.1445743775 -0.399329028  2.20581415 #> 94  -0.3647812769 -0.634099945 -0.34023025 #> 95  -0.7333905262 -0.244225605 -0.17941927 #> 96   0.0004011817 -1.247099222 -0.34479792 #> 97   1.8078397557 -0.788827583  0.46925979 #> 98   0.5323025688  0.081027484  0.20871042 #> 99   0.1340172073 -0.167527862  0.12017831 #> 100 -1.8981095013 -0.283828771  2.23016676 # For posterior inference: # Get 100 samples of the group-level mean (the default) parameters(samples_LNR, N = 100) #>              m      m_lMd            s         t0 #> 1   -0.9146088 -0.3850223 -0.664040270 -1.8410717 #> 2   -0.9941253 -0.2444859  0.371749568 -1.5556010 #> 3   -0.9841995 -0.5355252 -0.550698347 -1.6809134 #> 4   -0.9676262 -0.6572037 -0.832480636 -1.7133224 #> 5   -0.9190563 -0.3642625 -0.724456609 -1.8387217 #> 6   -1.0461187 -0.7078570 -0.033257254 -1.3872088 #> 7   -0.9277310 -0.3831552 -0.459160361 -1.7399542 #> 8   -0.9513839 -0.4714232 -0.480700013 -1.6556521 #> 9   -0.8572746 -0.6240926 -0.435795797 -1.4837029 #> 10  -0.9861085 -0.5954253 -0.211951138 -1.7573114 #> 11  -0.9910828 -0.4916690 -0.678255229 -1.7340745 #> 12  -0.9695477 -0.6129801 -0.337418446 -1.5400205 #> 13  -1.0042034 -0.5831939 -0.514396623 -1.5816723 #> 14  -1.0194009 -0.6145868 -0.605175468 -1.5473513 #> 15  -1.0230041 -0.5705763 -0.431953409 -1.5743094 #> 16  -1.0079332 -0.4510322 -0.605110403 -1.6922836 #> 17  -1.0257342 -0.6975737 -0.365160658 -1.4434355 #> 18  -1.1044617 -0.6385537 -0.552249500 -1.4989429 #> 19  -0.9064463 -0.4231083 -0.484520997 -1.7482803 #> 20  -0.9192528 -0.4485982 -0.529878284 -1.7007512 #> 21  -1.0988782 -0.8576586 -0.262228404 -1.5317319 #> 22  -1.0466780 -0.6232451 -0.338501417 -1.4843499 #> 23  -0.9800735 -0.4551597 -0.782513432 -1.7881077 #> 24  -0.9853338 -0.6157689 -0.343240505 -1.5195546 #> 25  -0.9293706 -0.6932581 -0.496238630 -1.4980952 #> 26  -0.8737476 -0.3825559 -0.679738078 -1.7624119 #> 27  -0.9117045 -0.4987366 -0.560940770 -1.4435876 #> 28  -0.9734405 -0.6395901 -0.456444677 -1.4762271 #> 29  -0.8998395 -0.4531850 -0.615774368 -1.6593293 #> 30  -1.0259341 -0.5212213 -0.001625044 -1.0778357 #> 31  -0.8626011 -0.5121629 -0.677280467 -1.8586670 #> 32  -0.8277997 -0.5090940 -0.610916550 -1.5666532 #> 33  -1.0414085 -0.7443050 -0.263366157 -1.2634176 #> 34  -0.9642390 -0.7225266 -0.427247600 -1.4529501 #> 35  -0.9051584 -0.5229238 -0.600904180 -1.6510283 #> 36  -0.9116982 -0.4353258 -0.430103240 -1.4469101 #> 37  -0.9161523 -0.5163525 -0.799283442 -1.7260853 #> 38  -1.0783236 -0.5366131 -0.207138886 -1.8251725 #> 39  -0.9841432 -0.3662825 -0.626329639 -1.4574196 #> 40  -0.9896126 -0.8263568 -0.093874850 -1.5855461 #> 41  -0.9137349 -0.6119360 -0.452247371 -1.7007970 #> 42  -1.0558198 -0.1662891 -0.553654947 -1.6245024 #> 43  -1.0510783 -0.5140499 -0.726001050 -1.5891954 #> 44  -0.9866593 -0.3869422 -0.643268863 -1.5137897 #> 45  -1.0264733 -0.6369525  0.555814552 -1.2753606 #> 46  -1.0065390 -0.5352194 -0.453555418 -1.5240538 #> 47  -0.9300713 -0.4170714 -0.862412694 -1.9710515 #> 48  -0.8534653 -0.3924058 -0.770217238 -2.0287861 #> 49  -1.0059523 -0.4712395 -0.543727371 -1.7189973 #> 50  -0.8581448 -0.4307437 -0.670850520 -1.6182677 #> 51  -0.9886138 -0.6179968 -0.513010225 -1.3857140 #> 52  -1.0406302 -0.5720488 -0.496739142 -0.9967075 #> 53  -0.9181078 -0.4369147 -0.530992473 -1.6685095 #> 54  -0.9730604 -0.5105100 -0.362186636 -1.4173826 #> 55  -0.8274918 -0.4120862 -0.681308635 -1.6754446 #> 56  -0.7603805 -0.8284783 -0.463054469 -1.3243242 #> 57  -1.0348299 -0.5973703 -0.536815454 -1.1480310 #> 58  -0.9148597 -0.3934055 -0.577226414 -1.5949066 #> 59  -0.8545427 -0.3595833 -0.811737966 -1.9455422 #> 60  -0.8698081 -0.7230220 -0.146109178 -1.3224615 #> 61  -0.9636843 -0.5873008 -0.457137808 -1.4952626 #> 62  -0.8777581 -0.4529871 -0.534055300 -1.6207601 #> 63  -0.9712346 -0.4076718 -0.492285084 -1.4988493 #> 64  -0.9767004 -0.3401362 -0.277333433 -1.3126094 #> 65  -0.9878151 -0.3798807 -0.355185002 -1.6101835 #> 66  -0.9817911 -0.4852259 -0.751998999 -1.6466184 #> 67  -1.0061947 -0.4963381 -0.595785398 -1.4777439 #> 68  -0.9512705 -0.5650219 -0.794691262 -1.6544347 #> 69  -1.0049598 -0.5363540 -0.617304258 -1.6644720 #> 70  -1.0633382 -0.5828631 -0.500995125 -1.1943876 #> 71  -0.9017430 -0.4895326 -0.811333340 -1.9966467 #> 72  -0.8799141 -0.4178881 -1.568852686 -2.2192980 #> 73  -0.9673121 -0.3700478 -0.376908541 -1.4445447 #> 74  -1.0461377 -0.5829625 -0.340333300 -1.2703171 #> 75  -1.0408817 -0.4852213 -0.530418213 -1.8654642 #> 76  -0.9186060 -0.5537903  0.036959415 -1.4770908 #> 77  -0.9980693 -0.3007075 -0.545895116 -1.5933500 #> 78  -0.9961828 -0.4783328 -0.412937534 -1.5070930 #> 79  -0.9556526 -0.4549435 -0.582801146 -1.7199749 #> 80  -0.8677118 -0.3995471 -0.779926375 -1.8312638 #> 81  -0.9099270 -0.4411030 -0.693955341 -1.5802705 #> 82  -0.8998204 -0.3898504 -0.455149396 -1.4672622 #> 83  -1.1563352 -0.5130709 -0.587314154 -1.5169530 #> 84  -0.9230388 -0.5560582 -0.711911777 -1.7103141 #> 85  -0.9980692 -0.6549247 -0.168682184 -1.4299187 #> 86  -0.8648503 -0.3675329 -0.624764059 -1.8065595 #> 87  -0.9424133 -0.6586667 -0.601234693 -1.7758015 #> 88  -1.0116358 -0.5023588 -0.625991643 -1.6793134 #> 89  -0.8850977 -0.4429208 -0.746453325 -1.8399898 #> 90  -0.9027347 -0.4281748 -0.872623651 -2.0240879 #> 91  -0.9652579 -0.6039398 -0.427186128 -1.5520007 #> 92  -0.9869371 -0.3912582 -0.356381741 -1.4254665 #> 93  -1.0288597 -0.5574943 -0.609391935 -1.6057949 #> 94  -0.8987013 -0.3435826 -1.244930436 -1.7604910 #> 95  -0.9695426 -0.3554067 -0.599545906 -1.6260407 #> 96  -0.9049838 -0.4807892 -1.030472041 -1.6646987 #> 97  -1.1078543 -0.5819023 -0.359072915 -1.3696871 #> 98  -0.9985581 -0.6150816 -0.582057222 -1.4671384 #> 99  -0.9744157 -0.5304345 -0.863804777 -1.7048890 #> 100 -0.9938976 -0.5874044 -0.520040537 -1.5924651 # or from the individual-level parameters and mapped parameters(samples_LNR, selection = \"alpha\", map = TRUE) #>     subjects   m_lMTRUE  m_lMFALSE         s         t0 #> 1       as1t -1.0812710 -0.7277887 0.3994819 0.14587311 #> 2       as1t -1.1927848 -0.8287467 0.4695067 0.18175759 #> 3       as1t -0.9976145 -0.7202211 0.3856415 0.12097891 #> 4       as1t -1.0978570 -0.7911282 0.4084400 0.15740867 #> 5       as1t -1.0131582 -0.7179012 0.3848449 0.13311799 #> 6       as1t -1.0505207 -0.7281037 0.3976677 0.14393812 #> 7       as1t -1.0158792 -0.7246570 0.3890709 0.13245220 #> 8       as1t -1.0575972 -0.7357514 0.4034771 0.14869928 #> 9       as1t -1.1714480 -0.7140168 0.4779474 0.17943920 #> 10      as1t -1.0944301 -0.7488639 0.4153250 0.15314360 #> 11      as1t -0.9818833 -0.6843178 0.3835597 0.11710325 #> 12      as1t -1.0627788 -0.7507021 0.4209924 0.14758228 #> 13      as1t -1.1601617 -0.7982509 0.4426350 0.17385402 #> 14      as1t -1.0066017 -0.6964161 0.3939327 0.12747945 #> 15      as1t -1.0550187 -0.7206447 0.3983786 0.14257473 #> 16      as1t -0.9356744 -0.6200347 0.3426346 0.08650444 #> 17      as1t -0.9706621 -0.6890028 0.3592614 0.11426169 #> 18      as1t -0.9396259 -0.6568684 0.3361176 0.10233290 #> 19      as1t -1.1644111 -0.8193501 0.4613872 0.18106128 #> 20      as1t -1.1235896 -0.8053578 0.4176246 0.16262940 #> 21      as1t -1.0429946 -0.7466685 0.3841315 0.13975929 #> 22      as1t -1.0140372 -0.6702062 0.4010762 0.12639932 #> 23      as1t -1.0083520 -0.6912084 0.3959483 0.13180238 #> 24      as1t -1.0508207 -0.7750991 0.4117809 0.14681329 #> 25      as1t -0.9685613 -0.6737312 0.3778300 0.11450191 #> 26      as1t -1.0816797 -0.8043654 0.3981443 0.15466963 #> 27      as1t -0.9557355 -0.6432555 0.3595859 0.10444925 #> 28      as1t -1.0860453 -0.7282699 0.4082023 0.14714103 #> 29      as1t -1.0453288 -0.7184219 0.3966287 0.14244458 #> 30      as1t -1.0850409 -0.7838004 0.4111004 0.15236180 #> 31      as1t -1.0782371 -0.7432715 0.4177492 0.14934405 #> 32      as1t -1.1481693 -0.7978975 0.4465416 0.17403224 #> 33      as1t -1.0536801 -0.7118105 0.3888430 0.13737296 #> 34      as1t -0.9973113 -0.6827778 0.3714453 0.12894100 #> 35      as1t -1.0204699 -0.7236076 0.3871919 0.12995738 #> 36      as1t -1.0533768 -0.7282748 0.3986877 0.13789124 #> 37      as1t -1.0671334 -0.7040465 0.3944528 0.14234769 #> 38      as1t -1.0917418 -0.7685141 0.4057850 0.15267277 #> 39      as1t -1.0165614 -0.6921395 0.3667630 0.12093129 #> 40      as1t -0.9180315 -0.6247794 0.3436162 0.09376994 #> 41      as1t -1.1444651 -0.7873265 0.4484405 0.17473209 #> 42      as1t -1.1179900 -0.7584687 0.4154498 0.15999723 #> 43      as1t -1.0324668 -0.7211060 0.3760694 0.13375470 #> 44      as1t -1.0503993 -0.6921217 0.3978372 0.13801015 #> 45      as1t -1.0162114 -0.6892200 0.4012955 0.13176902 #> 46      as1t -0.9374605 -0.6582357 0.3469012 0.09959523 #> 47      as1t -1.0732859 -0.7654202 0.4153920 0.15647599 #> 48      as1t -0.9690308 -0.7301443 0.3445304 0.10726287 #> 49      as1t -1.0628829 -0.7235195 0.4125247 0.14573471 #> 50      as1t -1.0444543 -0.7647819 0.3772501 0.13547468 #> 51      as1t -1.0208620 -0.7287484 0.3745667 0.12611457 #> 52      as1t -1.0500208 -0.7123625 0.4007812 0.13837912 #> 53      as1t -1.0861170 -0.7106083 0.4130547 0.14735731 #> 54      as1t -1.0498222 -0.7086953 0.3675154 0.13035664 #> 55      as1t -1.0851692 -0.7227198 0.3968962 0.14317122 #> 56      as1t -0.8949335 -0.6115256 0.3247409 0.07692765 #> 57      as1t -1.1592364 -0.7834605 0.4622757 0.17700043 #> 58      as1t -1.1658688 -0.7946043 0.4507693 0.17798725 #> 59      as1t -1.0284283 -0.6991404 0.3727660 0.12824823 #> 60      as1t -0.9420525 -0.6328271 0.3498989 0.10194889 #> 61      as1t -1.0607266 -0.7232650 0.3926420 0.13640477 #> 62      as1t -1.0421362 -0.7486740 0.4004270 0.14028148 #> 63      as1t -1.2187227 -0.7856960 0.4676040 0.18559627 #> 64      as1t -1.1069825 -0.7402199 0.4109709 0.15306672 #> 65      as1t -1.0329794 -0.7005542 0.4035069 0.13413558 #> 66      as1t -1.1480770 -0.7760505 0.4409898 0.17543798 #> 67      as1t -1.1560718 -0.8202254 0.4292083 0.17320960 #> 68      as1t -1.1731374 -0.8282618 0.4658326 0.17942241 #> 69      as1t -0.9769407 -0.6736908 0.3628789 0.10916996 #> 70      as1t -1.0359703 -0.7408705 0.3788462 0.13509319 #> 71      as1t -0.9386223 -0.6346069 0.3661566 0.10788376 #> 72      as1t -1.0020604 -0.7080344 0.3510957 0.11769333 #> 73      as1t -1.0930019 -0.7860969 0.4026536 0.15570998 #> 74      as1t -1.0163103 -0.7158047 0.3970278 0.13288601 #> 75      as1t -0.9968537 -0.6849150 0.3717647 0.12145594 #> 76      as1t -1.0207142 -0.7092770 0.3896155 0.13340852 #> 77      as1t -0.9542438 -0.7006770 0.3492797 0.10954666 #> 78      as1t -1.1297477 -0.7223443 0.4626894 0.16897945 #> 79      as1t -1.0724400 -0.7624341 0.4015088 0.14685965 #> 80      as1t -1.0113343 -0.6567222 0.3830724 0.12754083 #> 81      as1t -1.0331425 -0.7453712 0.3760792 0.13308455 #> 82      as1t -0.9710671 -0.6803620 0.3669163 0.11668716 #> 83      as1t -1.0718857 -0.7264634 0.4007969 0.14660430 #> 84      as1t -1.0528358 -0.6988100 0.4008862 0.13232296 #> 85      as1t -0.9501292 -0.6559179 0.3475990 0.10776290 #> 86      as1t -1.0863682 -0.7495679 0.3863830 0.14093833 #> 87      as1t -0.9351924 -0.6208877 0.3447824 0.10073039 #> 88      as1t -1.1745143 -0.7787650 0.4556282 0.17575478 #> 89      as1t -0.9819871 -0.6727870 0.3740123 0.11024015 #> 90      as1t -1.1549062 -0.7996615 0.4067229 0.16504777 #> 91      as1t -1.0281752 -0.6960212 0.3785786 0.13424936 #> 92      as1t -1.1337259 -0.8114865 0.4494761 0.16743546 #> 93      as1t -1.1337259 -0.8114865 0.4494761 0.16743546 #> 94      as1t -1.1678195 -0.7953612 0.4371556 0.16763370 #> 95      as1t -1.1572961 -0.8084883 0.4289485 0.17208949 #> 96      as1t -1.1883865 -0.7939351 0.4547475 0.17355990 #> 97      as1t -1.1372676 -0.8191813 0.4405777 0.17691940 #> 98      as1t -1.1753062 -0.7848172 0.4412000 0.17414633 #> 99      as1t -1.1922522 -0.7827473 0.4562374 0.17577460 #> 100     as1t -1.1077914 -0.7514521 0.4471635 0.15985947 #> 101     as1t -0.9935922 -0.6703935 0.3635143 0.11671386 #> 102     as1t -1.0828127 -0.7322248 0.4049918 0.14700268 #> 103     as1t -1.1000054 -0.7467652 0.4096444 0.14611890 #> 104     as1t -0.9960951 -0.7356487 0.3696039 0.12368104 #> 105     as1t -1.0323188 -0.6983393 0.3916277 0.12821545 #> 106     as1t -1.0798551 -0.7145960 0.3902051 0.14418389 #> 107     as1t -1.1601794 -0.8116817 0.4301767 0.17309218 #> 108     as1t -0.9850241 -0.7175758 0.3661881 0.12040850 #> 109     as1t -1.1101408 -0.7679338 0.4411550 0.15450213 #> 110     as1t -0.9479930 -0.6945563 0.3661834 0.10956569 #> 111     as1t -0.9934473 -0.6827318 0.3640672 0.11466511 #> 112     as1t -0.9483408 -0.6628064 0.3735361 0.10521025 #> 113     as1t -1.1072280 -0.7596641 0.4200675 0.16208188 #> 114     as1t -1.1300659 -0.7890900 0.4242124 0.15643705 #> 115     as1t -0.9881760 -0.6885431 0.3602998 0.12165847 #> 116     as1t -1.0567540 -0.7339784 0.3813022 0.13540515 #> 117     as1t -0.9670183 -0.6873840 0.3678462 0.11464068 #> 118     as1t -0.9988525 -0.6956590 0.3710419 0.12384036 #> 119     as1t -1.1215135 -0.7954880 0.4272628 0.15999523 #> 120     as1t -1.0464739 -0.7470904 0.4145611 0.14428545 #> 121     as1t -1.0231805 -0.6901702 0.3698878 0.12646087 #> 122     as1t -1.2303328 -0.8337390 0.4799129 0.19203996 #> 123     as1t -1.0323814 -0.6947140 0.3874125 0.13656153 #> 124     as1t -1.0952481 -0.7425671 0.4050687 0.14583631 #> 125     as1t -1.0864901 -0.8006652 0.4077471 0.15404738 #> 126     as1t -0.9063947 -0.6446063 0.3515569 0.09396048 #> 127     as1t -0.9330937 -0.6693489 0.3578522 0.10615114 #> 128     as1t -0.8718164 -0.5815281 0.3247371 0.07729316 #> 129     as1t -1.0532008 -0.7315988 0.4023418 0.14468188 #> 130     as1t -1.1215224 -0.7973755 0.4312994 0.16894391 #> 131     as1t -1.0239165 -0.6963886 0.3932775 0.12979807 #> 132     as1t -1.0152930 -0.7086967 0.3819640 0.12743300 #> 133     as1t -0.9957312 -0.6723801 0.3854970 0.12301466 #> 134     as1t -0.9856176 -0.6655143 0.3544599 0.11273507 #> 135     as1t -1.0558522 -0.7473564 0.3789434 0.13504399 #> 136     as1t -1.0623647 -0.7299662 0.3914896 0.14296763 #> 137     as1t -1.0277614 -0.6744785 0.3720031 0.12897746 #> 138     as1t -1.0203903 -0.7325920 0.3794600 0.13104978 #> 139     as1t -1.0741290 -0.7518204 0.3953798 0.13814659 #> 140     as1t -0.9584139 -0.7072029 0.3446776 0.10192151 #> 141     as1t -0.9810713 -0.6906118 0.3623128 0.11504129 #> 142     as1t -1.0629195 -0.7204998 0.4098348 0.14106851 #> 143     as1t -1.1057832 -0.7904642 0.4017326 0.15350338 #> 144     as1t -1.0946099 -0.7826974 0.4318957 0.16236756 #> 145     as1t -1.0278411 -0.7304833 0.3921882 0.13248452 #> 146     as1t -1.1586397 -0.7821041 0.4358731 0.16994692 #> 147     as1t -1.0460045 -0.7315587 0.4118222 0.13724928 #> 148     as1t -1.1149438 -0.7683923 0.4526474 0.17037940 #> 149     as1t -1.1296334 -0.7839532 0.4547433 0.16893229 #> 150     as1t -1.0158417 -0.7213339 0.3859374 0.12545104 #> 151     bd6t -1.2787707 -0.6888034 0.5922870 0.20525100 #> 152     bd6t -1.3332639 -0.6489162 0.6708464 0.22460003 #> 153     bd6t -1.3450362 -0.6738379 0.6507270 0.22204939 #> 154     bd6t -1.3294378 -0.7029984 0.6092945 0.21513859 #> 155     bd6t -1.4150410 -0.6739876 0.6386051 0.22637219 #> 156     bd6t -1.3368203 -0.7052648 0.6255463 0.22118470 #> 157     bd6t -1.2362299 -0.6550899 0.5933846 0.20160141 #> 158     bd6t -1.3066813 -0.6581912 0.6435090 0.22201210 #> 159     bd6t -1.2043834 -0.6807109 0.5427426 0.18147099 #> 160     bd6t -1.2974578 -0.6565538 0.6008721 0.20814503 #> 161     bd6t -1.3943704 -0.7345107 0.6354063 0.22434849 #> 162     bd6t -1.2654977 -0.6568431 0.5487216 0.19181556 #> 163     bd6t -1.2552318 -0.6587647 0.6079179 0.21270414 #> 164     bd6t -1.3103407 -0.6532264 0.6470255 0.21777298 #> 165     bd6t -1.2907618 -0.7093575 0.5861076 0.20322729 #> 166     bd6t -1.3342311 -0.7369939 0.6408531 0.22915748 #> 167     bd6t -1.3341482 -0.7047991 0.6008951 0.21333186 #> 168     bd6t -1.3536018 -0.6690501 0.6815088 0.22399306 #> 169     bd6t -1.2716782 -0.7212715 0.5872606 0.20277462 #> 170     bd6t -1.3441046 -0.6830915 0.6156575 0.21466182 #> 171     bd6t -1.2682563 -0.6725788 0.6378940 0.21165535 #> 172     bd6t -1.2915300 -0.6091518 0.6433718 0.21083692 #> 173     bd6t -1.2775918 -0.7267691 0.6003284 0.21053920 #> 174     bd6t -1.2714974 -0.6309265 0.6089958 0.20271635 #> 175     bd6t -1.3592425 -0.6692291 0.6246146 0.21625071 #> 176     bd6t -1.2663177 -0.6336787 0.5977787 0.20041854 #> 177     bd6t -1.3039529 -0.6679095 0.6674803 0.22164678 #> 178     bd6t -1.3001698 -0.6982881 0.5675402 0.20508593 #> 179     bd6t -1.2861197 -0.6350910 0.5810211 0.20641565 #> 180     bd6t -1.2811095 -0.7434912 0.6167167 0.21137466 #> 181     bd6t -1.2476165 -0.6378831 0.5913761 0.20531316 #> 182     bd6t -1.3841622 -0.6392072 0.6218352 0.21886127 #> 183     bd6t -1.1768401 -0.6636981 0.5379758 0.18138348 #> 184     bd6t -1.2924681 -0.7051875 0.5930504 0.19873271 #> 185     bd6t -1.3439873 -0.6921052 0.6494111 0.21878487 #> 186     bd6t -1.3027483 -0.6856826 0.6221828 0.21273948 #> 187     bd6t -1.2663810 -0.7031601 0.6160648 0.21454157 #> 188     bd6t -1.3416791 -0.6456038 0.6783019 0.22457594 #> 189     bd6t -1.2358846 -0.7083081 0.5815813 0.19965355 #> 190     bd6t -1.2930115 -0.6945231 0.6317825 0.21284016 #> 191     bd6t -1.3348146 -0.6572744 0.6486147 0.21923917 #> 192     bd6t -1.2764132 -0.6755755 0.6476800 0.21621000 #> 193     bd6t -1.2015365 -0.6186125 0.5392264 0.18126747 #> 194     bd6t -1.3095492 -0.6554551 0.6362480 0.21213353 #> 195     bd6t -1.2402131 -0.6732548 0.6329675 0.21219777 #> 196     bd6t -1.2381729 -0.6384377 0.5841601 0.19890426 #> 197     bd6t -1.3555587 -0.6127782 0.6160116 0.20932832 #> 198     bd6t -1.3275125 -0.7142134 0.6666365 0.22083474 #> 199     bd6t -1.2633399 -0.6683181 0.6059331 0.20790260 #> 200     bd6t -1.3672325 -0.6439884 0.6786843 0.22844612 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 250 rows ]"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.design.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for emc.design objects — plot.emc.design","title":"Plot method for emc.design objects — plot.emc.design","text":"Makes design illustration plotting simulated data based design","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for emc.design objects — plot.emc.design","text":"","code":"# S3 method for class 'emc.design' plot(   x,   p_vector,   data = NULL,   factors = NULL,   plot_factor = NULL,   n_data_sim = 10,   functions = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for emc.design objects — plot.emc.design","text":"x object class emc.design containing design plot p_vector named vector parameter values use data generation data Optional data frame overlay design plot. NULL, data simulated. factors Character vector. Factors use varying parameters plot plot_factor Optional character. Make separate plots level factor n_data_sim Integer. data NULL, number simulated datasets generate plot. Default 10. functions Optional named list functions create additional columns data ... Additional arguments passed make_design_plot","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for emc.design objects — plot.emc.design","text":"return value, called side effect plotting","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Function for emc Objects — plot.emc","title":"Plot Function for emc Objects — plot.emc","text":"Makes trace plots model parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Function for emc Objects — plot.emc","text":"","code":"# S3 method for class 'emc' plot(   x,   stage = \"sample\",   selection = c(\"mu\", \"sigma2\", \"alpha\"),   layout = NA,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Function for emc Objects — plot.emc","text":"x object class emc stage character string indicating sampling stage summarized. Can preburn, burn, adapt, sample. selection character vector indicating parameter group(s). Defaults mu, sigma2, alpha. layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. ... Optional arguments can passed get_pars plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Function for emc Objects — plot.emc","text":"trace/acf plot selected MCMC chains","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Function for emc Objects — plot.emc","text":"emc object run fit yet supplied prior plots returned.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Function for emc Objects — plot.emc","text":"","code":"plot(samples_LNR)       # Or trace autocorrelation for the second subject: plot(samples_LNR, subject = 2, selection = \"alpha\")   # Can also plot the trace of for example the group-level correlation: plot(samples_LNR, selection = \"correlation\", col = c(\"green\", \"purple\", \"orange\"), lwd = 2)"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a prior — plot.emc.prior","title":"Plot a prior — plot.emc.prior","text":"Takes prior object plots selected implied prior","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a prior — plot.emc.prior","text":"","code":"# S3 method for class 'emc.prior' plot(   x,   selection = \"mu\",   do_plot = TRUE,   covariates = NULL,   layout = NA,   N = 50000,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a prior — plot.emc.prior","text":"x emc_prior element selection Character string. Indicates parameter type use (e.g., alpha, mu, sigma2, correlation). do_plot Boolean. FALSE return prior samples omit plotting. covariates dataframe/functions specified design layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. N Integer. many prior samples draw ... Optional arguments can passed get_pars, histogram, plot.default (see par()), arguments required types models e.g. n_factors type = \"factor\"","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a prior — plot.emc.prior","text":"invisible mcmc.list object prior samples selected type","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a prior — plot.emc.prior","text":"","code":"# \\donttest{ # First define a design for the model design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then set up a prior using make_prior p_vector=c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),           t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) psd <- c(v_Sleft=1,v_Sright=1,a=.3,a_Eneutral=.3,a_Eaccuracy=.3,           t0=.4,Z=1,sv=.4,SZ=1) # Here we left the variance prior at default prior_DDMaE <- prior(design_DDMaE,mu_mean=p_vector,mu_sd=psd) # Now we can plot all sorts of (implied) priors plot(prior_DDMaE, selection = \"mu\", N = 1e3)  plot(prior_DDMaE, selection = \"mu\", mapped = FALSE, N=1e3)  # We can also plot the implied prior on the participant level effects. plot(prior_DDMaE, selection = \"alpha\", col = \"green\", N = 1e3)  # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_cdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Defective Cumulative Distribution Functions — plot_cdf","title":"Plot Defective Cumulative Distribution Functions — plot_cdf","text":"Plots panels cumulative distribution functions (CDFs) level specified defective factor data. CDFs defective; factor level's CDF scales level's proportion. Summed across levels, maximum 1. Optionally, posterior /prior predictive CDFs can overlaid.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_cdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Defective Cumulative Distribution Functions — plot_cdf","text":"","code":"plot_cdf(   input,   post_predict = NULL,   prior_predict = NULL,   subject = NULL,   quants = c(0.025, 0.975),   functions = NULL,   factors = NULL,   defective_factor = \"R\",   n_cores = 1,   n_post = 50,   layout = NA,   to_plot = c(\"data\", \"posterior\", \"prior\")[1:2],   use_lim = c(\"data\", \"posterior\", \"prior\")[1:2],   legendpos = c(\"top\", \"topright\"),   posterior_args = list(),   prior_args = list(),   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_cdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Defective Cumulative Distribution Functions — plot_cdf","text":"input Either emc object data frame, list objects. post_predict Optional posterior predictive data (matching columns) list thereof. prior_predict Optional prior predictive data (matching columns) list thereof. subject Subset data single subject (index name). quants Numeric vector credible interval bounds (e.g. c(0.025, 0.975)). functions function (list functions) create new columns datasets predictives factors Character vector factor names aggregate ; defaults plotting full data set ungrouped factors NULL. defective_factor Name factor used defective CDF (default \"R\"). n_cores Number CPU cores use generating predictives emc object. n_post Number posterior draws simulate needed predictives. layout Numeric vector used par(mfrow=...); use NA auto-layout. to_plot Character vector: \"data\", \"posterior\", \"prior\". use_lim Character vector controlling source(s) define xlim. legendpos Character vector controlling positions legends posterior_args Optional list graphical parameters posterior lines/ribbons. prior_args Optional list graphical parameters prior lines/ribbons. ... graphical parameters real data lines.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_cdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Defective Cumulative Distribution Functions — plot_cdf","text":"Returns NULL invisibly.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_cdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Defective Cumulative Distribution Functions — plot_cdf","text":"","code":"# Plot defective CDF for data only # plot_cdf(forstmann, to_plot = \"data\") # # Plot with posterior predictions # plot_cdf(samples_LNR, to_plot = c(\"data\",\"posterior\"), n_post=10) # # Or a list of multiple emc objects ..."},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Defective Densities — plot_density","title":"Plot Defective Densities — plot_density","text":"Plots panels contain set densities level specified defective factor data. densities defective; areas relative respective proportions defective factor levels. Across levels, area sums 1. Optionally, posterior/prior predictive densities can overlaid.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Defective Densities — plot_density","text":"","code":"plot_density(   input,   post_predict = NULL,   prior_predict = NULL,   subject = NULL,   quants = c(0.025, 0.975),   functions = NULL,   factors = NULL,   defective_factor = \"R\",   n_cores = 1,   n_post = 50,   layout = NA,   to_plot = c(\"data\", \"posterior\", \"prior\")[1:2],   use_lim = c(\"data\", \"posterior\", \"prior\")[1:2],   legendpos = c(\"topright\", \"top\"),   posterior_args = list(),   prior_args = list(),   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Defective Densities — plot_density","text":"input Either emc object data frame, list objects. post_predict Optional posterior predictive data (matching columns) list thereof. prior_predict Optional prior predictive data (matching columns) list thereof. subject Subset data single subject (index name). quants Numeric vector credible interval bounds (e.g. c(0.025, 0.975)). functions function (list functions) create new columns datasets predictives factors Character vector factor names aggregate ; defaults plotting full data set ungrouped factors NULL. defective_factor Name factor used defective CDF (default \"R\"). n_cores Number CPU cores use generating predictives emc object. n_post Number posterior draws simulate needed predictives. layout Numeric vector used par(mfrow=...); use NA auto-layout. to_plot Character vector: \"data\", \"posterior\", \"prior\". use_lim Character vector controlling source(s) define xlim. legendpos Character vector controlling positions legends posterior_args Optional list graphical parameters posterior lines/ribbons. prior_args Optional list graphical parameters prior lines/ribbons. ... graphical parameters real data lines.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Defective Densities — plot_density","text":"","code":"# Plot defective densities for each subject and the factor combination in the design: plot_density(forstmann)  # or for one subject: plot_density(forstmann, subject = 1)  # Now collapsing across subjects and using a different defective factor: plot_density(forstmann, factors = \"S\", defective_factor = \"E\")  # Or plot posterior predictives plot_density(samples_LNR, n_post = 10)"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Design — plot_design.emc.design","title":"Plot Design — plot_design.emc.design","text":"Makes design illustration plotting simulated data based design","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Design — plot_design.emc.design","text":"","code":"# S3 method for class 'emc.design' plot_design(   x,   data = NULL,   factors = NULL,   plot_factor = NULL,   n_data_sim = 10,   p_vector = NULL,   functions = NULL,   ... )  # S3 method for class 'emc.prior' plot_design(   x,   data = NULL,   factors = NULL,   plot_factor = NULL,   n_data_sim = 10,   p_vector = NULL,   functions = NULL,   ... )  plot_design(   x,   data = NULL,   factors = NULL,   plot_factor = NULL,   n_data_sim = 10,   p_vector = NULL,   functions = NULL,   ... )  # S3 method for class 'emc' plot_design(   x,   data = NULL,   factors = NULL,   plot_factor = NULL,   n_data_sim = 10,   p_vector = NULL,   functions = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Design — plot_design.emc.design","text":"x emc emc.prior object containing design plot data Optional data overlay design plot factors Factors use varying parameters plot_factor Optional. Make separate plots level factor n_data_sim data provided, number simulated datasets generate plot. Default 10. p_vector needed x emc.design object, parameters use data generation. functions named list functions create additional columns data. ... Additional arguments pass make_design_plot","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Design — plot_design.emc.design","text":"return value. Just plots design","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots Density for Parameters — plot_pars","title":"Plots Density for Parameters — plot_pars","text":"Plots posterior prior density selected parameters model. Full range samples manipulations described get_pars.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots Density for Parameters — plot_pars","text":"","code":"plot_pars(   emc,   layout = NA,   selection = \"mu\",   show_chains = FALSE,   plot_prior = TRUE,   N = 10000,   use_prior_lim = !all_subjects,   lpos = \"topright\",   true_pars = NULL,   all_subjects = FALSE,   prior_args = list(),   true_args = list(),   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots Density for Parameters — plot_pars","text":"emc emc object layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. selection Character string. Indicates parameter type use (e.g., alpha, mu, sigma2, correlation). show_chains Boolean (defaults FALSE) plots separate density chain. plot_prior Boolean. TRUE overlay prior density plot (default red) N Integer. many prior samples draw use_prior_lim Boolean. TRUE use xlimits based prior density, otherwise based posterior density. lpos Character. plot contraction statistic. true_pars vector emc object. Can used visualize recovery. vector plot vertical line parameter appropriate place. emc object plot densities object well, assumed data-generating posteriors. all_subjects Boolean. plot densities (selected) subjects overlaid group-level distribution prior_args list. Optional additional arguments passed plot.default plotting prior density (see par()) true_args list. Optional additional arguments passed plot.default plotting true parameters (see par()) ... Optional arguments can passed get_pars, density, plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots Density for Parameters — plot_pars","text":"invisible return contraction statistics selected parameter type","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots Density for Parameters — plot_pars","text":"","code":"# Full range of possibilities described in get_pars plot_pars(samples_LNR)  # Or plot all subjects plot_pars(samples_LNR, all_subjects = TRUE, col = 'purple')  # Or plot recovery true_emc <- samples_LNR # This would normally be the data-generating samples plot_pars(samples_LNR, true_pars = true_emc, true_args = list(col = 'blue'), adjust = 2)"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Group-Level Relations — plot_relations","title":"Plot Group-Level Relations — plot_relations","text":"adjusted version corrplot package function corrplot() tailored EMC2 plotting estimated correlations.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Group-Level Relations — plot_relations","text":"","code":"plot_relations(   emc = NULL,   stage = \"sample\",   plot_cred = TRUE,   plot_means = TRUE,   only_cred = FALSE,   nice_names = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_relations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Group-Level Relations — plot_relations","text":"emc EMC2 object, commonly output run_emc(). stage Character. stage take samples, defaults sampling stage sample. plot_cred Boolean. Whether plot 95 percent credible intervals plot_means Boolean. Whether plot means only_cred Boolean. Whether plot credible values nice_names Character string. Alternative names give parameters ... Optional additional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_relations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Group-Level Relations — plot_relations","text":"return value, creates plot group-level relations","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_relations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Group-Level Relations — plot_relations","text":"","code":"# For a given set of hierarchical model samples we can make a # correlation matrix plot. plot_relations(samples_LNR, only_cred = TRUE, plot_cred = TRUE) # We can also only plot the correlations where the credible interval does not include zero plot_relations(samples_LNR, plot_means = TRUE, only_cred = TRUE)"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_sbc_ecdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the ECDF Difference in SBC Ranks — plot_sbc_ecdf","title":"Plot the ECDF Difference in SBC Ranks — plot_sbc_ecdf","text":"Plots difference observed cumulative rank statistics expected cumulative distribution uniform distribution. blue shaded areas indicate 95% credible interval.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_sbc_ecdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the ECDF Difference in SBC Ranks — plot_sbc_ecdf","text":"","code":"plot_sbc_ecdf(ranks, layout = NA)"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_sbc_ecdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the ECDF Difference in SBC Ranks — plot_sbc_ecdf","text":"ranks list named dataframes rank statistic layout Optional. numeric vector specifying layout using par(mfrow = layout)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_sbc_ecdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the ECDF Difference in SBC Ranks — plot_sbc_ecdf","text":"returns","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_sbc_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the Histogram of the Observed Rank Statistics of SBC — plot_sbc_hist","title":"Plot the Histogram of the Observed Rank Statistics of SBC — plot_sbc_hist","text":"Note plot dependent number bins, general visualization use plot_sbc_ecdf","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_sbc_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the Histogram of the Observed Rank Statistics of SBC — plot_sbc_hist","text":"","code":"plot_sbc_hist(ranks, bins = 10, layout = NA)"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_sbc_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the Histogram of the Observed Rank Statistics of SBC — plot_sbc_hist","text":"ranks list named dataframes rank statistic bins integer specifying number bins use plotting histogram layout Optional. numeric vector specifying layout using par(mfrow = layout)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_sbc_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the Histogram of the Observed Rank Statistics of SBC — plot_sbc_hist","text":"returns","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Statistics on Data — plot_stat","title":"Plot Statistics on Data — plot_stat","text":"Plots panels contain set densities level specified factor densities represent predicted data across posterior, vertical lines represent real data.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Statistics on Data — plot_stat","text":"","code":"plot_stat(   input,   post_predict = NULL,   prior_predict = NULL,   stat_fun,   stat_name = NULL,   subject = NULL,   factors = NULL,   n_cores = 1,   n_post = 50,   quants = c(0.025, 0.5, 0.975),   functions = NULL,   layout = NA,   to_plot = c(\"data\", \"posterior\", \"prior\")[1:2],   use_lim = c(\"data\", \"posterior\", \"prior\")[1:2],   legendpos = c(\"topleft\", \"top\"),   posterior_args = list(),   prior_args = list(),   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Statistics on Data — plot_stat","text":"input Either emc object data frame, list objects. post_predict Optional posterior predictive data (matching columns) list thereof. prior_predict Optional prior predictive data (matching columns) list thereof. stat_fun function can applied data returns single value vector values. stat_name name calculated quantity subject Subset data single subject (index name). factors Character vector factor names aggregate ; defaults plotting full data set ungrouped factors NULL. n_cores Number CPU cores use generating predictives emc object. n_post Number posterior draws simulate needed predictives. quants Numeric vector credible interval bounds (e.g. c(0.025, 0.975)). functions function (list functions) create new columns datasets predictives layout Numeric vector used par(mfrow=...); use NA auto-layout. to_plot Character vector: \"data\", \"posterior\", \"prior\". use_lim Character vector controlling source(s) define xlim. legendpos Character vector controlling positions legends posterior_args Optional list graphical parameters posterior lines/ribbons. prior_args Optional list graphical parameters prior lines/ribbons. ... graphical parameters real data lines.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Statistics on Data — plot_stat","text":"invisible data frame stat applied real data, posterior predictives /prior predictives","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Statistics on Data — plot_stat","text":"","code":"# For example plot the observed and predicted response accuracy # Can also apply more sophisticated statistics drt <- function(data) diff(tapply(data$rt,data[,c(\"E\")],mean)) plot_stat(samples_LNR, stat_fun = drt, n_post = 10, stat_name = \"RT diff Speed - A/N\")"},{"path":"https://ampl-psych.github.io/EMC2/reference/predict.emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Posterior/Prior Predictives — predict.emc.prior","title":"Generate Posterior/Prior Predictives — predict.emc.prior","text":"Simulate n_post data sets using posterior/prior parameter estimates","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/predict.emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Posterior/Prior Predictives — predict.emc.prior","text":"","code":"# S3 method for class 'emc.prior' predict(object, data = NULL, n_post = 50, n_cores = 1, n_trials = NULL, ...)  # S3 method for class 'emc' predict(   object,   hyper = FALSE,   n_post = 50,   n_cores = 1,   stat = c(\"random\", \"mean\", \"median\")[1],   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/predict.emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Posterior/Prior Predictives — predict.emc.prior","text":"object emc emc.prior object generate predictives data data frame needed exactly match original design n_post Integer. Number generated datasets n_cores Integer. Number cores across parallellized n_trials integer. data provided (although preferred), can generate data based n_trials per cell design ... Optional additional arguments passed get_pars make_data hyper Boolean. Defaults FALSE. TRUE, simulates group-level (hyper) parameters instead subject-level parameters. stat Character. Can mean, median random (.e., default). take either random samples chain(s) use mean median parameter estimates.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/predict.emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Posterior/Prior Predictives — predict.emc.prior","text":"list simulated data sets length n_post","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/predict.emc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Posterior/Prior Predictives — predict.emc.prior","text":"","code":"# \\donttest{ # based on an emc object ran by fit() we can generate posterior predictives predict(samples_LNR, n_cores = 1, n_post = 10) #>     postn subjects        E     S     R        rt trials #> 1       1     as1t accuracy right right 0.4467349      1 #> 3       1     as1t    speed right right 0.3924724      2 #> 5       1     as1t    speed  left right 0.4627158      3 #> 7       1     as1t accuracy right right 0.4157872      4 #> 9       1     as1t accuracy  left  left 0.7261787      5 #> 11      1     as1t accuracy  left  left 0.3226543      6 #> 13      1     as1t  neutral  left  left 0.3248951      7 #> 15      1     as1t  neutral right right 0.3710702      8 #> 17      1     as1t  neutral  left right 0.5078810      9 #> 19      1     as1t accuracy right right 0.5985371     10 #> 21      1     as1t accuracy right right 0.4784350     11 #> 23      1     as1t  neutral  left right 0.4857227     12 #> 25      1     as1t accuracy  left  left 0.3832396     13 #> 27      1     as1t accuracy  left  left 0.4871498     14 #> 29      1     as1t  neutral right right 0.3716643     15 #> 31      1     as1t    speed right right 0.4781147     16 #> 33      1     as1t accuracy right right 0.4408188     17 #> 35      1     as1t    speed right right 0.7214501     18 #> 37      1     as1t accuracy right right 0.4230714     19 #> 39      1     as1t    speed  left  left 0.3618097     20 #> 41      1     as1t accuracy right right 0.4480875     21 #> 43      1     as1t  neutral  left  left 0.4926888     22 #> 45      1     as1t  neutral  left  left 0.4814469     23 #> 47      1     as1t    speed  left  left 0.4239899     24 #> 49      1     as1t accuracy right right 0.4494411     25 #> 51      1     as1t  neutral right right 0.2845162     26 #> 53      1     as1t accuracy  left  left 0.4103552     27 #> 55      1     as1t  neutral  left  left 0.4888979     28 #> 57      1     as1t  neutral right right 0.5702429     29 #> 59      1     as1t    speed  left  left 0.5434171     30 #> 61      1     as1t    speed  left right 0.4420215     31 #> 63      1     as1t  neutral right  left 0.4352314     32 #> 65      1     as1t    speed  left  left 0.3629440     33 #> 67      1     as1t accuracy  left  left 0.4363704     34 #> 69      1     as1t accuracy  left  left 0.5165859     35 #> 71      1     as1t    speed right right 0.2329370     36 #> 73      1     as1t  neutral right  left 0.4209916     37 #> 75      1     as1t accuracy right right 0.3697773     38 #> 77      1     as1t    speed  left  left 0.3620859     39 #> 79      1     as1t  neutral right right 0.4218489     40 #> 81      1     as1t    speed right right 0.4582760     41 #> 83      1     as1t    speed  left  left 0.6222035     42 #> 85      1     as1t  neutral right right 0.5501514     43 #> 87      1     as1t  neutral right right 0.5562173     44 #> 89      1     as1t  neutral right  left 0.3308578     45 #> 91      1     as1t accuracy  left  left 0.4291387     46 #> 93      1     as1t    speed  left  left 0.4106609     47 #> 95      1     as1t accuracy right  left 0.3973300     48 #> 97      1     as1t  neutral right  left 0.4200284     49 #> 99      1     as1t    speed right right 0.4578367     50 #> 101     1     as1t    speed  left  left 0.6801057     51 #> 103     1     as1t  neutral right right 0.4261262     52 #> 105     1     as1t accuracy right  left 0.4516258     53 #> 107     1     as1t  neutral  left  left 0.4514092     54 #> 109     1     as1t accuracy right right 0.4627352     55 #> 111     1     as1t    speed right right 0.4137714     56 #> 113     1     as1t    speed  left  left 0.4359555     57 #> 115     1     as1t    speed right right 0.5833709     58 #> 117     1     as1t accuracy right  left 0.5416928     59 #> 119     1     as1t accuracy right right 0.4477701     60 #> 121     1     as1t    speed right right 0.3521652     61 #> 123     1     as1t accuracy right right 0.3923629     62 #> 125     1     as1t    speed  left  left 0.7071289     63 #> 127     1     as1t  neutral  left  left 0.2635930     64 #> 129     1     as1t  neutral  left right 0.3942585     65 #> 131     1     as1t accuracy  left  left 0.4041241     66 #> 133     1     as1t    speed  left  left 0.3925475     67 #> 135     1     as1t  neutral right right 0.4267222     68 #> 137     1     as1t  neutral  left  left 0.6106971     69 #> 139     1     as1t  neutral  left  left 0.2856575     70 #> 141     1     as1t    speed right right 0.3661951     71 #> 143     1     as1t    speed  left  left 0.4539706     72 #> 145     1     as1t  neutral right right 0.6073888     73 #> 147     1     as1t  neutral right right 0.3937585     74 #> 149     1     as1t    speed  left  left 0.8532253     75 #> 151     1     as1t    speed  left  left 0.4771818     76 #> 153     1     as1t    speed right  left 0.4780734     77 #> 155     1     as1t  neutral  left  left 0.3576665     78 #> 157     1     as1t accuracy right  left 0.5329628     79 #> 159     1     as1t    speed right right 0.5859997     80 #> 161     1     as1t    speed  left right 0.3894043     81 #> 163     1     as1t accuracy right right 0.5642233     82 #> 165     1     as1t accuracy  left  left 0.7080549     83 #> 167     1     as1t  neutral right right 0.5806419     84 #> 169     1     as1t    speed right right 0.4765308     85 #> 171     1     as1t    speed right right 0.4278950     86 #> 173     1     as1t accuracy  left right 0.6930289     87 #> 175     1     as1t    speed  left  left 0.3558048     88 #> 177     1     as1t accuracy right right 0.3852970     89 #> 179     1     as1t accuracy  left right 0.6808507     90 #> 181     1     as1t accuracy right right 0.4010744     91 #> 183     1     as1t    speed  left right 0.4898041     92 #> 185     1     as1t    speed  left  left 0.3571478     93 #> 187     1     as1t accuracy right right 0.5354656     94 #> 189     1     as1t    speed  left  left 0.7466936     95 #> 191     1     as1t  neutral right right 0.3976331     96 #> 193     1     as1t  neutral  left  left 0.3756732     97 #> 195     1     as1t    speed  left  left 0.3050619     98 #> 197     1     as1t accuracy  left  left 0.4066049     99 #> 199     1     as1t  neutral right right 0.4417062    100 #> 201     1     as1t accuracy right  left 0.4312144    101 #> 203     1     as1t accuracy right right 0.3898702    102 #> 205     1     as1t  neutral right  left 0.4510897    103 #> 207     1     as1t accuracy right right 0.6247644    104 #> 209     1     as1t    speed right right 0.3660733    105 #> 211     1     as1t accuracy right  left 0.5081766    106 #> 213     1     as1t  neutral  left  left 0.3892200    107 #> 215     1     as1t  neutral right right 0.4890932    108 #> 217     1     as1t  neutral right right 0.3420377    109 #> 219     1     as1t accuracy right  left 0.6429250    110 #> 221     1     as1t  neutral right right 0.4056906    111 #> 223     1     as1t    speed  left right 0.7025811    112 #> 225     1     as1t  neutral  left  left 0.4051002    113 #> 227     1     as1t  neutral right right 0.4943891    114 #> 229     1     as1t accuracy  left  left 0.5882688    115 #> 231     1     as1t  neutral right  left 0.3699440    116 #> 233     1     as1t    speed right right 0.3704505    117 #> 235     1     as1t accuracy  left  left 0.6705428    118 #> 237     1     as1t  neutral right right 0.3159059    119 #> 239     1     as1t  neutral  left right 0.4847010    120 #> 241     1     as1t accuracy right  left 0.4324297    121 #> 243     1     as1t  neutral  left right 0.5664530    122 #> 245     1     as1t accuracy  left  left 0.4293301    123 #> 247     1     as1t accuracy right right 0.3012615    124 #> 249     1     as1t accuracy right right 0.4869081    125 #> 251     1     as1t  neutral  left right 0.5618266    126 #> 253     1     as1t accuracy right right 0.3788505    127 #> 255     1     as1t  neutral  left  left 0.3272770    128 #> 257     1     as1t    speed  left  left 0.4169653    129 #> 259     1     as1t accuracy right right 0.5691731    130 #> 261     1     as1t  neutral right right 0.4331212    131 #> 263     1     as1t  neutral right right 0.3371760    132 #> 265     1     as1t  neutral  left right 0.4359665    133 #> 267     1     as1t accuracy right right 0.3687194    134 #> 269     1     as1t    speed right  left 0.4088934    135 #> 271     1     as1t accuracy right right 0.4429542    136 #> 273     1     as1t  neutral right right 0.4764527    137 #> 275     1     as1t accuracy right right 0.4514915    138 #> 277     1     as1t  neutral  left  left 0.4647433    139 #> 279     1     as1t  neutral  left  left 0.3372161    140 #> 281     1     as1t accuracy right right 0.6395568    141 #> 283     1     as1t accuracy right right 0.5097707    142 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 24878 rows ] # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Priors for the Chosen Model — prior","title":"Specify Priors for the Chosen Model — prior","text":"values entered manually default can recycled another prior (given update argument).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Priors for the Chosen Model — prior","text":"","code":"prior(   design,   type = NULL,   update = NULL,   do_ask = NULL,   fill_default = TRUE,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Priors for the Chosen Model — prior","text":"design Design list prior constructed, typically output design() type Character. type group-level model plan using .e. diagonal update Prior list copy values do_ask Character. parameter types hyperparameters ask prior specification, .e. Sigma, mu loadings factor models, theta_mu_mean also works. fill_default Boolean, TRUE fill non-specified parameters, parameters outside do_ask, default values ... Either values prefill, .e. theta_mu_mean = c(1:6), additional arguments n_factors = 2","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Priors for the Chosen Model — prior","text":"prior list object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify Priors for the Chosen Model — prior","text":"value supplied, user prompted enter numeric values (functions evaluate numbers). get prior help use prior_help(type). type e.g. 'diagonal'.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify Priors for the Chosen Model — prior","text":"","code":"# First define a design for the model design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then set up a prior using prior p_vector=c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),                      t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) psd <- c(v_Sleft=1,v_Sright=1,a=.3,a_Eneutral=.3,a_Eaccuracy=.3,                      t0=.4,Z=1,sv=.4,SZ=1) # Here we left the variance prior at default prior_DDMaE <- prior(design_DDMaE,mu_mean=p_vector,mu_sd=psd) # Also add a group-level variance prior: pscale <- c(v_Sleft=.6,v_Sright=.6,a=.3,a_Eneutral=.3,a_Eaccuracy=.3,                              t0=.2,Z=.5,sv=.4,SZ=.3) df <- .4 prior_DDMaE <- prior(design_DDMaE,mu_mean=p_vector,mu_sd=psd, A = pscale, df = df) # If we specify a new design design_DDMat0E <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~E, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #>  [1] \"v_Sleft\"      \"v_Sright\"     \"a\"            \"a_Eneutral\"   \"a_Eaccuracy\"  #>  [6] \"t0\"           \"t0_Eneutral\"  \"t0_Eaccuracy\" \"Z\"            \"sv\"           #> [11] \"SZ\"           #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>         E t0 t0_Eneutral t0_Eaccuracy #>     speed  1           0            0 #>   neutral  1           1            0 #>  accuracy  1           0            1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  # We can easily update the prior prior_DDMat0E <- prior(design_DDMat0E, update = prior_DDMaE)"},{"path":"https://ampl-psych.github.io/EMC2/reference/prior_help.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior Specification Information — prior_help","title":"Prior Specification Information — prior_help","text":"Prints information associated prior certain 'type'","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior_help.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior Specification Information — prior_help","text":"","code":"prior_help(type)"},{"path":"https://ampl-psych.github.io/EMC2/reference/prior_help.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior Specification Information — prior_help","text":"type character string indicating 'type' model run (e.g. 'standard' 'single')","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior_help.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior Specification Information — prior_help","text":"Invisible return list information also printed","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior_help.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prior Specification Information — prior_help","text":"","code":"prior_help('diagonal') #> type: mu  #> Group-level mean  #>  #>   Hyperparameters:  #>   - theta_mu_mean : mean of the group-level mean prior  #>   - theta_mu_var : variance of the group-level mean prior  #>  #> type: Sigma  #> Group-level covariance matrix  #>  #>   Hyperparameters:  #>   - v : degrees of freedom on the group-level variance prior  #>   - A : scale on the group-level variance prior, larger values lead to larger variances  #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/profile_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood Profile Plots — profile_plot","title":"Likelihood Profile Plots — profile_plot","text":"Creates likelihood profile plots design experimental data varying one model parameter holding others constant.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/profile_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood Profile Plots — profile_plot","text":"","code":"profile_plot(   data,   design,   p_vector,   range = 0.5,   layout = NA,   p_min = NULL,   p_max = NULL,   use_par = NULL,   n_point = 100,   n_cores = 1,   round = 3,   true_args = list(),   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/profile_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood Profile Plots — profile_plot","text":"data dataframe. Experimental data used, needed design mapping design design list. Created using design. p_vector Named vector parameter values (typically created sampled_pars(design)) range Numeric. max min p_vector + range/2 p_vector - range/2, unless specified p_min p_max. layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. p_min Named vector. specified instead use values minimum range selected parameters. p_max Named vector. specified instead use values maximum range selected parameters. use_par Character vector. specified plot profiles specified parameters. n_point Integer. Number evenly spaced points calculate likelihood n_cores Number likelihood points evenly spaced minimum maximum likelihood range. round Integer. many digits output rounded. true_args list. Optional additional arguments can passed plot.default plotting true vertical line. ... Optional additional arguments can passed plot.default.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/profile_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood Profile Plots — profile_plot","text":"Vector highest likelihood point, input mismatch true highest point","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/profile_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood Profile Plots — profile_plot","text":"","code":"# \\donttest{ # First create a design design_DDMaE <- design(data = forstmann,model=DDM,                       formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                       constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then create a p_vector: p_vector=c(v_Sleft=-2,v_Sright=2,a=log(.95),a_Eneutral=log(1.5),a_Eaccuracy=log(2),           t0=log(.25),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) # Make a profile plot for some parameters. Specifying a custom range for t0. profile_plot(p_vector = p_vector, p_min = c(t0 = -1.35),              p_max = c(t0 = -1.45), use_par = c(\"a\", \"t0\", \"SZ\"),              data = forstmann, design = design_DDMaE, n_point = 10)  #>      true    max  miss #> a  -0.051 -0.190 0.139 #> t0 -1.386 -1.386 0.000 #> SZ  0.000 -0.139 0.139 # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/recovery.html","id":null,"dir":"Reference","previous_headings":"","what":"Recovery Plots — recovery.emc","title":"Recovery Plots — recovery.emc","text":"Plots recovery data generating parameters/samples. Full range samples manipulations described get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/recovery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recovery Plots — recovery.emc","text":"","code":"# S3 method for class 'emc' recovery(   emc,   true_pars,   selection = \"mu\",   layout = NA,   do_CI = TRUE,   correlation = \"pearson\",   stat = \"rmse\",   digits = 3,   CI = 0.95,   ci_plot_args = list(),   ... )  recovery(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/recovery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recovery Plots — recovery.emc","text":"emc emc object true_pars vector data-generating parameters emc object data-generating samples selection Character vector. Indicates parameter types plot (e.g., alpha, mu, sigma2, correlation). layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. do_CI Boolean. TRUE also include bars representing credible intervals correlation Character. correlation include plot. Options either pearson spearman stat Character. statistic include plot. Options either rmse coverage digits Integer. many digits round statistic correlation plot CI Numeric. size credible intervals. Default .95 (95%). ci_plot_args list. Optional additional arguments passed plot.default plotting credible intervals (see par()) ... Optional arguments can passed get_pars plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/recovery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recovery Plots — recovery.emc","text":"Invisible list RMSE, coverage, Pearson Spearman correlations.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/recovery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recovery Plots — recovery.emc","text":"","code":"# Make up some values that resemble posterior samples # Normally this would be true values that were used to simulate the data # Make up some values that resemble posterior samples # Normally this would be true values that were used to simulate the data pmat <- matrix(rnorm(12, mean = c(-1, -.6, -.4, -1.5), sd = .01), ncol = 4, byrow = TRUE) # Conventionally this would be created before one makes data with true values recovery(samples_LNR, pmat, correlation = \"pearson\", stat = \"rmse\", selection = \"alpha\")  # Similarly we can plot recovery of other parameters with a set of true samples true_samples <- samples_LNR # Normally this would be data-generating samples recovery(samples_LNR, true_samples, correlation = \"pearson\", stat = \"rmse\",          selection = \"correlation\", cex = 1.5,          ci_plot_args = list(lty = 3, length = .2, lwd = 2, col = \"brown\"))"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating Marginal Likelihoods Using WARP-III Bridge Sampling — run_bridge_sampling","title":"Estimating Marginal Likelihoods Using WARP-III Bridge Sampling — run_bridge_sampling","text":"Uses bridge sampling matches proposal distribution first three moments posterior distribution get accurate estimate marginal likelihood. marginal likelihood can used computing Bayes factors posterior model probabilities.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating Marginal Likelihoods Using WARP-III Bridge Sampling — run_bridge_sampling","text":"","code":"run_bridge_sampling(   emc,   stage = \"sample\",   filter = NULL,   repetitions = 1,   cores_for_props = 4,   cores_per_prop = 1,   both_splits = TRUE,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating Marginal Likelihoods Using WARP-III Bridge Sampling — run_bridge_sampling","text":"emc emc object set converged samples stage character indicating stage use, defaults sample filter integer vector. integer, exclude integer. vector include everything range. repetitions integer. many times repeat bridge sampling scheme. Can help get estimate stability estimate. cores_for_props Integer. Warp-III evaluates posterior 4 different proposal densities. CPU, 4 cores parallel, 2 also already helpful. cores_per_prop Integer. Per density can also parallelize across subjects. Eventual cores cores_for_props * cores_per_prop. efficiency users prioritize cores_for_props 4. both_splits Boolean. Bridge sampling uses proposal density target density. can estimate stability samples therefore MLL estimate, running 2 bridge sampling iterations first one uses first half samples proposal second half target, second run uses opposite. set FALSE, run bridge sampling instead odd-even iterations split get reasonable estimate just one run. ... Additional, optional -depth hyperparameters","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating Marginal Likelihoods Using WARP-III Bridge Sampling — run_bridge_sampling","text":"vector length repetitions contains marginal log likelihood estimates per repetition","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating Marginal Likelihoods Using WARP-III Bridge Sampling — run_bridge_sampling","text":"enough posterior samples collected using fit(), bridge sampling can unstable. recommended run run_bridge_sampling() several times repetitions argument examine stable results . can difficult converge bridge sampling exceptionally large models, large number subjects (> 100) /cognitive model parameters. practical introduction: Gronau, Q. F., Heathcote, ., & Matzke, D. (2020). Computing Bayes factors evidence-accumulation models using Warp-III bridge sampling. Behavior research methods, 52(2), 918-937. doi.org/10.3758/s13428-019-01290-6 mathematical background: Meng, X.-L., & Wong, W. H. (1996). Simulating ratios normalizing constants via simple identity: theoretical exploration. Statistica Sinica, 6, 831-860. http://www3.stat.sinica.edu.tw/statistica/j6n4/j6n43/j6n43.htm Meng, X.-L., & Schilling, S. (2002). Warp bridge sampling. Journal Computational Graphical Statistics, 11(3), 552-586. doi.org/10.1198/106186002457","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating Marginal Likelihoods Using WARP-III Bridge Sampling — run_bridge_sampling","text":"","code":"# \\donttest{ # After `fit` has converged on a specific model # We can take those samples and calculate the marginal log-likelihood for them MLL <- run_bridge_sampling(samples_LNR, cores_for_props = 1, both_splits = FALSE) # This will run on 2*4 cores (since 4 is the default for ``cores_for_props``) # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Fine-Tuned Model Estimation — run_emc","title":"Fine-Tuned Model Estimation — run_emc","text":"Although typically users rely fit, function can used fine-tuned specification estimation needs. function throw error stage skipped, stages run order (\"preburn\", \"burn\", \"adapt\", \"sample\"). details can found fit help files (?fit).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fine-Tuned Model Estimation — run_emc","text":"","code":"run_emc(   emc,   stage,   stop_criteria,   search_width = 1,   step_size = 100,   verbose = FALSE,   verboseProgress = FALSE,   fileName = NULL,   particle_factor = 50,   cores_per_chain = 1,   cores_for_chains = length(emc),   max_tries = 20,   n_blocks = 1,   thin = FALSE,   trim = TRUE )"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fine-Tuned Model Estimation — run_emc","text":"emc emc object stage string. Indicates stage run, either preburn, burn, adapt sample stop_criteria list. Defines stopping criteria types parameters hold. See ?fit. search_width double. Tunes target acceptance probability MCMC process. fine-tunes width search space obtain desired acceptance probability. 1 default width, increases lead broader search. step_size integer. step, stopping requirements specified stop_criteria checked proposal distributions updated. Defaults 100. verbose Logical. Whether print messages step current status regarding stop_criteria. verboseProgress Logical. Whether print progress bar within step . print one progress bar chain cores_for_chains = 1. fileName string. specified autosave emc location every iteration. particle_factor integer. particle_factor multiplied square root number sampled parameters determines number particles used. cores_per_chain integer. many cores use per chain. Parallelizes across participant calculations. available Linux Mac OS. Windows, parallelization across chains (cores_for_chains) available. cores_for_chains integer. many cores use across chains. Defaults number chains. total number cores used equal cores_per_chain * cores_for_chains. max_tries integer. many times try meet finish conditions specified stop_criteria? Defaults 20. max_tries ignored required number iterations reached yet. n_blocks integer. Number blocks. block parameter chains updated blocks. can helpful extremely tough models large number parameters. thin boolean. TRUE automatically thin MCMC samples, closely matched ESS. Can also set double, case 1/thin chain removed (integer). trim boolean. TRUE automatically remove redundant samples (.e. preburn, burn, adapt).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fine-Tuned Model Estimation — run_emc","text":"emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_emc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fine-Tuned Model Estimation — run_emc","text":"","code":"# \\donttest{ # First define a design design_in <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1),                            constants=c(s=log(1))) #> Parameter(s) SZ, st0, sv not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  #> $sv #>  sv #>   1 #>  # Then make the emc, we've omitted a prior here for brevity so default priors will be used. emc <- make_emc(forstmann, design_in) #> Processing data set 1 #> Likelihood speedup factor: 4 (3955 unique trials)  # Now for example we can specify that we only want to run the \"preburn\" phase # for MCMC 10 iterations emc <- run_emc(emc, stage = \"preburn\", stop_criteria = list(iter = 10), cores_for_chains = 1) # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_sbc.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation-Based Calibration — run_sbc","title":"Simulation-Based Calibration — run_sbc","text":"Runs SBC EMC2 model associated design. Returns normalized rank (0 1) prior samples. hierarchical models group-level mean (implied) group-level (co-)variance returned. non-hierarchical models subject-level parameters rank returned.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_sbc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation-Based Calibration — run_sbc","text":"","code":"run_sbc(   design_in,   prior_in,   replicates = 250,   trials = 100,   n_subjects = 30,   plot_data = FALSE,   verbose = TRUE,   fileName = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_sbc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation-Based Calibration — run_sbc","text":"design_in emc design list. design model used SBC prior_in emc prior list. prior design used SBC replicates Integer. number samples draw prior trials Integer. number trials simulated data (per subject) n_subjects Integer. used hierarchical models. number subjects used data generation replicate plot_data Boolean. Whether plot data simulated (aggregated across subjects) verbose Verbose. Whether print progress related messages fileName Character. Highly recommended, saves temporary results fileName ... list optional additional arguments can passed fit make_emc","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_sbc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation-Based Calibration — run_sbc","text":"ranks prior samples. hierarchical models also prior-generated subject-level parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/sampled_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Model Parameters from a Design — sampled_pars","title":"Get Model Parameters from a Design — sampled_pars","text":"Makes vector zeroes, names length corresponding model parameters design.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/sampled_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Model Parameters from a Design — sampled_pars","text":"","code":"sampled_pars(   x,   model = NULL,   doMap = TRUE,   add_da = FALSE,   all_cells_dm = FALSE )  # S3 method for class 'emc.design' sampled_pars(   x,   model = NULL,   doMap = TRUE,   add_da = FALSE,   all_cells_dm = FALSE )  # S3 method for class 'emc.prior' sampled_pars(   x,   model = NULL,   doMap = TRUE,   add_da = FALSE,   all_cells_dm = FALSE )  # S3 method for class 'emc' sampled_pars(   x,   model = NULL,   doMap = TRUE,   add_da = FALSE,   all_cells_dm = FALSE )"},{"path":"https://ampl-psych.github.io/EMC2/reference/sampled_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Model Parameters from a Design — sampled_pars","text":"x emc.design object made design() emc object. model model list. Defaults model specified design list. doMap logical. TRUE also include attribute map design matrices perform mapping back design add_da Boolean. Whether include relevant data columns map attribute all_cells_dm Boolean. Whether include levels factor mapping attribute, even one dropped design","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/sampled_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Model Parameters from a Design — sampled_pars","text":"Named vector.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/sampled_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Model Parameters from a Design — sampled_pars","text":"","code":"# First define a design design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then for this design get which cognitive model parameters are sampled: sampled_pars(design_DDMaE) #>     v_Sleft    v_Sright           a  a_Eneutral a_Eaccuracy          t0  #>           0           0           0           0           0           0  #>           Z          sv          SZ  #>           0           0           0  #> attr(,\"map\") #> attr(,\"map\")$v #>    v_Sleft v_Sright #> 1        1        0 #> 58       0        1 #>  #> attr(,\"map\")$a #>    a a_Eneutral a_Eaccuracy #> 1  1          0           0 #> 20 1          1           0 #> 39 1          0           1 #>  #> attr(,\"map\")$t0 #>   t0 #> 1  1 #>  #> attr(,\"map\")$s #>   s #> 1 1 #>  #> attr(,\"map\")$Z #>   Z #> 1 1 #>  #> attr(,\"map\")$sv #>   sv #> 1  1 #>  #> attr(,\"map\")$SZ #>   SZ #> 1  1 #>  #> attr(,\"map\")$st0 #>   st0 #> 1   1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/samples_LNR.html","id":null,"dir":"Reference","previous_headings":"","what":"LNR Model of Forstmann Data (First 3 Subjects) — samples_LNR","title":"LNR Model of Forstmann Data (First 3 Subjects) — samples_LNR","text":"emc object limited number samples subjects Forstmann dataset. object nested list lenght three, list containing MCMC samples respective chain. MCMC samples stored samples element.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/samples_LNR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LNR Model of Forstmann Data (First 3 Subjects) — samples_LNR","text":"","code":"samples_LNR"},{"path":"https://ampl-psych.github.io/EMC2/reference/samples_LNR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"LNR Model of Forstmann Data (First 3 Subjects) — samples_LNR","text":"emc object. emc object list specific structure elements, outlined . data list dataframes, one subject included par_names character vector containing model parameter names n_pars number parameters model n_subjects number unique subject ID's data model list containing model functions nuisance logical vector indicating parameters nuisance parameters subjects vector containing unique subject ID's type type model e.g., \"standard\" \"diagonal\" prior list holds prior theta_mu (model parameters). Contains mean (theta_mu_mean), covariance matrix (theta_mu_var), degrees freedom (v), scale () inverse covariance matrix (theta_mu_invar) samples list defined structure containing samples, see Samples Element section detail sampler_nuis sampler list nuisance parameters (case none), similarly structured overall samples list one MCMC chains.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/samples_LNR.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"LNR Model of Forstmann Data (First 3 Subjects) — samples_LNR","text":"https://www.pnas.org/doi/10.1073/pnas.0805903105","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/samples_LNR.html","id":"samples-element","dir":"Reference","previous_headings":"","what":"Samples Element","title":"LNR Model of Forstmann Data (First 3 Subjects) — samples_LNR","text":"samples element emc object contains different types samples estimated EMC2. include three main types samples theta_mu, theta_var alpha well number items detailed . theta_mu samples used estimating model parameters (group level), array size (n_pars x n_samples) theta_var samples used estimating parameter covariance matrix, array size (n_pars x n_pars x n_samples) alpha samples used estimating subject random effects, array size (n_pars x n_subjects x n_samples) stage vector containing PMwG stage sample drawn subj_ll winning particles log-likelihood subject sample a_half Mixing weights used Gibbs step creating new sample covariance matrix last_theta_var_inv inverse last samples covariance matrix idx index last sample drawn","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/subset.emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Shorten an emc Object — subset.emc","title":"Shorten an emc Object — subset.emc","text":"Shorten emc Object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/subset.emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shorten an emc Object — subset.emc","text":"","code":"# S3 method for class 'emc' subset(   x,   stage = \"sample\",   filter = NULL,   thin = 1,   keep_stages = FALSE,   length.out = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/subset.emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shorten an emc Object — subset.emc","text":"x emc object stage character string. Indicates sampling stage(s) take samples (.e. preburn, burn, adapt, sample) filter Integer numeric vector. integer supplied, iterations integer removed. vector supplied, iterations within range kept. thin integer. much thin chains keep_stages Boolean. TRUE, remove samples unselected stages. length.Integer. Alternatively thinning, can also select desired length MCMC chains, thinned appropriately. ... additional optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/subset.emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shorten an emc Object — subset.emc","text":"shortened emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/subset.emc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shorten an emc Object — subset.emc","text":"","code":"subset(samples_LNR, length.out = 10) #> Iterations:  #>      preburn burn adapt sample #> [1,]       0    0     0     10 #> [2,]       0    0     0     10 #> [3,]       0    0     0     10 #>  #> Subjects:  #> [1] \"as1t\" \"bd6t\" \"bl1t\" #>  #> Parameters:  #> [1] \"m\"     \"m_lMd\" \"s\"     \"t0\""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.design.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for emc.design objects — summary.emc.design","title":"Summary method for emc.design objects — summary.emc.design","text":"Prints summary design object, including sampled parameters design matrices. continuous covariates just prints one row, instead covariates.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for emc.design objects — summary.emc.design","text":"","code":"# S3 method for class 'emc.design' summary(object, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for emc.design objects — summary.emc.design","text":"object object class emc.design containing design summarize ... Additional arguments (used)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for emc.design objects — summary.emc.design","text":"Invisibly returns design matrices","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Statistics for emc Objects — summary.emc","title":"Summary Statistics for emc Objects — summary.emc","text":"Computes quantiles, Rhat ESS selected model parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Statistics for emc Objects — summary.emc","text":"","code":"# S3 method for class 'emc' summary(   object,   selection = c(\"mu\", \"sigma2\", \"alpha\"),   probs = c(0.025, 0.5, 0.975),   digits = 3,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Statistics for emc Objects — summary.emc","text":"object object class emc selection character string indicating parameter type Defaults mu, sigma2, alpha. See information. probs quantiles computed. Defaults 2.5%, 50% 97.5% quantiles. digits integer specifying rounding output. ... Optional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Statistics for emc Objects — summary.emc","text":"list summary output.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary Statistics for emc Objects — summary.emc","text":"Note selection = alpha by_subject = TRUE (default) used, summary statistics computed individual level. console summary statistics subjects returned function. emc object run fit yet supplied, summary design returned.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for emc.prior objects — summary.emc.prior","title":"Summary method for emc.prior objects — summary.emc.prior","text":"Prints summary prior specification, including descriptions prior types associated hyperparameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for emc.prior objects — summary.emc.prior","text":"","code":"# S3 method for class 'emc.prior' summary(object, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for emc.prior objects — summary.emc.prior","text":"object object class 'emc.prior' containing prior specifications ... Additional arguments passed methods (currently used)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for emc.prior objects — summary.emc.prior","text":"Invisibly returns NULL. Called side effect printing summary.","code":""},{"path":[]},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary method for emc.prior objects — summary.emc.prior","text":"","code":"# Take a prior object prior <- get_prior(samples_LNR) summary(prior) #> mu  -  Group-level mean  #>  #> mean of the group-level mean prior :  #>     m m_lMd     s    t0  #>     0     0     0     0  #> variance of the group-level mean prior :  #>       m m_lMd s t0 #> m     1     0 0  0 #> m_lMd 0     1 0  0 #> s     0     0 1  0 #> t0    0     0 0  1 #>  #> Sigma  -  Group-level covariance matrix  #>  #> degrees of freedom on the group-level (co-)variance prior, 2 leads to uniform correlations. Single value :  #> [1] 2 #> scale on the group-level variance prior, larger values lead to larger variances :  #>     m m_lMd     s    t0  #>   0.3   0.3   0.3   0.3  #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/update2version.html","id":null,"dir":"Reference","previous_headings":"","what":"Update EMC Objects to the Current Version — update2version","title":"Update EMC Objects to the Current Version — update2version","text":"function updates EMC objects created older versions package compatible current version.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/update2version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update EMC Objects to the Current Version — update2version","text":"","code":"update2version(emc)"},{"path":"https://ampl-psych.github.io/EMC2/reference/update2version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update EMC Objects to the Current Version — update2version","text":"emc EMC object update","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/update2version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update EMC Objects to the Current Version — update2version","text":"updated EMC object compatible current version","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/update2version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update EMC Objects to the Current Version — update2version","text":"","code":"# Update the model to current version updated_model <- update2version(samples_LNR)"},{"path":[]},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"new-features-3-1-1","dir":"Changelog","previous_headings":"","what":"New features","title":"EMC2 3.1.1","text":"added thin fit/run_emc can either set TRUE automatically thin based ESS, numeric keep 1/x samples added probit/SDT model bimanual choices","code":""},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"bug-fixes-3-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"EMC2 3.1.1","text":"Rare bug sampling removed Small bug fixes plot_data make flexible cleared argumentation run_emc/fit","code":""},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"emc2-310","dir":"Changelog","previous_headings":"","what":"EMC2 3.1.0","title":"EMC2 3.1.0","text":"CRAN release: 2025-03-10","code":""},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"new-features-3-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"EMC2 3.1.0","text":"model_averaging function, allows compare evidence effect across set models","code":""},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"bug-fixes-3-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"EMC2 3.1.0","text":"Small hotfix creating proposals start burn sometimes fail large number subjects Patched old error model bounds weren’t considered data generation Fixed error compare_subject return IC whole dataset every subject.","code":""},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"emc2-300","dir":"Changelog","previous_headings":"","what":"EMC2 3.0.0","title":"EMC2 3.0.0","text":"CRAN release: 2025-03-07","code":""},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"new-features-3-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"EMC2 3.0.0","text":"IMPORTANT: keep old samples compatible current EMC2, run update2version() IMPORTANT: Design prior now also S3 methods S3 classes, see EMC2 paper plot_fit deprecated branched plot_density, plot_cdf plot_stat sampled_p_vector deprecated now named sampled_pars Added design_plot function, makes plot proposed accumulation process Sampling completely reworked. Adaptive tuning number particles stable convergence","code":""},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"bug-fixes-3-0-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"EMC2 3.0.0","text":"Fixed rare case conditional MVN break Fixed bug predict joint models Suppressed unwanted print statements DDM estimation/prediction Added checks wide array functions ensure proper input format","code":""},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"emc2-210","dir":"Changelog","previous_headings":"","what":"EMC2 2.1.0","title":"EMC2 2.1.0","text":"CRAN release: 2024-10-14","code":""},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"new-features-2-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"EMC2 2.1.0","text":"Added website vignettes, changelog reference Added run_sbc() function perform simulation-based calibration design Added prior_help() get information prior certain type Changed DDM implementation, faster accurate Bridge sampling now also works type = \"blocked\"","code":""},{"path":"https://ampl-psych.github.io/EMC2/news/index.html","id":"bug-fixes-2-1-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"EMC2 2.1.0","text":"Made bridge sampling inverse-gamma inverse-wishart robust Made prior() function work generally","code":""}]
